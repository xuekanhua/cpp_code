<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>我的成长</title>
    <link href="/2021/07/01/1.%E6%88%91%E7%9A%84%E6%88%90%E9%95%BF/"/>
    <url>/2021/07/01/1.%E6%88%91%E7%9A%84%E6%88%90%E9%95%BF/</url>
    
    <content type="html"><![CDATA[<h1 id="关于我"><a href="#关于我" class="headerlink" title="关于我"></a>关于我</h1><h4 id="的大一生活"><a href="#的大一生活" class="headerlink" title="的大一生活"></a>的大一生活</h4><span id="more"></span><The><h2 id="寒假"><a href="#寒假" class="headerlink" title="寒假"></a>寒假</h2><h3 id="寒假目标："><a href="#寒假目标：" class="headerlink" title="寒假目标："></a>寒假目标：</h3><ul><li>线代复习</li><li>高数预习加提高</li><li>英语背单词</li><li>算法贪心与二分</li></ul><h4 id="2月5日"><a href="#2月5日" class="headerlink" title="2月5日"></a>2月5日</h4><h3 id="2月20日进行阶段总结"><a href="#2月20日进行阶段总结" class="headerlink" title="2月20日进行阶段总结"></a>2月20日进行阶段总结</h3><h3 id="总结无了d-￣▽￣-b假期什么都没做。"><a href="#总结无了d-￣▽￣-b假期什么都没做。" class="headerlink" title="总结无了d=====(￣▽￣*)b假期什么都没做。"></a>总结无了d=====(￣▽￣*)b假期什么都没做。</h3><h2 id="下学期"><a href="#下学期" class="headerlink" title="下学期"></a>下学期</h2><h3 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h3><ul><li>好好学习</li><li>初涉算法，数据结构</li><li>准备四级</li><li>补补高数，离散数学</li></ul><h4 id="3月18日"><a href="#3月18日" class="headerlink" title="3月18日"></a>3月18日</h4><h3 id="4月1进行阶段总结-一定要好好学习-～﹃～-zZ"><a href="#4月1进行阶段总结-一定要好好学习-～﹃～-zZ" class="headerlink" title="4月1进行阶段总结/一定要好好学习(～﹃～)~zZ/"></a>4月1进行阶段总结/<em>一定要好好学习(～﹃～)~zZ</em>/</h3><ul><li>算法基本了解</li><li>dp   …..ing</li><li>离散高数算了o(￣┰￣*)ゞ</li><li>英语  …………?</li></ul><h4 id="4月15"><a href="#4月15" class="headerlink" title="4月15"></a>4月15</h4><h3 id="5月1进行阶段总结"><a href="#5月1进行阶段总结" class="headerlink" title="5月1进行阶段总结"></a>5月1进行阶段总结</h3><h4 id="4月29"><a href="#4月29" class="headerlink" title="4月29"></a>4月29</h4><ul><li>蓝桥杯 省一    =======》  开心q(≧▽≦q)</li><li>五一 准备icpc省赛   从头巩固算法知识。</li><li>数据结构提上日程</li><li>高数物理补习</li></ul><h3 id="5月15进行阶段总结"><a href="#5月15进行阶段总结" class="headerlink" title="5月15进行阶段总结"></a>5月15进行阶段总结</h3><h4 id="5月9日"><a href="#5月9日" class="headerlink" title="5月9日"></a>5月9日</h4><ul><li>5.1假期又荒废了（《****》我恨你o(≧口≦)o）</li><li>今天icpc省赛一题都没有做出来全靠大佬带(;´༎ຶД༎ຶ`)      排名165/311；</li><li>高数物理已经落下了2个单元</li><li>下周，补高数物理，体测</li><li>接着学习算法</li></ul><h3 id="5月15进行阶段总"><a href="#5月15进行阶段总" class="headerlink" title="5月15进行阶段总"></a><del>5月15进行阶段总</del></h3><h4 id="6月10日"><a href="#6月10日" class="headerlink" title="6月10日"></a>6月10日</h4><ul><li>本来想5.15总结的没有想到一拖拖到现在</li><li>总的来说快期末了要好好复习了   <del>哪怕没有复习的动力</del></li><li>已经一个多月没有碰算法题了  一直在啃Java ，也没有搞懂。</li><li>快放暑假了，暑假要好好规划 <del>不能再荒废了</del><ol><li>学车</li><li>刷题（数据结构 动态规划）</li><li>学Java，认真从头到尾学一遍</li><li>收拾好自己的房间</li><li>锻炼锻炼吧</li></ol></li></ul><ul><li>期末了要好好复习</li></ul><h3 id="放假后再进行阶段总结吧"><a href="#放假后再进行阶段总结吧" class="headerlink" title="放假后再进行阶段总结吧"></a>放假后再进行阶段总结吧</h3><ul><li>总结可能要放到下一篇去了</li></ul>]]></content>
    
    
    <categories>
      
      <category>develop</category>
      
    </categories>
    
    
    <tags>
      
      <tag>生活</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>java string</title>
    <link href="/2021/07/01/23Java%E5%B0%8F%E8%AF%BE%E5%A0%82/"/>
    <url>/2021/07/01/23Java%E5%B0%8F%E8%AF%BE%E5%A0%82/</url>
    
    <content type="html"><![CDATA[<h1 id="java-string"><a href="#java-string" class="headerlink" title="java string"></a>java string</h1><p>String中用“==”比较的是地址，用equals比较的是内容</p><span id="more"></span><The><ul><li>类型常量池</li></ul><ul><li>运行时常量池</li><li>字符串常量池<br>1、类型常量池，存放在方法区里面，每个class文件都有一个<br>2、运行时常量池、存放在方法区里面，所有class共用<br>3、字符串常量池：存放在堆区里面<br>而且字符串常量池有一个特点：存放的常量唯一</li></ul><p>因为当我们String a = “xxx”；的时候，会在堆里面的字符串常量池里面“搜索”是否有“xxx”这个对象，</p><p>有：就会将“xxx这个对象的地址指向a”<br>没有：就会在字符串常量池里面新建立一个“xxx”，然后就会把地址引用赋值给a<br>当再声明String b = “xxx”;和第一次声明String = “xxx”;一样，先”搜索“，然后因为已经存在了”xxx“这个对象，那么就不会再创建对象，而是将存在的”xxx“的地址引用赋值给b，所以a和b的地址一样，内容自然也一样，所以两个结果为true</p><p>相关链接：<a href="https://www.jb51.net/article/193813.htm">浅析java中String类型中“==”与“equal”的区别</a></p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">package</span> java1;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">study1</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String args[])</span> </span>&#123;<br>        String s1,s2;<br>        s1=<span class="hljs-keyword">new</span> String(<span class="hljs-string">&quot;星光灿烂&quot;</span>);<br>        s2=<span class="hljs-keyword">new</span> String(<span class="hljs-string">&quot;星光灿烂&quot;</span>);<br>        System.out.println(s1.equals(s2));<br>        System.out.println(s1==s2);<br>        System.out.println(<span class="hljs-string">&quot;-----------------------&quot;</span>);<br>        System.out.println(System.identityHashCode(s1));<br><br>        System.out.println(System.identityHashCode(s2));<br>        System.out.println(<span class="hljs-string">&quot;-----------------------&quot;</span>);<br>        String s3,s4;<br>        s3=<span class="hljs-string">&quot;阳光明媚&quot;</span>;<br>        s4=<span class="hljs-string">&quot;阳光明媚&quot;</span>;<br><span class="hljs-comment">//        s4=&quot;ddd&quot;;</span><br><br>        System.out.println(s3.equals(s4));<br>        System.out.println(s3==s4);<br>        System.out.println(<span class="hljs-string">&quot;-----------------------&quot;</span>);<br>        System.out.println(System.identityHashCode(s3));<br>        System.out.println(System.identityHashCode(s4));<br>        System.out.println(<span class="hljs-string">&quot;-----------------------&quot;</span>);<br>    &#125;<br>&#125;<br><br></code></pre></div></td></tr></table></figure><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">true<br>false<br><br>-----------------------<br>1072408673<br>1531448569<br><br>-----------------------<br>true<br>true<br><br>-----------------------<br>1867083167<br>1867083167<br><br>-----------------------<br></code></pre></div></td></tr></table></figure><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">package</span> java1;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">study1</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String args[])</span> </span>&#123;<br>        String s1,s2;<br>        s1=<span class="hljs-keyword">new</span> String(<span class="hljs-string">&quot;星光灿烂&quot;</span>);<br>        s2=<span class="hljs-keyword">new</span> String(<span class="hljs-string">&quot;星光灿烂&quot;</span>);<br>        System.out.println(s1.equals(s2));<br>        System.out.println(s1==s2);<br>        System.out.println(<span class="hljs-string">&quot;-----------------------&quot;</span>);<br>        System.out.println(System.identityHashCode(s1));<br><br>        System.out.println(System.identityHashCode(s2));<br>        System.out.println(<span class="hljs-string">&quot;-----------------------&quot;</span>);<br>        String s3,s4;<br>        s3=<span class="hljs-string">&quot;阳光明媚&quot;</span>;<br>        s4=<span class="hljs-string">&quot;阳光明媚&quot;</span>;<br>        s4=<span class="hljs-string">&quot;ddd&quot;</span>;<br><br>        System.out.println(s3.equals(s4));<br>        System.out.println(s3==s4);<br>        System.out.println(<span class="hljs-string">&quot;-----------------------&quot;</span>);<br>        System.out.println(System.identityHashCode(s3));<br>        System.out.println(System.identityHashCode(s4));<br>        System.out.println(<span class="hljs-string">&quot;-----------------------&quot;</span>);<br>    &#125;<br>&#125;<br><br></code></pre></div></td></tr></table></figure><h3 id="运行结果-1"><a href="#运行结果-1" class="headerlink" title="运行结果"></a>运行结果</h3><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">true<br>false<br><br>-----------------------<br>1072408673<br>1531448569<br><br>-----------------------<br>false<br>false<br><br>-----------------------<br>1867083167<br>1915910607<br><br>-----------------------<br></code></pre></div></td></tr></table></figure><ul><li>这篇文章代表着我的Java区建好了，从今天开始我会陆续写一些我的Java学习内容当作笔记</li><li>以后还要建立python区以及生活杂谈区💖💖💖💖ヾ(≧▽≦*)o</li></ul><p><img src="/images/p5.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>字符串</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>A - The Child and Homework</title>
    <link href="/2021/04/28/21.TheChildandHomework/"/>
    <url>/2021/04/28/21.TheChildandHomework/</url>
    
    <content type="html"><![CDATA[<h2 id="A-The-Child-and-Homework"><a href="#A-The-Child-and-Homework" class="headerlink" title="A - The Child and Homework"></a><a href="https://vjudge.z180.cn/problem/CodeForces-437A">A - The Child and Homework</a></h2><h2 id="2021-4-26-qlu个人赛"><a href="#2021-4-26-qlu个人赛" class="headerlink" title="2021.4.26,qlu个人赛"></a>2021.4.26,qlu个人赛<br></h2><span id="more"></span><The><h1 id="题干"><a href="#题干" class="headerlink" title="题干"></a>题干</h1><h4 id="Once-upon-a-time-a-child-got-a-test-consisting-of-multiple-choice-questions-as-homework-A-multiple-choice-question-consists-of-four-choices-A-B-C-and-D-Each-choice-has-a-description-and-the-child-should-find-out-the-only-one-that-is-correct-Fortunately-the-child-knows-how-to-solve-such-complicated-test-The-child-will-follow-the-algorithm-1-If-there-is-some-choice-whose-description-at-least-twice-shorter-than-all-other-descriptions-or-at-least-twice-longer-than-all-other-descriptions-then-the-child-thinks-the-choice-is-great-2-If-there-is-exactly-one-great-choice-then-the-child-chooses-it-Otherwise-the-child-chooses-C-the-child-think-it-is-the-luckiest-choice-You-are-given-a-multiple-choice-questions-can-you-predict-child’s-choose"><a href="#Once-upon-a-time-a-child-got-a-test-consisting-of-multiple-choice-questions-as-homework-A-multiple-choice-question-consists-of-four-choices-A-B-C-and-D-Each-choice-has-a-description-and-the-child-should-find-out-the-only-one-that-is-correct-Fortunately-the-child-knows-how-to-solve-such-complicated-test-The-child-will-follow-the-algorithm-1-If-there-is-some-choice-whose-description-at-least-twice-shorter-than-all-other-descriptions-or-at-least-twice-longer-than-all-other-descriptions-then-the-child-thinks-the-choice-is-great-2-If-there-is-exactly-one-great-choice-then-the-child-chooses-it-Otherwise-the-child-chooses-C-the-child-think-it-is-the-luckiest-choice-You-are-given-a-multiple-choice-questions-can-you-predict-child’s-choose" class="headerlink" title="Once upon a time a child got a test consisting of multiple-choice questions as homework. A multiple-choice question consists of four choices: A, B, C and D. Each choice has a description, and the child should find out the only one that is correct.Fortunately the child knows how to solve such complicated test. The child will follow the algorithm:(1) .If there is some choice whose description at least twice shorter than all other descriptions, or at least twice longer than all other descriptions, then the child thinks the choice is great.(2) .If there is exactly one great choice then the child chooses it. Otherwise the child chooses C (the child think it is the luckiest choice).You are given a multiple-choice questions, can you predict child’s choose?"></a>Once upon a time a child got a test consisting of multiple-choice questions as homework. A multiple-choice question consists of four choices: A, B, C and D. Each choice has a description, and the child should find out the only one that is correct.<br>Fortunately the child knows how to solve such complicated test. The child will follow the algorithm:<br>(1) .If there is some choice whose description at least twice shorter than all other descriptions, or at least twice longer than all other descriptions, then the child thinks the choice is great.<br>(2) .If there is exactly one great choice then the child chooses it. Otherwise the child chooses C (the child think it is the luckiest choice).<br>You are given a multiple-choice questions, can you predict child’s choose?</h4><h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><h4 id="The-first-line-starts-with-“A-”-without-quotes-then-followed-the-description-of-choice-A-The-next-three-lines-contains-the-descriptions-of-the-other-choices-in-the-same-format-They-are-given-in-order-B-C-D-Please-note-that-the-description-goes-after-prefix-“X-”-so-the-prefix-mustn’t-be-counted-in-description’s-length-Each-description-is-non-empty-and-consists-of-at-most-100-characters-Each-character-can-be-either-uppercase-English-letter-or-lowercase-English-letter-or-“-”"><a href="#The-first-line-starts-with-“A-”-without-quotes-then-followed-the-description-of-choice-A-The-next-three-lines-contains-the-descriptions-of-the-other-choices-in-the-same-format-They-are-given-in-order-B-C-D-Please-note-that-the-description-goes-after-prefix-“X-”-so-the-prefix-mustn’t-be-counted-in-description’s-length-Each-description-is-non-empty-and-consists-of-at-most-100-characters-Each-character-can-be-either-uppercase-English-letter-or-lowercase-English-letter-or-“-”" class="headerlink" title="The first line starts with “A.” (without quotes), then followed the description of choice A. The next three lines contains the descriptions of the other choices in the same format. They are given in order: B, C, D. Please note, that the description goes after prefix “X.”, so the prefix mustn’t be counted in description’s length.Each description is non-empty and consists of at most 100 characters. Each character can be either uppercase English letter or lowercase English letter, or “_”."></a>The first line starts with “A.” (without quotes), then followed the description of choice A. The next three lines contains the descriptions of the other choices in the same format. They are given in order: B, C, D. Please note, that the description goes after prefix “X.”, so the prefix mustn’t be counted in description’s length.<br>Each description is non-empty and consists of at most 100 characters. Each character can be either uppercase English letter or lowercase English letter, or “_”.</h4><h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><h4 id="Print-a-single-line-with-the-child’s-choice-“A”-“B”-“C”-or-“D”-without-quotes"><a href="#Print-a-single-line-with-the-child’s-choice-“A”-“B”-“C”-or-“D”-without-quotes" class="headerlink" title="Print a single line with the child’s choice: “A”, “B”, “C” or “D” (without quotes)."></a>Print a single line with the child’s choice: “A”, “B”, “C” or “D” (without quotes).</h4><h2 id="Sample-Input："><a href="#Sample-Input：" class="headerlink" title="Sample Input："></a>Sample Input：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">A.VFleaKing<span class="hljs-emphasis">_is_</span>the<span class="hljs-emphasis">_author_</span>of<span class="hljs-emphasis">_this_</span>problem<br>B.Picks<span class="hljs-emphasis">_is_</span>the<span class="hljs-emphasis">_author_</span>of<span class="hljs-emphasis">_this_</span>problem<br>C.Picking<span class="hljs-emphasis">_is_</span>the<span class="hljs-emphasis">_author_</span>of<span class="hljs-emphasis">_this_</span>problem<br>D.Ftiasch<span class="hljs-emphasis">_is_</span>cute<br></code></pre></div></td></tr></table></figure><h2 id="Sample-Output："><a href="#Sample-Output：" class="headerlink" title="Sample Output："></a>Sample Output：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">D<br></code></pre></div></td></tr></table></figure><h2 id="Sample-Input：-1"><a href="#Sample-Input：-1" class="headerlink" title="Sample Input："></a>Sample Input：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">A.ab<br>B.abcde<br>C.ab<br>D.abc<br></code></pre></div></td></tr></table></figure><h2 id="Sample-Output：-1"><a href="#Sample-Output：-1" class="headerlink" title="Sample Output："></a>Sample Output：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">C<br></code></pre></div></td></tr></table></figure><h2 id="Sample-Input：-2"><a href="#Sample-Input：-2" class="headerlink" title="Sample Input："></a>Sample Input：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">A.c<br>B.cc<br>C.c<br>D.c<br></code></pre></div></td></tr></table></figure><h2 id="Sample-Output：-2"><a href="#Sample-Output：-2" class="headerlink" title="Sample Output："></a>Sample Output：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">B<br></code></pre></div></td></tr></table></figure><h2 id="Note："><a href="#Note：" class="headerlink" title="Note："></a>Note：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">In the first sample, the first choice has length 39, the second one has length 35, the third one has length 37,<br>and the last one has length 15.<br>The choice D (length 15) is twice shorter than all other choices&#x27;, so it is great choice. <br>There is no other great choices so the child will choose D.<br><br>In the second sample, no choice is great, so the child will choose the luckiest choice C.<br><br>In the third sample, the choice B (length 2) is twice longer than all other choices&#x27;, so it is great choice. <br>There is no other great choices so the child will choose B.<br></code></pre></div></td></tr></table></figure><h1 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h1><h2 id="题意：给你4个选项，如果有一个选择的描述比所有其他描述至少短两倍，或者比所有其他描述至少长两倍，选它，否则选C。就是判断字符串长度。"><a href="#题意：给你4个选项，如果有一个选择的描述比所有其他描述至少短两倍，或者比所有其他描述至少长两倍，选它，否则选C。就是判断字符串长度。" class="headerlink" title="题意：给你4个选项，如果有一个选择的描述比所有其他描述至少短两倍，或者比所有其他描述至少长两倍，选它，否则选C。就是判断字符串长度。"></a>题意：给你4个选项，如果有一个选择的描述比所有其他描述至少短两倍，或者比所有其他描述至少长两倍，选它，否则选C。<br>就是判断字符串长度。</h2><h1 id="解题代码-AC"><a href="#解题代码-AC" class="headerlink" title="解题代码(AC)"></a>解题代码(AC)</h1><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cmath&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstring&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> N = <span class="hljs-number">10100</span>;<br><span class="hljs-keyword">char</span> a[N] = &#123;&#125;;<br><span class="hljs-keyword">char</span> b[N] = &#123;&#125;;<br><span class="hljs-keyword">char</span> c[N] = &#123;&#125;;<br><span class="hljs-keyword">char</span> d[N] = &#123;&#125;;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    cin&gt;&gt;a;<br>    cin&gt;&gt;b;<br>    cin&gt;&gt;c;<br>    cin&gt;&gt;d;<br>    <span class="hljs-keyword">int</span> q[<span class="hljs-number">4</span>] = &#123;&#125;;<br>    q[<span class="hljs-number">0</span>] = <span class="hljs-built_in">strlen</span>(a) - <span class="hljs-number">2</span>;<br>    q[<span class="hljs-number">1</span>] = <span class="hljs-built_in">strlen</span>(b) - <span class="hljs-number">2</span>;<br>    q[<span class="hljs-number">2</span>] = <span class="hljs-built_in">strlen</span>(c) - <span class="hljs-number">2</span>;<br>    q[<span class="hljs-number">3</span>] = <span class="hljs-built_in">strlen</span>(d) - <span class="hljs-number">2</span>;<br>    <span class="hljs-built_in">sort</span>(q,q + <span class="hljs-number">4</span>);<br>    <span class="hljs-keyword">int</span> flag = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">if</span>(q[<span class="hljs-number">0</span>] * <span class="hljs-number">2</span> &lt;= q[<span class="hljs-number">1</span>])&#123;<span class="hljs-comment">// 判断1</span><br>        flag ++;<br>    &#125;<br>    <span class="hljs-keyword">if</span>(q[<span class="hljs-number">2</span>] * <span class="hljs-number">2</span> &lt;= q[<span class="hljs-number">3</span>])&#123;<span class="hljs-comment">//判断2</span><br>        flag += <span class="hljs-number">2</span>;<br>    &#125;<br>    <span class="hljs-keyword">if</span>(flag == <span class="hljs-number">0</span> || flag == <span class="hljs-number">3</span>)<span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;C&quot;</span>);<span class="hljs-comment">//都有，或都没有就选C</span><br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(flag == <span class="hljs-number">1</span>)&#123;  <span class="hljs-comment">// 只有 1；</span><br>        <span class="hljs-keyword">if</span>(q[<span class="hljs-number">0</span>] == <span class="hljs-built_in">strlen</span>(a) - <span class="hljs-number">2</span>)&#123;<br>            <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;A&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(q[<span class="hljs-number">0</span>] == <span class="hljs-built_in">strlen</span>(b) - <span class="hljs-number">2</span>)&#123;<br>            <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;B&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(q[<span class="hljs-number">0</span>] == <span class="hljs-built_in">strlen</span>(c) - <span class="hljs-number">2</span>)&#123;<br>            <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;C&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(q[<span class="hljs-number">0</span>] == <span class="hljs-built_in">strlen</span>(d) - <span class="hljs-number">2</span>)&#123;<br>            <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;D&quot;</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(flag == <span class="hljs-number">2</span>)&#123; <span class="hljs-comment">// 只有 2；</span><br>        <span class="hljs-keyword">if</span>(q[<span class="hljs-number">3</span>] == <span class="hljs-built_in">strlen</span>(a) - <span class="hljs-number">2</span>)&#123;<br>            <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;A&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(q[<span class="hljs-number">3</span>] == <span class="hljs-built_in">strlen</span>(b) - <span class="hljs-number">2</span>)&#123;<br>            <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;B&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(q[<span class="hljs-number">3</span>] == <span class="hljs-built_in">strlen</span>(c) - <span class="hljs-number">2</span>)&#123;<br>            <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;C&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(q[<span class="hljs-number">3</span>] == <span class="hljs-built_in">strlen</span>(d) - <span class="hljs-number">2</span>)&#123;<br>            <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;D&quot;</span>);<br>        &#125;<br>    &#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><h1 id="代码结束"><a href="#代码结束" class="headerlink" title="代码结束"></a>代码结束</h1><p><img src="/images/p2.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>字符串</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>B - The Child and Set</title>
    <link href="/2021/04/28/22.TheChildandSet/"/>
    <url>/2021/04/28/22.TheChildandSet/</url>
    
    <content type="html"><![CDATA[<h2 id="B-The-Child-and-Set"><a href="#B-The-Child-and-Set" class="headerlink" title="B - The Child and Set"></a><a href="https://vjudge.z180.cn/problem/CodeForces-437B">B - The Child and Set</a></h2><h2 id="2021-4-26-qlu个人赛"><a href="#2021-4-26-qlu个人赛" class="headerlink" title="2021.4.26,qlu个人赛"></a>2021.4.26,qlu个人赛<br></h2><span id="more"></span><The><h1 id="题干"><a href="#题干" class="headerlink" title="题干"></a>题干</h1><h4 id="At-the-children’s-day-the-child-came-to-Picks’s-house-and-messed-his-house-up-Picks-was-angry-at-him-A-lot-of-important-things-were-lost-in-particular-the-favorite-set-of-Picks-Fortunately-Picks-remembers-something-about-his-set-S-its-elements-were-distinct-integers-from-1-to-limit-the-value-of-was-equal-to-sum-here-lowbit-x-equals-2k-where-k-is-the-position-of-the-first-one-in-the-binary-representation-of-x-For-example-lowbit-100102-102-lowbit-100012-12-lowbit-100002-100002-binary-representation-Can-you-help-Picks-and-find-any-set-S-that-satisfies-all-the-above-conditions"><a href="#At-the-children’s-day-the-child-came-to-Picks’s-house-and-messed-his-house-up-Picks-was-angry-at-him-A-lot-of-important-things-were-lost-in-particular-the-favorite-set-of-Picks-Fortunately-Picks-remembers-something-about-his-set-S-its-elements-were-distinct-integers-from-1-to-limit-the-value-of-was-equal-to-sum-here-lowbit-x-equals-2k-where-k-is-the-position-of-the-first-one-in-the-binary-representation-of-x-For-example-lowbit-100102-102-lowbit-100012-12-lowbit-100002-100002-binary-representation-Can-you-help-Picks-and-find-any-set-S-that-satisfies-all-the-above-conditions" class="headerlink" title="At the children’s day, the child came to Picks’s house, and messed his house up. Picks was angry at him. A lot of important things were lost, in particular the favorite set of Picks.Fortunately, Picks remembers something about his set S:its elements were distinct integers from 1 to limit;the value of  was equal to sum; here lowbit(x) equals 2k where k is the position of the first one in the binary representation of x. For example, lowbit(100102) = 102, lowbit(100012) = 12, lowbit(100002) = 100002 (binary representation).Can you help Picks and find any set S, that satisfies all the above conditions?"></a>At the children’s day, the child came to Picks’s house, and messed his house up. Picks was angry at him. A lot of important things were lost, in particular the favorite set of Picks.<br>Fortunately, Picks remembers something about his set <em>S</em>:<br>its elements were distinct integers from 1 to <em>limit</em>;<br>the value of <img src="https://vj.z180.cn/4658b93e9a26c19448675cb5b4b78bbf?v=1619294953" alt="img"> was equal to <em>sum</em>; here <em>lowbit</em>(<em>x</em>) equals 2<em>k</em> where <em>k</em> is the position of the first one in the binary representation of <em>x</em>. For example, <em>lowbit</em>(100102) = 102, <em>lowbit</em>(100012) = 12, <em>lowbit</em>(100002) = 100002 (binary representation).<br>Can you help Picks and find any set <em>S</em>, that satisfies all the above conditions?</h4><h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><h4 id="The-first-line-contains-two-integers-sum-limit-1-≤-sum-limit-≤-105"><a href="#The-first-line-contains-two-integers-sum-limit-1-≤-sum-limit-≤-105" class="headerlink" title="The first line contains two integers: sum, limit (1 ≤ sum, limit ≤ 105)."></a>The first line contains two integers: <em>sum</em>, <em>limit</em> (1 ≤ <em>sum</em>, <em>limit</em> ≤ 105).</h4><h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><h4 id="In-the-first-line-print-an-integer-n-1-≤-n-≤-105-denoting-the-size-of-S-Then-print-the-elements-of-set-S-in-any-order-If-there-are-multiple-answers-print-any-of-them-If-it’s-impossible-to-find-a-suitable-set-print-1"><a href="#In-the-first-line-print-an-integer-n-1-≤-n-≤-105-denoting-the-size-of-S-Then-print-the-elements-of-set-S-in-any-order-If-there-are-multiple-answers-print-any-of-them-If-it’s-impossible-to-find-a-suitable-set-print-1" class="headerlink" title="In the first line print an integer n (1 ≤ n ≤ 105), denoting the size of S. Then print the elements of set S in any order. If there are multiple answers, print any of them.If it’s impossible to find a suitable set, print -1."></a>In the first line print an integer <em>n</em> (1 ≤ <em>n</em> ≤ 105), denoting the size of <em>S</em>. Then print the elements of set <em>S</em> in any order. If there are multiple answers, print any of them.<br>If it’s impossible to find a suitable set, print -1.</h4><h2 id="Sample-Input："><a href="#Sample-Input：" class="headerlink" title="Sample Input："></a>Sample Input：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">5 5<br></code></pre></div></td></tr></table></figure><h2 id="Sample-Output："><a href="#Sample-Output：" class="headerlink" title="Sample Output："></a>Sample Output：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">2<br>4 5<br></code></pre></div></td></tr></table></figure><h2 id="Sample-Input：-1"><a href="#Sample-Input：-1" class="headerlink" title="Sample Input："></a>Sample Input：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">4 3<br></code></pre></div></td></tr></table></figure><h2 id="Sample-Output：-1"><a href="#Sample-Output：-1" class="headerlink" title="Sample Output："></a>Sample Output：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">3<br>2 3 1<br></code></pre></div></td></tr></table></figure><h2 id="Sample-Input：-2"><a href="#Sample-Input：-2" class="headerlink" title="Sample Input："></a>Sample Input：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">5 1<br></code></pre></div></td></tr></table></figure><h2 id="Sample-Output：-2"><a href="#Sample-Output：-2" class="headerlink" title="Sample Output："></a>Sample Output：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">-1<br></code></pre></div></td></tr></table></figure><h2 id="Note："><a href="#Note：" class="headerlink" title="Note："></a>Note：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">In sample test 1: lowbit(4) = 4, lowbit(5) = 1, 4 + 1 = 5.<br><br>In sample test 2: lowbit(1) = 1, lowbit(2) = 2, lowbit(3) = 1, 1 + 2 + 1 = 4.<br></code></pre></div></td></tr></table></figure><h1 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h1><h2 id="题意：给你两个数一个sum，一个limit。求出1到limit的lowbit数可满足-gt-limit个数以内的lowbit和等于sum，并输出个数与其lowbit数。如果不满足就输出-1位运算存lowbit数然后遍历求和。代码如下。"><a href="#题意：给你两个数一个sum，一个limit。求出1到limit的lowbit数可满足-gt-limit个数以内的lowbit和等于sum，并输出个数与其lowbit数。如果不满足就输出-1位运算存lowbit数然后遍历求和。代码如下。" class="headerlink" title="题意：给你两个数一个sum，一个limit。求出1到limit的lowbit数可满足 ====&gt;limit个数以内的lowbit和等于sum，并输出个数与其lowbit数。如果不满足就输出-1位运算存lowbit数然后遍历求和。代码如下。"></a>题意：给你两个数一个sum，一个limit。求出1到limit的lowbit数可满足 ====&gt;limit个数以内的lowbit和等于sum，并输出个数与其lowbit数。如果不满足就输出-1<br>位运算存lowbit数然后遍历求和。代码如下。</h2><p><img src="/images/lowbit.jpg" alt="位运算"></p><h1 id="解题代码-AC"><a href="#解题代码-AC" class="headerlink" title="解题代码(AC)"></a>解题代码(AC)</h1><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cmath&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstring&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> endl <span class="hljs-meta-string">&quot;\n&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> io ios::sync_with_stdio(0),cin.tie(0),cout.tie(0)</span><br><span class="hljs-keyword">int</span> s[<span class="hljs-number">1000000</span>] = &#123;&#125;;<br><span class="hljs-keyword">bool</span> a[<span class="hljs-number">1000000</span>] = &#123;&#125;;<br><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> ll;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">cn</span><span class="hljs-params">(<span class="hljs-keyword">int</span> n)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">int</span> k = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">int</span> cnt = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">while</span> (k == <span class="hljs-number">0</span>)<br>&#123;<br>k = n % <span class="hljs-number">2</span>;<br>n = n / <span class="hljs-number">2</span>;<br>cnt ++ ;<br>&#125;<br>cnt --;<br><span class="hljs-keyword">return</span> cnt;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">lowbit</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x)</span></span>&#123;     <span class="hljs-comment">// lobit = 2进制中第一个1及后面的0组成的数 即  8 -&gt; 0000 1000 -&gt;  pow(2.3) = 8</span><br><span class="hljs-comment">//                                                              10 -&gt; 0000 1010 -&gt; pow(2,1) = 2</span><br><span class="hljs-comment">//                                                              -x ==== ~x+1  so   -x&amp;x  -&gt; 只有第一个1是1其他都是0</span><br><span class="hljs-keyword">return</span> x&amp;-x;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span> <span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;    <br><span class="hljs-keyword">int</span> n, lim;<br>cin &gt;&gt; n &gt;&gt; lim;<br><span class="hljs-keyword">int</span> sum = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span> ; i &lt;= lim ; i += <span class="hljs-number">2</span>)&#123;<br>s[i] = <span class="hljs-number">1</span>;<br>sum ++;<br>&#125;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">2</span>; i &lt;= lim ; i += <span class="hljs-number">2</span>)<br>&#123;<br>s[i] = <span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>,<span class="hljs-built_in">cn</span>(i));<br>sum += s[i];<br>&#125;<br><span class="hljs-keyword">if</span>(sum &lt; n)cout &lt;&lt; <span class="hljs-number">-1</span> &lt;&lt; endl;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(sum == n)&#123;<br>cout &lt;&lt; lim &lt;&lt; endl;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span> ; i &lt;= lim ; i ++)cout &lt;&lt; i &lt;&lt; <span class="hljs-string">&quot; &quot;</span>;<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-comment">//两种方法 一是 减数组   二是 加数组</span><br><span class="hljs-comment">// int m = lim;</span><br><span class="hljs-comment">// int ss = sum - n;</span><br><span class="hljs-comment">// for (int i = 1; i &lt;= lim; i++)</span><br><span class="hljs-comment">// &#123;</span><br><span class="hljs-comment">// if(ss - s[i] &gt; 0)&#123;</span><br><span class="hljs-comment">// if(i%2 == 1 &amp;&amp; ss - s[i+1] == 0)continue; // 这里在样例  1 10 // 1 100 // 1 10000会错误</span><br><span class="hljs-comment">// ss -= s[i];</span><br><span class="hljs-comment">// a[i] = true;</span><br><span class="hljs-comment">// m --;</span><br><span class="hljs-comment">// &#125;</span><br><span class="hljs-comment">// else if(ss - s[i] == 0)&#123;</span><br><span class="hljs-comment">// m--;</span><br><span class="hljs-comment">// a[i] = true;</span><br><span class="hljs-comment">// break;</span><br><span class="hljs-comment">// &#125;</span><br><span class="hljs-comment">// // else if(ss - s[i] &lt; 0)</span><br><span class="hljs-comment">// &#125;</span><br><span class="hljs-comment">// cout &lt;&lt; m &lt;&lt; endl;</span><br><span class="hljs-comment">// for (int i = 1; i &lt;= lim; i++)</span><br><span class="hljs-comment">// &#123;</span><br><span class="hljs-comment">// if(a[i] == false)cout &lt;&lt; i &lt;&lt; &quot; &quot;;</span><br><span class="hljs-comment">// &#125;</span><br><span class="hljs-comment">// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span><br><br><span class="hljs-keyword">int</span> sn = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">int</span> l = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = lim; j &gt;= <span class="hljs-number">1</span>; j--)<br>&#123;<br><span class="hljs-keyword">if</span>(sn + s[j] &lt; n)&#123;<br>sn += s[j];<br>a[j] = <span class="hljs-literal">true</span>;<br>l ++;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(sn + s[j] == n)&#123;<br>l ++;<br>a[j] = <span class="hljs-literal">true</span>;<br><span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br>cout &lt;&lt; l &lt;&lt; endl;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= lim; i++)<br>&#123;<br><span class="hljs-keyword">if</span>(a[i] == <span class="hljs-literal">true</span>)cout &lt;&lt; i &lt;&lt; <span class="hljs-string">&quot; &quot;</span>;<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></div></td></tr></table></figure><h1 id="代码结束"><a href="#代码结束" class="headerlink" title="代码结束"></a>代码结束</h1><p><img src="/images/p1.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>位运算</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C - Cube</title>
    <link href="/2021/04/27/20.Cube/"/>
    <url>/2021/04/27/20.Cube/</url>
    
    <content type="html"><![CDATA[<h2 id="C-Cube"><a href="#C-Cube" class="headerlink" title="C - Cube"></a><a href="https://vjudge.z180.cn/problem/Gym-103055C">C - Cube</a></h2><h2 id="2021-4-22-qlu团队赛"><a href="#2021-4-22-qlu团队赛" class="headerlink" title="2021.4.22,qlu团队赛"></a>2021.4.22,qlu团队赛<br></h2><span id="more"></span><The><h1 id="题干"><a href="#题干" class="headerlink" title="题干"></a>题干</h1><h4 id="You-are-given-eight-points-in-three-dimensional-space-please-check-if-they-can-form-a-cube-A-cube-is-a-regular-hexahedron-bounded-by-six-square-faces-with-three-meeting-at-each-vertex"><a href="#You-are-given-eight-points-in-three-dimensional-space-please-check-if-they-can-form-a-cube-A-cube-is-a-regular-hexahedron-bounded-by-six-square-faces-with-three-meeting-at-each-vertex" class="headerlink" title="You are given eight points in three-dimensional space, please check if they can form a cube.A cube is a regular hexahedron, bounded by six square faces, with three meeting at each vertex."></a>You are given eight points in three-dimensional space, please check if they can form a cube.<br>A cube is a regular hexahedron, bounded by six square faces, with three meeting at each vertex.</h4><h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><h4 id="The-first-line-contains-a-single-integer-TT-1≤T≤1001≤T≤100-denoting-the-number-of-test-cases-For-each-test-case-each-of-the-following-eight-lines-containing-three-integers-x-y-z-−100≤x-y-z≤100-denoting-the-coordinates-of-the-eight-points-respectively"><a href="#The-first-line-contains-a-single-integer-TT-1≤T≤1001≤T≤100-denoting-the-number-of-test-cases-For-each-test-case-each-of-the-following-eight-lines-containing-three-integers-x-y-z-−100≤x-y-z≤100-denoting-the-coordinates-of-the-eight-points-respectively" class="headerlink" title="The first line contains a single integer TT (1≤T≤1001≤T≤100), denoting the number of test cases.For each test case, each of the following eight lines containing three integers x,y,z (−100≤x,y,z≤100), denoting the coordinates of the eight points, respectively."></a>The first line contains a single integer TT (1≤T≤1001≤T≤100), denoting the number of test cases.<br>For each test case, each of the following eight lines containing three integers x,y,z (−100≤x,y,z≤100), denoting the coordinates of the eight points, respectively.</h4><h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><h4 id="For-each-test-case-output-a-single-line-“YES”-if-the-points-can-form-a-cube-or-“NO”-if-they-don’t"><a href="#For-each-test-case-output-a-single-line-“YES”-if-the-points-can-form-a-cube-or-“NO”-if-they-don’t" class="headerlink" title="For each test case, output a single line “YES” if the points can form a cube, or “NO” if they don’t."></a>For each test case, output a single line “YES” if the points can form a cube, or “NO” if they don’t.</h4><h2 id="Sample-Input："><a href="#Sample-Input：" class="headerlink" title="Sample Input："></a>Sample Input：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">3<br>0 0 0<br>0 0 0<br>0 0 0<br>0 0 0<br>0 0 0<br>0 0 0<br>0 0 0<br>0 0 0<br>-4 -6 -2<br>5 9 10<br>12 -11 11<br>-9 4 8<br>-2 -16 9<br>7 -1 21<br>-7 -6 19<br>10 -1 0<br>0 0 0<br>2 2 1<br>0 0 1<br>0 2 0<br>2 0 0<br>0 2 1<br>2 0 1<br>2 2 0<br></code></pre></div></td></tr></table></figure><h2 id="Sample-Output："><a href="#Sample-Output：" class="headerlink" title="Sample Output："></a>Sample Output：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">NO<br>YES<br>NO<br></code></pre></div></td></tr></table></figure><h1 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h1><h2 id="题意：给你8个点，判断是否为正方体数学知识，向量法：8个点最多28个向量，其中有三组（四条向量平行）并且三组相互垂直。12条向量模相等。且不能出现0向量。即8个点不能有相同的"><a href="#题意：给你8个点，判断是否为正方体数学知识，向量法：8个点最多28个向量，其中有三组（四条向量平行）并且三组相互垂直。12条向量模相等。且不能出现0向量。即8个点不能有相同的" class="headerlink" title="题意：给你8个点，判断是否为正方体数学知识，向量法：8个点最多28个向量，其中有三组（四条向量平行）并且三组相互垂直。12条向量模相等。且不能出现0向量。即8个点不能有相同的"></a>题意：给你8个点，判断是否为正方体<br>数学知识，向量法：8个点最多28个向量，其中有三组（四条向量平行）并且三组相互垂直。12条向量模相等。且不能出现0向量。即8个点不能有相同的</h2><h1 id="解题代码-AC"><a href="#解题代码-AC" class="headerlink" title="解题代码(AC)"></a>解题代码(AC)</h1><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cmath&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstring&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">int</span> a[<span class="hljs-number">10</span>][<span class="hljs-number">4</span>]; <span class="hljs-comment">// 存8个点</span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-keyword">int</span> t;<br>    a[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>] = a[<span class="hljs-number">0</span>][<span class="hljs-number">2</span>] = a[<span class="hljs-number">0</span>][<span class="hljs-number">3</span>] = <span class="hljs-number">111</span>; <span class="hljs-comment">//防止错用0数组</span><br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;t);<br>    <span class="hljs-keyword">while</span> (t--)<br>    &#123;<br>        <span class="hljs-keyword">int</span> b[<span class="hljs-number">50</span>][<span class="hljs-number">4</span>] = &#123;&#125;;<span class="hljs-comment">//存所有向量</span><br>        <span class="hljs-keyword">int</span> l[<span class="hljs-number">4</span>][<span class="hljs-number">3</span>] = &#123;&#125;;<span class="hljs-comment">//存三组向量的代表向量</span><br>        <span class="hljs-keyword">int</span> flag = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">int</span> cnt[<span class="hljs-number">4</span>] = &#123;&#125;;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">8</span>; i++)<br>        &#123;<br>            <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d%d&quot;</span>,&amp;a[i][<span class="hljs-number">0</span>],&amp;a[i][<span class="hljs-number">1</span>],&amp;a[i][<span class="hljs-number">2</span>]);<br>            <span class="hljs-keyword">if</span>(a[i][<span class="hljs-number">0</span>] == a[i<span class="hljs-number">-1</span>][<span class="hljs-number">0</span>] &amp;&amp;a[i][<span class="hljs-number">1</span>] == a[i<span class="hljs-number">-1</span>][<span class="hljs-number">1</span>] &amp;&amp;a[i][<span class="hljs-number">2</span>] == a[i<span class="hljs-number">-1</span>][<span class="hljs-number">2</span>] )&#123; <span class="hljs-comment">// 判断相同点  写麻烦了 懒得改了凑合看</span><br>                flag = <span class="hljs-number">1</span>;<br>            &#125;<br>        &#125;<br>            <span class="hljs-keyword">if</span>(flag == <span class="hljs-number">1</span>)&#123;  <span class="hljs-comment">//相邻相同点</span><br>                <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;NO\n&quot;</span>);<br>            &#125;<br>            <span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-keyword">int</span> k = <span class="hljs-number">0</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt; <span class="hljs-number">8</span>; i++)<br>                &#123;<br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span>  j = i + <span class="hljs-number">1</span>; j &lt; <span class="hljs-number">9</span>; j++)<br>                    &#123;<br>                        b[k][<span class="hljs-number">0</span>] = a[j][<span class="hljs-number">0</span>] - a[i][<span class="hljs-number">0</span>];<br>                        b[k][<span class="hljs-number">1</span>] = a[j][<span class="hljs-number">1</span>] - a[i][<span class="hljs-number">1</span>];<br>                        b[k][<span class="hljs-number">2</span>] = a[j][<span class="hljs-number">2</span>] - a[i][<span class="hljs-number">2</span>];<span class="hljs-comment">//求向量</span><br>                        <span class="hljs-keyword">if</span>(b[k][<span class="hljs-number">0</span>] == <span class="hljs-number">0</span> &amp;&amp; b[k][<span class="hljs-number">1</span>] == <span class="hljs-number">0</span> &amp;&amp; b[k][<span class="hljs-number">2</span>] == <span class="hljs-number">0</span>)&#123;<span class="hljs-comment">//判断是否为零向量 即 判断是否有相同点</span><br>                            flag = <span class="hljs-number">123</span>;<br>                        &#125;<br>                        k ++;<br>                    &#125;<br>                &#125;<br>                <span class="hljs-keyword">if</span>(flag == <span class="hljs-number">123</span>)&#123;<br>                    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;NO\n&quot;</span>);<br>                &#125;<br>                <span class="hljs-keyword">else</span>&#123;<br>                    k = <span class="hljs-number">0</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">29</span>; i++)<br>                &#123;<br>                    <span class="hljs-keyword">if</span>(b[i][<span class="hljs-number">0</span>] == <span class="hljs-number">111</span>)<span class="hljs-keyword">continue</span>;<span class="hljs-comment">//即已经遍历过的跳过</span><br>                    l[k][<span class="hljs-number">0</span>] = b[i][<span class="hljs-number">0</span>],l[k][<span class="hljs-number">1</span>] = b[i][<span class="hljs-number">1</span>],l[k][<span class="hljs-number">2</span>] = b[i][<span class="hljs-number">2</span>]; <span class="hljs-comment">// 找比较向量</span><br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">29</span>; j++)<br>                    &#123;<br>                        <span class="hljs-keyword">if</span>(j == i)<span class="hljs-keyword">continue</span>;<span class="hljs-comment">//跳过比较向量</span><br>                        <span class="hljs-keyword">if</span>(b[j][<span class="hljs-number">0</span>] == <span class="hljs-number">111</span>)<span class="hljs-keyword">continue</span>;<span class="hljs-comment">//即已经遍历过的跳过</span><br>                        <span class="hljs-keyword">if</span>((l[k][<span class="hljs-number">0</span>] == b[j][<span class="hljs-number">0</span>] &amp;&amp; l[k][<span class="hljs-number">1</span>] == b[j][<span class="hljs-number">1</span>] &amp;&amp; l[k][<span class="hljs-number">2</span>] == b[j][<span class="hljs-number">2</span>]) || (l[k][<span class="hljs-number">0</span>] == -b[j][<span class="hljs-number">0</span>] &amp;&amp; l[k][<span class="hljs-number">1</span>] == -b[j][<span class="hljs-number">1</span>] &amp;&amp; l[k][<span class="hljs-number">2</span>] == -b[j][<span class="hljs-number">2</span>]))&#123; <span class="hljs-comment">// 找平行与比较向量的</span><br>                            b[j][<span class="hljs-number">0</span>] = <span class="hljs-number">111</span>;<span class="hljs-comment">//遍历后标记</span><br>                            cnt[k] ++ ;<span class="hljs-comment">//找到3个即是3组中的一组，</span><br>                            <span class="hljs-keyword">if</span>(cnt[k] == <span class="hljs-number">3</span>)&#123;<br>                                k ++;<span class="hljs-comment">//将向量存到l数组中</span><br>                                <span class="hljs-keyword">break</span>;<br>                            &#125;<br>                        &#125;<br>                    &#125;<br>                    cnt[k] = <span class="hljs-number">0</span>;<span class="hljs-comment">//跳出循环时计数归零</span><br>                    <span class="hljs-keyword">if</span> (k == <span class="hljs-number">3</span>)&#123;<br>                        flag = <span class="hljs-number">999</span>;<span class="hljs-comment">//即有3组进入下一层判断</span><br>                        <span class="hljs-keyword">break</span>;<br>                    &#125;<br>                &#125;<br>                <span class="hljs-keyword">if</span>(flag == <span class="hljs-number">999</span>)&#123;<br>                    <span class="hljs-keyword">int</span> p = l[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]*l[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>] + l[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>]*l[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>] + l[<span class="hljs-number">0</span>][<span class="hljs-number">2</span>]*l[<span class="hljs-number">0</span>][<span class="hljs-number">2</span>];<br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt; <span class="hljs-number">3</span>; i++)<br>                    &#123;<br>                        <span class="hljs-keyword">int</span> m = l[i][<span class="hljs-number">0</span>]*l[i][<span class="hljs-number">0</span>] + l[i][<span class="hljs-number">1</span>]*l[i][<span class="hljs-number">1</span>] + l[i][<span class="hljs-number">2</span>]*l[i][<span class="hljs-number">2</span>];  <span class="hljs-comment">//判断模相等</span><br>                        <span class="hljs-keyword">if</span>(m != p)&#123;<br>                            flag = <span class="hljs-number">555</span>;<br>                            <span class="hljs-keyword">break</span>;<br>                        &#125;<br>                    &#125;<br>                    <span class="hljs-keyword">if</span>(flag == <span class="hljs-number">555</span>)&#123;<br>                        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;NO\n&quot;</span>);<br>                    &#125;<br>                    <span class="hljs-keyword">else</span> &#123;<br>                        <span class="hljs-comment">//判断是否垂直</span><br>                        <span class="hljs-keyword">if</span>(l[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>] * l[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>] + l[<span class="hljs-number">0</span>][<span class="hljs-number">2</span>] * l[<span class="hljs-number">1</span>][<span class="hljs-number">2</span>] + l[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>] * l[<span class="hljs-number">1</span>][<span class="hljs-number">1</span>] != <span class="hljs-number">0</span>)&#123;<br>                            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;NO\n&quot;</span>);<br>                        &#125;<br>                        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(l[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>] * l[<span class="hljs-number">2</span>][<span class="hljs-number">0</span>] + l[<span class="hljs-number">0</span>][<span class="hljs-number">2</span>] * l[<span class="hljs-number">2</span>][<span class="hljs-number">2</span>] + l[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>] * l[<span class="hljs-number">2</span>][<span class="hljs-number">1</span>] != <span class="hljs-number">0</span>)&#123;<br>                            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;NO\n&quot;</span>);<br>                        &#125;<br>                        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(l[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>] * l[<span class="hljs-number">2</span>][<span class="hljs-number">0</span>] + l[<span class="hljs-number">1</span>][<span class="hljs-number">2</span>] * l[<span class="hljs-number">2</span>][<span class="hljs-number">2</span>] + l[<span class="hljs-number">1</span>][<span class="hljs-number">1</span>] * l[<span class="hljs-number">2</span>][<span class="hljs-number">1</span>] != <span class="hljs-number">0</span>)&#123;<br>                            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;NO\n&quot;</span>);<br>                        &#125;<br>                        <span class="hljs-keyword">else</span> <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;YES\n&quot;</span>);<br>                    &#125;<br>                &#125;<br>                <span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;NO\n&quot;</span>);<br>                &#125;<br>                &#125;<br>                <br>            &#125;<br><br>        <br>    &#125;<br>    <br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><h1 id="代码结束"><a href="#代码结束" class="headerlink" title="代码结束"></a>代码结束</h1><p><img src="/images/p3.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>A - A Count Task</title>
    <link href="/2021/04/24/17.ACountTask/"/>
    <url>/2021/04/24/17.ACountTask/</url>
    
    <content type="html"><![CDATA[<h2 id="A-A-Count-Task"><a href="#A-A-Count-Task" class="headerlink" title="A - A Count Task"></a><a href="https://vjudge.z180.cn/problem/HDU-6480">A - A Count Task</a></h2><h2 id="2021-4-15-qlu训练"><a href="#2021-4-15-qlu训练" class="headerlink" title="2021.4.15,qlu训练"></a>2021.4.15,qlu训练<br></h2><span id="more"></span><The><h1 id="题干"><a href="#题干" class="headerlink" title="题干"></a>题干</h1><h4 id="Count-is-one-of-WNJXYK’s-favorite-tasks-Recently-he-had-a-very-long-string-and-he-wondered-that-how-many-substrings-which-contains-exactly-one-kind-of-lowercase-in-this-long-string-But-this-string-is-so-long-that-he-had-kept-counting-for-several-days-His-friend-Kayaking-wants-to-help-him-so-he-turns-to-you-for-help"><a href="#Count-is-one-of-WNJXYK’s-favorite-tasks-Recently-he-had-a-very-long-string-and-he-wondered-that-how-many-substrings-which-contains-exactly-one-kind-of-lowercase-in-this-long-string-But-this-string-is-so-long-that-he-had-kept-counting-for-several-days-His-friend-Kayaking-wants-to-help-him-so-he-turns-to-you-for-help" class="headerlink" title="Count is one of WNJXYK’s favorite tasks. Recently, he had a very long string and he wondered that how many substrings which contains exactly one kind of lowercase in this long string. But this string is so long that he had kept counting for several days. His friend Kayaking wants to help him, so he turns to you for help."></a>Count is one of WNJXYK’s favorite tasks. Recently, he had a very long string and he wondered that how many substrings which contains exactly one kind of lowercase in this long string. But this string is so long that he had kept counting for several days. His friend Kayaking wants to help him, so he turns to you for help.</h4><h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><h4 id="The-input-starts-with-one-line-contains-exactly-one-positive-integer-TT-which-is-the-number-of-test-cases-Each-test-case-contains-one-line-with-a-string-which-you-need-to-do-a-counting-task-on"><a href="#The-input-starts-with-one-line-contains-exactly-one-positive-integer-TT-which-is-the-number-of-test-cases-Each-test-case-contains-one-line-with-a-string-which-you-need-to-do-a-counting-task-on" class="headerlink" title="The input starts with one line contains exactly one positive integer TT which is the number of test cases.Each test case contains one line with a string which you need to do a counting task on."></a>The input starts with one line contains exactly one positive integer TT which is the number of test cases.<br>Each test case contains one line with a string which you need to do a counting task on.</h4><h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><h4 id="For-each-test-case-output-one-line-containing-“y”-where-y-is-the-number-of-target-substrings"><a href="#For-each-test-case-output-one-line-containing-“y”-where-y-is-the-number-of-target-substrings" class="headerlink" title="For each test case, output one line containing “y” where y is the number of target substrings."></a>For each test case, output one line containing “y” where y is the number of target substrings.</h4><h2 id="Sample-Input："><a href="#Sample-Input：" class="headerlink" title="Sample Input："></a>Sample Input：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">3<br>qwertyuiop<br>qqwweerrttyyuuiioopp<br>aaaaaaaaaa<br></code></pre></div></td></tr></table></figure><h2 id="Sample-Output："><a href="#Sample-Output：" class="headerlink" title="Sample Output："></a>Sample Output：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">10<br>30<br>55<br></code></pre></div></td></tr></table></figure><h2 id="Hint："><a href="#Hint：" class="headerlink" title="Hint："></a>Hint：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">1&lt;=T&lt;=20,1&lt;=len(string)&lt;=10^5,1&lt;=∑len(string)&lt;=10^5<br>Strings only contain lowercase English letters.<br></code></pre></div></td></tr></table></figure><h1 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h1><h2 id="题意：找连续相同的子序列。如qwertyuiop的子序列-q-w-………；qqwweerrttyyuuiioopp的子序列-q-qq-w-ww-…………；aaaaaaaaaa的子序列-a-a-…-aa-…-aaa-…-…-aaaaaaaaaa"><a href="#题意：找连续相同的子序列。如qwertyuiop的子序列-q-w-………；qqwweerrttyyuuiioopp的子序列-q-qq-w-ww-…………；aaaaaaaaaa的子序列-a-a-…-aa-…-aaa-…-…-aaaaaaaaaa" class="headerlink" title="题意：找连续相同的子序列。如qwertyuiop的子序列{q}{w}………；qqwweerrttyyuuiioopp的子序列{q}{qq}{w}{ww}…………；aaaaaaaaaa的子序列{a}{a}…{aa}…{aaa}…{}…{aaaaaaaaaa};"></a>题意：找连续相同的子序列。如<br>qwertyuiop的子序列{q}{w}………；<br>qqwweerrttyyuuiioopp的子序列{q}{qq}{w}{ww}…………；<br>aaaaaaaaaa的子序列{a}{a}…{aa}…{aaa}…{}…{aaaaaaaaaa};</h2><h1 id="解题代码"><a href="#解题代码" class="headerlink" title="解题代码"></a>解题代码</h1><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cmath&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstring&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> ll;<br><span class="hljs-keyword">char</span> s[<span class="hljs-number">1000100</span>] = &#123;&#125;;<br><span class="hljs-comment">// int sums(int x)&#123;//一开始想用函数求相同的连续子序列和</span><br><span class="hljs-comment">//     int sum = x;</span><br><span class="hljs-comment">//     while (x--)</span><br><span class="hljs-comment">//     &#123;</span><br><span class="hljs-comment">//         sum += x;</span><br><span class="hljs-comment">//     &#125;</span><br><span class="hljs-comment">//     return sum;</span><br>    <br><span class="hljs-comment">// &#125;</span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-keyword">int</span> t;<br>    cin&gt;&gt;t;<br>    <span class="hljs-keyword">while</span> (t--)<br>    &#123;<br>        <span class="hljs-built_in">memset</span>(s,<span class="hljs-number">0</span>,<span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(s));<span class="hljs-comment">//清理字符数组</span><br>        ll ans = <span class="hljs-number">0</span>;<span class="hljs-comment">//开long long数据的范围</span><br>        ll a = <span class="hljs-number">0</span>;<span class="hljs-comment">//ans相同的范围</span><br>        cin&gt;&gt;s;<br>        <span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; s[i] != <span class="hljs-string">&#x27;\0&#x27;</span> ; i++)<span class="hljs-comment">//从头遍历</span><br>        &#123;<br>            a = <span class="hljs-number">1</span>;<br>            <span class="hljs-keyword">while</span>(s[i+<span class="hljs-number">1</span>] != <span class="hljs-string">&#x27;\0&#x27;</span> &amp;&amp; s[i] == s[i+<span class="hljs-number">1</span>])&#123;<span class="hljs-comment">//求连续字串</span><br>                a++;<br>                i++;<span class="hljs-comment">//i要 ++;</span><br>            &#125;<br>            ans += (a+<span class="hljs-number">1</span>)*a/<span class="hljs-number">2</span>;  <span class="hljs-comment">// 等同与sum函数</span><br>        &#125;<br>        cout&lt;&lt;ans&lt;&lt;endl;<br>    &#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></div></td></tr></table></figure><h1 id="代码结束"><a href="#代码结束" class="headerlink" title="代码结束"></a>代码结束</h1>]]></content>
    
    
    <categories>
      
      <category>code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>字符串</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C - K-Primes</title>
    <link href="/2021/04/24/18.K-Primes/"/>
    <url>/2021/04/24/18.K-Primes/</url>
    
    <content type="html"><![CDATA[<h2 id="C-K-Primes"><a href="#C-K-Primes" class="headerlink" title="C - K-Primes"></a><a href="https://vjudge.z180.cn/problem/Gym-103048K">C - K-Primes</a></h2><h2 id="2021-4-19-qlu训练"><a href="#2021-4-19-qlu训练" class="headerlink" title="2021.4.19,qlu训练"></a>2021.4.19,qlu训练<br></h2><span id="more"></span><The><h1 id="题干"><a href="#题干" class="headerlink" title="题干"></a>题干</h1><h4 id="Given-ll-and-kk-Cuber-QQ-wants-you-to-answer-if-there-are-more-than-kk-primes-i-e-at-least-“k-1”-primes-in-l-l-2k"><a href="#Given-ll-and-kk-Cuber-QQ-wants-you-to-answer-if-there-are-more-than-kk-primes-i-e-at-least-“k-1”-primes-in-l-l-2k" class="headerlink" title="Given ll and kk, Cuber QQ wants you to answer if there are more than kk primes (i.e., at least “k+1” primes) in [l,l+2k)."></a>Given ll and kk, Cuber QQ wants you to answer if there are more than kk primes (i.e., at least “k+1” primes) in [l,l+2k).</h4><h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><h4 id="One-line-with-two-space-separated-integers-l-k-1≤l-k≤108"><a href="#One-line-with-two-space-separated-integers-l-k-1≤l-k≤108" class="headerlink" title="One line with two space-separated integers    l,k(1≤l,k≤108)."></a>One line with two space-separated integers    l,k(1≤l,k≤108).</h4><h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><h4 id="One-line-with-“Yes”-or-“No”"><a href="#One-line-with-“Yes”-or-“No”" class="headerlink" title="One line with “Yes” or “No”."></a>One line with “Yes” or “No”.</h4><h2 id="Sample-Input："><a href="#Sample-Input：" class="headerlink" title="Sample Input："></a>Sample Input：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">3 3<br></code></pre></div></td></tr></table></figure><h2 id="Sample-Output："><a href="#Sample-Output：" class="headerlink" title="Sample Output："></a>Sample Output：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">No<br></code></pre></div></td></tr></table></figure><h2 id="Sample-Input：-1"><a href="#Sample-Input：-1" class="headerlink" title="Sample Input："></a>Sample Input：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">2 1<br></code></pre></div></td></tr></table></figure><h2 id="Sample-Output：-1"><a href="#Sample-Output：-1" class="headerlink" title="Sample Output："></a>Sample Output：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">Yes<br></code></pre></div></td></tr></table></figure><h1 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h1><h2 id="题意：给定-l-和-k，如果在-l，-l-2k-中超过-k-素数-（即至少-k-k-1-素数）。因为素数越来越少，且2，3，5的倍数都不会是素数。-2-2-3-2-3-5-2-3-5-7-2-3-5-7-11-等为例子。"><a href="#题意：给定-l-和-k，如果在-l，-l-2k-中超过-k-素数-（即至少-k-k-1-素数）。因为素数越来越少，且2，3，5的倍数都不会是素数。-2-2-3-2-3-5-2-3-5-7-2-3-5-7-11-等为例子。" class="headerlink" title="题意：给定 l 和 k，如果在 [l， l + 2k ]中超过 k 素数 （即至少 k = k + 1 素数）。因为素数越来越少，且2，3，5的倍数都不会是素数。[2],[2,3],[2,3,5],[2,3,5,7],[2,3,5,7,11]等为例子。"></a>题意：给定 l 和 k，如果在 [l， l + 2k ]中超过 k 素数 （即至少 k = k + 1 素数）。因为素数越来越少，且2，3，5的倍数都不会是素数。[2],[2,3],[2,3,5],[2,3,5,7],[2,3,5,7,11]等为例子。</h2><h1 id="解题代码"><a href="#解题代码" class="headerlink" title="解题代码"></a>解题代码</h1><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cmath&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstring&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-comment">// typedef long long ll;</span><br><br><br><span class="hljs-comment">// const long long N = 100000;</span><br><span class="hljs-keyword">int</span> primes[<span class="hljs-number">10000000</span>];    <br><span class="hljs-keyword">bool</span> st[<span class="hljs-number">10000000</span>] = &#123;&#125; ;<br><span class="hljs-keyword">int</span> cnt = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> a,b;<br><span class="hljs-keyword">int</span> flag = <span class="hljs-number">0</span>;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">xxs</span><span class="hljs-params">(<span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> n)</span></span>&#123;        <span class="hljs-comment">//线性筛法</span><br>    <span class="hljs-comment">// int cnt = 0; </span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">2</span>; i &lt; n; i++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(!st[i])&#123;<br>            primes[cnt++] = i;<br>            <span class="hljs-keyword">if</span>( i &gt;= a &amp;&amp; i &lt; b)flag ++;<br>        &#125; <br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; primes[j] &lt;= n/i; j++)<br>        &#123;<br>            st[primes[j] * i] = <span class="hljs-literal">true</span>;<br>            <span class="hljs-keyword">if</span> (i % primes[j] == <span class="hljs-number">0</span>)<br>            &#123;<br>              <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> l,k;<br>    cin&gt;&gt;l&gt;&gt;k;<br>    a = l,b = l + <span class="hljs-number">2</span> * k;<br>    <span class="hljs-keyword">if</span>(b &gt;= <span class="hljs-number">500000</span>)&#123; <span class="hljs-comment">// 保险起见 在快超时的时候在直接输出no（自己敲的线性筛不想改了＞︿＜）</span><br>        <br>        cout&lt;&lt;<span class="hljs-string">&quot;No&quot;</span>&lt;&lt;endl;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;<br>    <span class="hljs-built_in">xxs</span>(b);<br>    <span class="hljs-keyword">if</span>(flag &gt; k)cout&lt;&lt;<span class="hljs-string">&quot;Yes&quot;</span>&lt;&lt;endl; <span class="hljs-comment">// 根据题意写</span><br>    <span class="hljs-keyword">else</span> cout&lt;&lt;<span class="hljs-string">&quot;No&quot;</span>&lt;&lt;endl;<br>    <br>    <br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></div></td></tr></table></figure><h1 id="解题代码-2："><a href="#解题代码-2：" class="headerlink" title="解题代码 2："></a>解题代码 2：</h1><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-comment">//满足这种关系就可以</span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">int</span> n,m;<br>cin &gt;&gt; n &gt;&gt; m;<br><span class="hljs-keyword">if</span>(n==<span class="hljs-number">2</span>&amp;&amp;(m==<span class="hljs-number">1</span>||m==<span class="hljs-number">2</span>||m==<span class="hljs-number">3</span>))cout &lt;&lt; <span class="hljs-string">&quot;Yes&quot;</span>;<br><span class="hljs-keyword">else</span> cout &lt;&lt; <span class="hljs-string">&quot;No&quot;</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125; <br></code></pre></div></td></tr></table></figure><h1 id="代码结束"><a href="#代码结束" class="headerlink" title="代码结束"></a>代码结束</h1>]]></content>
    
    
    <categories>
      
      <category>code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>字符串</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>D - AD 2020</title>
    <link href="/2021/04/24/19.AD2020/"/>
    <url>/2021/04/24/19.AD2020/</url>
    
    <content type="html"><![CDATA[<h2 id="D-AD-2020"><a href="#D-AD-2020" class="headerlink" title="D - AD 2020"></a><a href="https://vjudge.z180.cn/problem/Gym-102770A">D - AD 2020</a></h2><h2 id="2021-4-19-qlu训练"><a href="#2021-4-19-qlu训练" class="headerlink" title="2021.4.19,qlu训练"></a>2021.4.19,qlu训练<br></h2><span id="more"></span><The><h1 id="题干"><a href="#题干" class="headerlink" title="题干"></a>题干</h1><h4 id="2020-is-the-current-year-and-is-a-leap-year-starting-on-Wednesday-of-the-Gregorian-calendar-the-2020th-year-of-the-Common-Era-CE-and-Anno-Domini-AD-designations-the-20th-year-of-the-3rd-millennium-the-20th-year-of-the-21st-century-and-the-1st-year-of-the-2020s-decade-2020-has-been-designated-as-Year-of-the-Nurse-and-Midwife-by-the-World-Health-Organization-The-United-Nations-has-declared-2020-as-the-International-Year-of-Plant-Health-2020-has-been-designated-as-International-Year-of-Sound-by-the-International-Commission-for-Acoustics-Because-there-are-so-many-unforgettable-things-happening-in-2020-somebody-has-now-proposed-that-all-dates-with-a-substring-containing-“202”-to-be-designated-as-the-Day-for-Disaster-Reduction-We-represent-a-date-in-the-format-YYMMDD-for-example-21110202-then-if-202-is-a-substring-of-this-date-this-day-is-the-Day-for-Disaster-Reduction-Please-write-a-program-to-compute-how-many-Days-for-Disaster-Reduction-are-there-in-all-the-dates-between-Y1M1D1-and-Y2M2D2-both-inclusive-Note-that-you-should-take-leap-years-into-consideration-A-leap-year-is-a-year-that-can-be-divided-by-400-or-can-be-divided-by-4-but-can’t-be-divided-by-100-A-leap-year-has-2929-days-in-February-instead-of-the-normal-28-days"><a href="#2020-is-the-current-year-and-is-a-leap-year-starting-on-Wednesday-of-the-Gregorian-calendar-the-2020th-year-of-the-Common-Era-CE-and-Anno-Domini-AD-designations-the-20th-year-of-the-3rd-millennium-the-20th-year-of-the-21st-century-and-the-1st-year-of-the-2020s-decade-2020-has-been-designated-as-Year-of-the-Nurse-and-Midwife-by-the-World-Health-Organization-The-United-Nations-has-declared-2020-as-the-International-Year-of-Plant-Health-2020-has-been-designated-as-International-Year-of-Sound-by-the-International-Commission-for-Acoustics-Because-there-are-so-many-unforgettable-things-happening-in-2020-somebody-has-now-proposed-that-all-dates-with-a-substring-containing-“202”-to-be-designated-as-the-Day-for-Disaster-Reduction-We-represent-a-date-in-the-format-YYMMDD-for-example-21110202-then-if-202-is-a-substring-of-this-date-this-day-is-the-Day-for-Disaster-Reduction-Please-write-a-program-to-compute-how-many-Days-for-Disaster-Reduction-are-there-in-all-the-dates-between-Y1M1D1-and-Y2M2D2-both-inclusive-Note-that-you-should-take-leap-years-into-consideration-A-leap-year-is-a-year-that-can-be-divided-by-400-or-can-be-divided-by-4-but-can’t-be-divided-by-100-A-leap-year-has-2929-days-in-February-instead-of-the-normal-28-days" class="headerlink" title="2020 is the current year and is a leap year starting on Wednesday of the Gregorian calendar, the 2020th year of the Common Era (CE) and Anno Domini (AD) designations, the 20th year of the 3rd millennium, the 20th year of the 21st century, and the 1st year of the 2020s decade.2020 has been designated as Year of the Nurse and Midwife by the World Health Organization. The United Nations has declared 2020 as the International Year of Plant Health. 2020 has been designated as International Year of Sound by the International Commission for Acoustics.Because there are so many unforgettable things happening in 2020, somebody has now proposed that all dates with a substring containing “202” to be designated as the Day for Disaster Reduction. We represent a date in the format YYMMDD (for example, 21110202), then if 202 is a substring of this date, this day is the Day for Disaster Reduction.Please write a program to compute how many Days for Disaster Reduction are there in all the dates between Y1M1D1 and Y2M2D2 (both inclusive)? Note that you should take leap years into consideration. A leap year is a year that can be divided by 400 or can be divided by 4 but can’t be divided by 100. A leap year has 2929 days in February, instead of the normal 28 days."></a>2020 is the current year and is a leap year starting on Wednesday of the Gregorian calendar, the 2020th year of the Common Era (CE) and Anno Domini (AD) designations, the 20th year of the 3rd millennium, the 20th year of the 21st century, and the 1st year of the 2020s decade.<br>2020 has been designated as Year of the Nurse and Midwife by the World Health Organization. The United Nations has declared 2020 as the International Year of Plant Health. 2020 has been designated as International Year of Sound by the International Commission for Acoustics.<br>Because there are so many unforgettable things happening in 2020, somebody has now proposed that all dates with a substring containing “202” to be designated as the Day for Disaster Reduction. We represent a date in the format YYMMDD (for example, 21110202), then if 202 is a substring of this date, this day is the Day for Disaster Reduction.<br>Please write a program to compute how many Days for Disaster Reduction are there in all the dates between Y1M1D1 and Y2M2D2 (both inclusive)? Note that you should take leap years into consideration. A leap year is a year that can be divided by 400 or can be divided by 4 but can’t be divided by 100. A leap year has 2929 days in February, instead of the normal 28 days.</h4><h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><h4 id="The-input-contains-multiple-cases-The-first-line-of-the-input-contains-a-single-positive-integer-TT-1≤T≤105-the-number-of-cases-The-first-and-only-line-of-each-case-contains-six-integers-Y1-M1-D1-Y2-M2-D2-which-are-described-in-the-problem-statement-above-It’s-guaranteed-that-Y1M1D1-is-not-larger-than-Y2M2D2-Both-Y1M1D1-and-Y2M2D2-are-between-20000101-and-99991231-and-both-dates-are-valid-We-kindly-remind-you-that-the-size-of-the-input-and-output-of-this-problem-can-be-large-so-it’s-recommended-to-use-a-faster-I-O-method-For-example-in-C-you-can-use-scanf-printf-instead-of-cin-cout"><a href="#The-input-contains-multiple-cases-The-first-line-of-the-input-contains-a-single-positive-integer-TT-1≤T≤105-the-number-of-cases-The-first-and-only-line-of-each-case-contains-six-integers-Y1-M1-D1-Y2-M2-D2-which-are-described-in-the-problem-statement-above-It’s-guaranteed-that-Y1M1D1-is-not-larger-than-Y2M2D2-Both-Y1M1D1-and-Y2M2D2-are-between-20000101-and-99991231-and-both-dates-are-valid-We-kindly-remind-you-that-the-size-of-the-input-and-output-of-this-problem-can-be-large-so-it’s-recommended-to-use-a-faster-I-O-method-For-example-in-C-you-can-use-scanf-printf-instead-of-cin-cout" class="headerlink" title="The input contains multiple cases. The first line of the input contains a single positive integer TT (1≤T≤105), the number of cases.The first and only line of each case contains six integers Y1,M1,D1,Y2,M2,D2, which are described in the problem statement above.It’s guaranteed that Y1M1D1 is not larger than Y2M2D2. Both Y1M1D1 and Y2M2D2 are between 20000101 and 99991231, and both dates are valid.We kindly remind you that the size of the input and output of this problem can be large, so it’s recommended to use a faster I/O method. For example, in C++, you can use scanf/printf instead of cin/cout."></a>The input contains multiple cases. The first line of the input contains a single positive integer TT (1≤T≤105), the number of cases.<br>The first and only line of each case contains six integers Y1,M1,D1,Y2,M2,D2, which are described in the problem statement above.<br>It’s guaranteed that Y1M1D1 is not larger than Y2M2D2. Both Y1M1D1 and Y2M2D2 are between 20000101 and 99991231, and both dates are valid.<br>We kindly remind you that the size of the input and output of this problem can be large, so it’s recommended to use a faster I/O method. For example, in C++, you can use scanf/printf instead of cin/cout.</h4><h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><h4 id="For-each-case-print-a-single-line-containing-a-single-integer-the-answer"><a href="#For-each-case-print-a-single-line-containing-a-single-integer-the-answer" class="headerlink" title="For each case, print a single line containing a single integer, the answer."></a>For each case, print a single line containing a single integer, the answer.</h4><h2 id="Sample-Input："><a href="#Sample-Input：" class="headerlink" title="Sample Input："></a>Sample Input：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">3<br>2111 02 01 2111 02 03<br>2202 01 01 2202 12 31<br>2000 01 01 9999 12 31<br></code></pre></div></td></tr></table></figure><h2 id="Sample-Output："><a href="#Sample-Output：" class="headerlink" title="Sample Output："></a>Sample Output：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">1<br>365<br>44294<br></code></pre></div></td></tr></table></figure><h1 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h1><h2 id="题意：给定t个样例，每个样例有两个日期（格式为Y-M-D，表示为年月日），输出两个日期之间的所有日期的年月日组成的字符串中含有”202”的日期的字符串的个数。这一题如果暴力，每次都重新求一遍会超时。所以打表求出2000-01-01与所有日期之间的符合要求的日期的个数a-Y-M-D-。求法：从2000-01-01遍历到9999-12-31。"><a href="#题意：给定t个样例，每个样例有两个日期（格式为Y-M-D，表示为年月日），输出两个日期之间的所有日期的年月日组成的字符串中含有”202”的日期的字符串的个数。这一题如果暴力，每次都重新求一遍会超时。所以打表求出2000-01-01与所有日期之间的符合要求的日期的个数a-Y-M-D-。求法：从2000-01-01遍历到9999-12-31。" class="headerlink" title="题意：给定t个样例，每个样例有两个日期（格式为Y,M,D，表示为年月日），输出两个日期之间的所有日期的年月日组成的字符串中含有”202”的日期的字符串的个数。这一题如果暴力，每次都重新求一遍会超时。所以打表求出2000/01/01与所有日期之间的符合要求的日期的个数a[Y],[M],[D]。求法：从2000/01/01遍历到9999/12/31。"></a>题意：给定t个样例，每个样例有两个日期（格式为Y,M,D，表示为年月日），输出两个日期之间的所有日期的年月日组成的字符串中含有”202”的日期的字符串的个数。<br>这一题如果暴力，每次都重新求一遍会超时。所以打表求出2000/01/01与所有日期之间的符合要求的日期的个数a[Y],[M],[D]。求法：从2000/01/01遍历到9999/12/31。</h2><h1 id="解题代码-AC"><a href="#解题代码-AC" class="headerlink" title="解题代码(AC)"></a>解题代码(AC)</h1><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cmath&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstring&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;sstream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;string&gt;</span></span><br><span class="hljs-comment">// #include&lt;bits/stdc++.h&gt;</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">int</span> a[<span class="hljs-number">10000</span>][<span class="hljs-number">13</span>][<span class="hljs-number">32</span>] = &#123;&#125;;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">run</span><span class="hljs-params">(<span class="hljs-keyword">int</span> n)</span></span>&#123;<br>    <span class="hljs-keyword">if</span>((n % <span class="hljs-number">4</span> == <span class="hljs-number">0</span> &amp;&amp; n % <span class="hljs-number">100</span> != <span class="hljs-number">0</span>) || (n % <span class="hljs-number">400</span> == <span class="hljs-number">0</span>))&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span> <span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;    <br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-number">0</span>);<br>cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-keyword">int</span> cnt = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">int</span> y1,m1,d1,y2,m2,d2;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">2000</span>; i &lt;= <span class="hljs-number">9999</span>; i++)<br>    &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">1</span>; j &lt;= <span class="hljs-number">12</span>; j++)<br>        &#123;<br>            <span class="hljs-keyword">int</span> k = <span class="hljs-number">31</span>;<br>            <span class="hljs-keyword">if</span>(j == <span class="hljs-number">4</span> || j == <span class="hljs-number">6</span> || j == <span class="hljs-number">9</span> || j == <span class="hljs-number">11</span>) k = <span class="hljs-number">30</span>;<br>            <span class="hljs-keyword">if</span>(j == <span class="hljs-number">2</span>)&#123;<br>                <span class="hljs-keyword">if</span>(<span class="hljs-built_in">run</span>(i)) k = <span class="hljs-number">29</span>;<br>                <span class="hljs-keyword">else</span> k = <span class="hljs-number">28</span>;<br>            &#125;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> l = <span class="hljs-number">1</span> ; l &lt;= k ; l ++)&#123;<br>                <span class="hljs-keyword">int</span> z = i * <span class="hljs-number">10000</span> + j * <span class="hljs-number">100</span> + l;<br>                string s;<br>                s = <span class="hljs-built_in">to_string</span>(z);<br>                <span class="hljs-keyword">if</span>(s.<span class="hljs-built_in">find</span>(<span class="hljs-string">&quot;202&quot;</span>) != string::npos)&#123;<br>                    cnt++;<br>                &#125;<br>                a[i][j][l] = cnt;<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">int</span> t;<br>    cin&gt;&gt;t;<br>    <span class="hljs-keyword">while</span> (t--)<br>    &#123;<br>        cin&gt;&gt;y1&gt;&gt;m1&gt;&gt;d1;<br>        cin&gt;&gt;y2&gt;&gt;m2&gt;&gt;d2;<br>        <span class="hljs-keyword">int</span> q = y1 * <span class="hljs-number">10000</span> + m1 * <span class="hljs-number">100</span> + d1;<br>        string s = <span class="hljs-built_in">to_string</span>(q);<br>        <span class="hljs-keyword">int</span> ans = a[y2][m2][d2] - a[y1][m1][d1];<br>        <span class="hljs-keyword">if</span>(s.<span class="hljs-built_in">find</span>(<span class="hljs-string">&quot;202&quot;</span>) != string::npos)&#123;<br>            ans ++;<br>        &#125;<br>        cout&lt;&lt;ans&lt;&lt;endl;<br><br>    &#125;<br>    <br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><h1 id="解题代码-TLE"><a href="#解题代码-TLE" class="headerlink" title="解题代码 (TLE)"></a>解题代码 (TLE)</h1><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cmath&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstring&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">run</span><span class="hljs-params">(<span class="hljs-keyword">int</span> n)</span></span>;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">run</span><span class="hljs-params">(<span class="hljs-keyword">int</span> n)</span></span>&#123;<br>    <span class="hljs-keyword">if</span>((n % <span class="hljs-number">4</span> == <span class="hljs-number">0</span> &amp;&amp; n % <span class="hljs-number">100</span> != <span class="hljs-number">0</span>) || (n % <span class="hljs-number">400</span> == <span class="hljs-number">0</span>))&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-literal">nullptr</span>);cout.<span class="hljs-built_in">tie</span>(<span class="hljs-literal">nullptr</span>);<br>    <span class="hljs-keyword">int</span> t = <span class="hljs-number">0</span>;<br>    <span class="hljs-comment">// scanf(&quot;%d&quot;,&amp;t);</span><br>    cin&gt;&gt;t;<br>    <span class="hljs-keyword">while</span> (t--)<br>    &#123;<br>        <span class="hljs-keyword">int</span> ans = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">int</span> y,m,d;<br>        <span class="hljs-keyword">int</span> dy,dm,dd;<br>        <span class="hljs-comment">// scanf(&quot;%d%d%d&quot;,&amp;y,&amp;m,&amp;d);</span><br>        <span class="hljs-comment">// scanf(&quot;%d%d%d&quot;,&amp;dy,&amp;dm,&amp;dd);</span><br>        cin&gt;&gt;y&gt;&gt;m&gt;&gt;d;<br>        cin&gt;&gt;dy&gt;&gt;dm&gt;&gt;dd;<br>        <span class="hljs-comment">// if(y &lt; 2000 || dy &gt; 9999)continue;</span><br>        <span class="hljs-comment">// if(t &gt;= 99990)break;</span><br><br><br>        <span class="hljs-keyword">if</span>(y == dy)&#123;<br>            <span class="hljs-keyword">if</span>(<span class="hljs-built_in">run</span>(y) == <span class="hljs-number">1</span>)&#123;<br>                <span class="hljs-keyword">if</span>(y % <span class="hljs-number">1000</span> == <span class="hljs-number">202</span> || y / <span class="hljs-number">10</span> == <span class="hljs-number">202</span>)&#123;<br>                    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = m ; i &lt; dm ; i ++)&#123;<br>                        <span class="hljs-keyword">if</span>(i == <span class="hljs-number">1</span> || i == <span class="hljs-number">3</span> || i == <span class="hljs-number">5</span> || i == <span class="hljs-number">7</span> || i == <span class="hljs-number">8</span> || i == <span class="hljs-number">10</span> || i == <span class="hljs-number">12</span>)ans = ans + <span class="hljs-number">31</span>;<br>                        <span class="hljs-keyword">if</span>(i == <span class="hljs-number">4</span> || i == <span class="hljs-number">6</span> || i == <span class="hljs-number">9</span> || i == <span class="hljs-number">11</span>)ans = ans + <span class="hljs-number">30</span>;<br>                        <span class="hljs-keyword">if</span>(i == <span class="hljs-number">2</span>)ans =ans + <span class="hljs-number">29</span>;<br>                    &#125;<br>                    ans = ans + dd;<br>                    ans = ans - d + <span class="hljs-number">1</span>;<br>                &#125;<br>                <span class="hljs-keyword">else</span>&#123;<br>                    <span class="hljs-keyword">if</span>(y % <span class="hljs-number">10</span> == <span class="hljs-number">2</span>)&#123;<br>                        <span class="hljs-keyword">if</span>(m &lt; <span class="hljs-number">2</span> &amp;&amp; dm == <span class="hljs-number">12</span> &amp;&amp; dd &gt;= <span class="hljs-number">2</span>)ans += <span class="hljs-number">30</span>;<br>                        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(m &lt; <span class="hljs-number">2</span> &amp;&amp; dm &gt; <span class="hljs-number">2</span> )ans += <span class="hljs-number">29</span>;<br>                        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(m &gt; <span class="hljs-number">2</span> &amp;&amp; dm == <span class="hljs-number">12</span> &amp;&amp; dd &gt;= <span class="hljs-number">2</span>)ans ++;<br>                        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(m == <span class="hljs-number">2</span> &amp;&amp; dm &gt; <span class="hljs-number">2</span>)ans = ans + <span class="hljs-number">30</span> - d;<br>                        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(m == <span class="hljs-number">2</span> &amp;&amp; dm == <span class="hljs-number">2</span>) ans = ans + dd - d + <span class="hljs-number">1</span>;<br>                    &#125;<br>                    <span class="hljs-keyword">else</span>&#123;<br>                        <span class="hljs-keyword">if</span>(m &lt; <span class="hljs-number">2</span> &amp;&amp; dm == <span class="hljs-number">12</span> &amp;&amp; dd &gt;= <span class="hljs-number">2</span>)ans += <span class="hljs-number">2</span>;<br>                        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(m &lt; <span class="hljs-number">2</span> &amp;&amp; dm &gt; <span class="hljs-number">2</span> )ans += <span class="hljs-number">1</span>;<br>                        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(m &gt; <span class="hljs-number">2</span> &amp;&amp; dm == <span class="hljs-number">12</span> &amp;&amp; dd &gt;= <span class="hljs-number">2</span>)ans ++;<br>                        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(m == <span class="hljs-number">2</span> &amp;&amp; dm &gt; <span class="hljs-number">2</span>)ans ++;<br>                        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(m == <span class="hljs-number">2</span> &amp;&amp; dm == <span class="hljs-number">2</span> &amp;&amp; d &lt;= <span class="hljs-number">2</span> &amp;&amp; dd &gt;= <span class="hljs-number">2</span>) ans ++;<br>                    &#125;<br>                &#125;<br>            &#125;<br>            <span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-keyword">if</span>(y % <span class="hljs-number">1000</span> == <span class="hljs-number">202</span> || y / <span class="hljs-number">10</span> == <span class="hljs-number">202</span>)&#123;<br>                    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = m ; i &lt; dm ; i ++)&#123;<br>                        <span class="hljs-keyword">if</span>(i == <span class="hljs-number">1</span> || i == <span class="hljs-number">3</span> || i == <span class="hljs-number">5</span> || i == <span class="hljs-number">7</span> || i == <span class="hljs-number">8</span> || i == <span class="hljs-number">10</span> || i == <span class="hljs-number">12</span>)ans += <span class="hljs-number">31</span>;<br>                        <span class="hljs-keyword">if</span>(i == <span class="hljs-number">4</span> || i == <span class="hljs-number">6</span> || i == <span class="hljs-number">9</span> || i == <span class="hljs-number">11</span>)ans += <span class="hljs-number">30</span>;<br>                        <span class="hljs-keyword">if</span>(i == <span class="hljs-number">2</span>)ans += <span class="hljs-number">28</span>;<br>                    &#125;<br>                    ans = ans + dd;<br>                    ans = ans - d + <span class="hljs-number">1</span>;<br>                &#125;<br>                <span class="hljs-keyword">else</span>&#123;<br>                    <span class="hljs-keyword">if</span>(y % <span class="hljs-number">10</span> == <span class="hljs-number">2</span>)&#123;<br>                        <span class="hljs-keyword">if</span>(m &lt; <span class="hljs-number">2</span> &amp;&amp; dm == <span class="hljs-number">12</span> &amp;&amp; dd &gt;= <span class="hljs-number">2</span>)ans += <span class="hljs-number">29</span>;<br>                        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(m &lt; <span class="hljs-number">2</span> &amp;&amp; dm &gt; <span class="hljs-number">2</span> )ans += <span class="hljs-number">28</span>;<br>                        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(m &gt; <span class="hljs-number">2</span> &amp;&amp; dm == <span class="hljs-number">12</span> &amp;&amp; dd &gt;= <span class="hljs-number">2</span>)ans ++;<br>                        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(m == <span class="hljs-number">2</span> &amp;&amp; dm &gt; <span class="hljs-number">2</span>)ans = ans + <span class="hljs-number">29</span> - d;<br>                        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(m == <span class="hljs-number">2</span> &amp;&amp; dm == <span class="hljs-number">2</span>) ans = ans + dd - d + <span class="hljs-number">1</span>;<br>                    &#125;<br>                    <span class="hljs-keyword">else</span>&#123;<br>                        <span class="hljs-keyword">if</span>(m &lt; <span class="hljs-number">2</span> &amp;&amp; dm == <span class="hljs-number">12</span> &amp;&amp; dd &gt;= <span class="hljs-number">2</span>)ans += <span class="hljs-number">2</span>;<br>                        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(m &lt; <span class="hljs-number">2</span> &amp;&amp; dm &gt; <span class="hljs-number">2</span> )ans += <span class="hljs-number">1</span>;<br>                        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(m &gt; <span class="hljs-number">2</span> &amp;&amp; dm == <span class="hljs-number">12</span> &amp;&amp; dd &gt;= <span class="hljs-number">2</span>)ans ++;<br>                        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(m == <span class="hljs-number">2</span> &amp;&amp; dm &gt; <span class="hljs-number">2</span>)ans ++;<br>                        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(m == <span class="hljs-number">2</span> &amp;&amp; dm == <span class="hljs-number">2</span> &amp;&amp; d &lt;= <span class="hljs-number">2</span> &amp;&amp; dd &gt;= <span class="hljs-number">2</span>) ans ++;<br>                    &#125;<br>                &#125;<br>            &#125;<br><br>        &#125;<br><br><br><br><br><br><br><br><br><br>        <span class="hljs-keyword">else</span> &#123;<br><br><br>            <span class="hljs-keyword">if</span>(<span class="hljs-built_in">run</span>(y) == <span class="hljs-number">1</span>)&#123;<br>                <span class="hljs-keyword">if</span>(y % <span class="hljs-number">1000</span> == <span class="hljs-number">202</span> || y / <span class="hljs-number">10</span> == <span class="hljs-number">202</span>)&#123;<br>                    ans += <span class="hljs-number">366</span>;<br>                    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span> ; i &lt; m ; i ++)&#123;<br>                        <span class="hljs-keyword">if</span>(i == <span class="hljs-number">1</span> || i == <span class="hljs-number">3</span> || i == <span class="hljs-number">5</span> || i == <span class="hljs-number">7</span> || i == <span class="hljs-number">8</span> || i == <span class="hljs-number">10</span> || i == <span class="hljs-number">12</span>)ans -= <span class="hljs-number">31</span>;<br>                        <span class="hljs-keyword">if</span>(i == <span class="hljs-number">4</span> || i == <span class="hljs-number">6</span> || i == <span class="hljs-number">9</span> || i == <span class="hljs-number">11</span>)ans -= <span class="hljs-number">30</span>;<br>                        <span class="hljs-keyword">if</span>(i == <span class="hljs-number">2</span>)ans -= <span class="hljs-number">29</span>;<br>                    &#125;<br>                    ans = ans - d + <span class="hljs-number">1</span>;<br>                &#125;<br>                <span class="hljs-keyword">else</span>&#123;<br>                    <span class="hljs-keyword">if</span>(y % <span class="hljs-number">10</span> == <span class="hljs-number">2</span>)&#123;<br>                        <span class="hljs-keyword">if</span>(m &gt; <span class="hljs-number">2</span>)ans = ans;<br>                        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(m == <span class="hljs-number">2</span>)ans = ans + <span class="hljs-number">29</span> - d + <span class="hljs-number">1</span>;<br>                        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(m &lt; <span class="hljs-number">2</span>)ans += <span class="hljs-number">29</span>;<br>                        <span class="hljs-keyword">if</span>(m &lt; <span class="hljs-number">12</span> || (m == <span class="hljs-number">12</span> &amp;&amp; d &lt;= <span class="hljs-number">2</span>))ans += <span class="hljs-number">1</span>;<br>                    &#125;<br>                    <span class="hljs-keyword">else</span>&#123;<br>                        <span class="hljs-keyword">if</span>(m &lt; <span class="hljs-number">2</span> || (m == <span class="hljs-number">2</span> &amp;&amp; d &lt;= <span class="hljs-number">2</span>))ans++;<br>                        <span class="hljs-keyword">if</span>(m &lt; <span class="hljs-number">12</span> || (m == <span class="hljs-number">12</span> &amp;&amp; d &lt;= <span class="hljs-number">2</span>))ans += <span class="hljs-number">1</span>;<br>                    &#125;<br>                &#125;<br>            &#125;<br>            <span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-keyword">if</span>(y % <span class="hljs-number">1000</span> == <span class="hljs-number">202</span> || y / <span class="hljs-number">10</span> == <span class="hljs-number">202</span>)&#123;<br>                    ans += <span class="hljs-number">365</span>;<br>                    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span> ; i &lt; m ; i ++)&#123;<br>                        <span class="hljs-keyword">if</span>(i == <span class="hljs-number">1</span> || i == <span class="hljs-number">3</span> || i == <span class="hljs-number">5</span> || i == <span class="hljs-number">7</span> || i == <span class="hljs-number">8</span> || i == <span class="hljs-number">10</span> || i == <span class="hljs-number">12</span>)ans -= <span class="hljs-number">31</span>;<br>                        <span class="hljs-keyword">if</span>(i == <span class="hljs-number">4</span> || i == <span class="hljs-number">6</span> || i == <span class="hljs-number">9</span> || i == <span class="hljs-number">11</span>)ans -= <span class="hljs-number">30</span>;<br>                        <span class="hljs-keyword">if</span>(i == <span class="hljs-number">2</span>)ans -= <span class="hljs-number">28</span>;<br>                    &#125;<br>                    ans = ans - d + <span class="hljs-number">1</span>;<br>                &#125;<br>                <span class="hljs-keyword">else</span>&#123;<br>                    <span class="hljs-keyword">if</span>(y % <span class="hljs-number">10</span> == <span class="hljs-number">2</span>)&#123;<br>                        <span class="hljs-keyword">if</span>(m &gt; <span class="hljs-number">2</span>)ans = ans;<br>                        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(m == <span class="hljs-number">2</span>)ans = ans + <span class="hljs-number">28</span> - d + <span class="hljs-number">1</span>;<br>                        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(m &lt; <span class="hljs-number">2</span>)ans += <span class="hljs-number">28</span>;<br>                        <span class="hljs-keyword">if</span>(m &lt; <span class="hljs-number">12</span> || (m == <span class="hljs-number">12</span> &amp;&amp; d &lt;= <span class="hljs-number">2</span>))ans += <span class="hljs-number">1</span>;<br>                    &#125;<br>                    <span class="hljs-keyword">else</span>&#123;<br>                        <span class="hljs-keyword">if</span>(m &lt; <span class="hljs-number">2</span> || (m == <span class="hljs-number">2</span> &amp;&amp; d &lt;= <span class="hljs-number">2</span>))ans++;<br>                        <span class="hljs-keyword">if</span>(m &lt; <span class="hljs-number">12</span> || (m == <span class="hljs-number">12</span> &amp;&amp; d &lt;= <span class="hljs-number">2</span>))ans += <span class="hljs-number">1</span>;<br>                    &#125;<br>                &#125;<br>            &#125;<br>            y++;<br><br><br>            <br>            <br>            <br><br>            <span class="hljs-keyword">while</span> (y &lt; dy)<br>            &#123;<br>                <span class="hljs-keyword">if</span>(<span class="hljs-built_in">run</span>(y) == <span class="hljs-number">1</span>)&#123;<br>                    <span class="hljs-keyword">if</span>(y % <span class="hljs-number">1000</span> == <span class="hljs-number">202</span> || y / <span class="hljs-number">10</span> == <span class="hljs-number">202</span>)&#123;<br>                        ans += <span class="hljs-number">366</span>;<br>                    &#125;<br>                    <span class="hljs-keyword">else</span>&#123;<br>                        <span class="hljs-keyword">if</span>(y % <span class="hljs-number">10</span> == <span class="hljs-number">2</span>)&#123;<br>                            ans += <span class="hljs-number">29</span>;<br>                            ans += <span class="hljs-number">1</span>;<br>                        &#125;<br>                        <span class="hljs-keyword">else</span>&#123;<br>                            ans +=<span class="hljs-number">2</span>;<br>                        &#125;<br>                    &#125;<br>                &#125;<br>                <span class="hljs-keyword">else</span>&#123;<br>                    <span class="hljs-keyword">if</span>(y % <span class="hljs-number">1000</span> == <span class="hljs-number">202</span> || y / <span class="hljs-number">10</span> == <span class="hljs-number">202</span>)&#123;<br>                        ans += <span class="hljs-number">365</span>;<br>                    &#125;<br>                    <span class="hljs-keyword">else</span>&#123;<br>                        <span class="hljs-keyword">if</span>(y % <span class="hljs-number">10</span> == <span class="hljs-number">2</span>)&#123;<br>                            ans += <span class="hljs-number">28</span>;<br>                            ans += <span class="hljs-number">1</span>;<br>                        &#125;<br>                        <span class="hljs-keyword">else</span>&#123;<br>                            ans +=<span class="hljs-number">2</span>;<br>                        &#125;<br>                    &#125;<br>                &#125;<br>                y++;<br>            &#125;<br><br><br><br>            <br>            <br>            <br>            <span class="hljs-keyword">if</span>(<span class="hljs-built_in">run</span>(y) == <span class="hljs-number">1</span>)&#123;<br>                <span class="hljs-keyword">if</span>(y % <span class="hljs-number">1000</span> == <span class="hljs-number">202</span> || y / <span class="hljs-number">10</span> == <span class="hljs-number">202</span>)&#123;<br>                    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span> ; i &lt; dm ; i ++)&#123;<br>                        <span class="hljs-keyword">if</span>(i == <span class="hljs-number">1</span> || i == <span class="hljs-number">3</span> || i == <span class="hljs-number">5</span> || i == <span class="hljs-number">7</span> || i == <span class="hljs-number">8</span> || i == <span class="hljs-number">10</span> || i == <span class="hljs-number">12</span>)ans += <span class="hljs-number">31</span>;<br>                        <span class="hljs-keyword">if</span>(i == <span class="hljs-number">4</span> || i == <span class="hljs-number">6</span> || i == <span class="hljs-number">9</span> || i == <span class="hljs-number">11</span>)ans += <span class="hljs-number">30</span>;<br>                        <span class="hljs-keyword">if</span>(i == <span class="hljs-number">2</span>)ans += <span class="hljs-number">29</span>;<br>                    &#125;<br>                    ans = ans + dd;<br>                &#125;<br>                <span class="hljs-keyword">else</span>&#123;<br>                    <span class="hljs-keyword">if</span>(y % <span class="hljs-number">10</span> == <span class="hljs-number">2</span>)&#123;<br>                        <span class="hljs-keyword">if</span>(dm == <span class="hljs-number">12</span> &amp;&amp; dd &gt;= <span class="hljs-number">2</span>)ans += <span class="hljs-number">30</span>;<br>                        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(dm &gt; <span class="hljs-number">2</span> &amp;&amp; dm &lt;= <span class="hljs-number">12</span>)ans += <span class="hljs-number">29</span>;<br>                        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(dm == <span class="hljs-number">2</span>)ans += dd;<br>                        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(dm &lt; <span class="hljs-number">2</span>)ans = ans;<br>                    &#125;<br>                    <span class="hljs-keyword">else</span>&#123;<br>                        <span class="hljs-keyword">if</span>(dm == <span class="hljs-number">12</span> &amp;&amp; dd &gt;= <span class="hljs-number">2</span>)ans += <span class="hljs-number">2</span>;<br>                        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(dm &gt; <span class="hljs-number">2</span> &amp;&amp; dm &lt;= <span class="hljs-number">12</span>) ans ++;<br>                        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(dm  == <span class="hljs-number">2</span> &amp;&amp; dd &gt;= <span class="hljs-number">2</span>)ans ++;<br>                    &#125;<br>                &#125;<br>            &#125;<br>            <span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-keyword">if</span>(y % <span class="hljs-number">1000</span> == <span class="hljs-number">202</span> || y / <span class="hljs-number">10</span> == <span class="hljs-number">202</span>)&#123;<br>                    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span> ; i &lt; dm ; i ++)&#123;<br>                        <span class="hljs-keyword">if</span>(i == <span class="hljs-number">1</span> || i == <span class="hljs-number">3</span> || i == <span class="hljs-number">5</span> || i == <span class="hljs-number">7</span> || i == <span class="hljs-number">8</span> || i == <span class="hljs-number">10</span> || i == <span class="hljs-number">12</span>)ans += <span class="hljs-number">31</span>;<br>                        <span class="hljs-keyword">if</span>(i == <span class="hljs-number">4</span> || i == <span class="hljs-number">6</span> || i == <span class="hljs-number">9</span> || i == <span class="hljs-number">11</span>)ans += <span class="hljs-number">30</span>;<br>                        <span class="hljs-keyword">if</span>(i == <span class="hljs-number">2</span>)ans += <span class="hljs-number">29</span>;<br>                    &#125;<br>                    ans = ans + dd;<br>                &#125;<br>                <span class="hljs-keyword">else</span>&#123;<br>                    <span class="hljs-keyword">if</span>(y % <span class="hljs-number">10</span> == <span class="hljs-number">2</span>)&#123;<br>                        <span class="hljs-keyword">if</span>(dm == <span class="hljs-number">12</span> &amp;&amp; dd &gt;= <span class="hljs-number">2</span>)ans += <span class="hljs-number">29</span>;<br>                        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(dm &gt; <span class="hljs-number">2</span> &amp;&amp; dm &lt;= <span class="hljs-number">12</span>)ans += <span class="hljs-number">28</span>;<br>                        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(dm == <span class="hljs-number">2</span>)ans += dd;<br>                        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(dm &lt; <span class="hljs-number">2</span>)ans = ans;<br>                    &#125;<br>                    <span class="hljs-keyword">else</span>&#123;<br>                        <span class="hljs-keyword">if</span>(m &lt; <span class="hljs-number">2</span> || (m == <span class="hljs-number">2</span> &amp;&amp; d &lt;= <span class="hljs-number">2</span>))ans++;<br>                        <span class="hljs-keyword">if</span>(m &lt; <span class="hljs-number">12</span> || (m == <span class="hljs-number">12</span> &amp;&amp; d &lt;= <span class="hljs-number">2</span>))ans += <span class="hljs-number">1</span>;<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;       <br>    <span class="hljs-comment">// printf(&quot;%d\n&quot;,ans);</span><br>    cout&lt;&lt;ans&lt;&lt;endl;<br>        <br>        <br>    &#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><h1 id="代码结束"><a href="#代码结束" class="headerlink" title="代码结束"></a>代码结束</h1><p><img src="/images/p4.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>字符串</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>B - String</title>
    <link href="/2021/04/15/15.String/"/>
    <url>/2021/04/15/15.String/</url>
    
    <content type="html"><![CDATA[<h1 id="B-String"><a href="#B-String" class="headerlink" title="B - String"></a><a href="https://vjudge.z180.cn/problem/HDU-6572">B - String</a></h1><h2 id="2021-4-12-qlu训练"><a href="#2021-4-12-qlu训练" class="headerlink" title="2021.4.12,qlu训练"></a>2021.4.12,qlu训练<br></h2><span id="more"></span><The><h1 id="题干"><a href="#题干" class="headerlink" title="题干"></a>题干</h1><h4 id="Avin-has-a-string-He-would-like-to-uniform-randomly-select-four-characters-selecting-the-same-character-is-allowed-from-it-You-are-asked-to-calculate-the-probability-of-the-four-characters-being-”avin”-in-order"><a href="#Avin-has-a-string-He-would-like-to-uniform-randomly-select-four-characters-selecting-the-same-character-is-allowed-from-it-You-are-asked-to-calculate-the-probability-of-the-four-characters-being-”avin”-in-order" class="headerlink" title="Avin has a string. He would like to uniform-randomly select four characters (selecting the same character is allowed) from it. You are asked to calculate the probability of the four characters being ”avin” in order."></a>Avin has a string. He would like to uniform-randomly select four characters (selecting the same character is allowed) from it. You are asked to calculate the probability of the four characters being ”avin” in order.</h4><h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><h4 id="The-first-line-contains-n-1-≤-n-≤-100-the-length-of-the-string-The-second-line-contains-the-string-To-simplify-the-problem-the-characters-of-the-string-are-from-’a’-’v’-’i’-’n’"><a href="#The-first-line-contains-n-1-≤-n-≤-100-the-length-of-the-string-The-second-line-contains-the-string-To-simplify-the-problem-the-characters-of-the-string-are-from-’a’-’v’-’i’-’n’" class="headerlink" title="The first line contains n (1 ≤ n ≤ 100), the length of the string. The second line contains the string. To simplify the problem, the characters of the string are from ’a’, ’v’, ’i’, ’n’."></a>The first line contains n (1 ≤ n ≤ 100), the length of the string. The second line contains the string. To simplify the problem, the characters of the string are from ’a’, ’v’, ’i’, ’n’.</h4><h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><h4 id="Print-the-reduced-fraction-the-greatest-common-divisor-of-the-numerator-and-denominator-is-1-representing-the-probability-If-the-answer-is-0-you-should-output-“0-1”"><a href="#Print-the-reduced-fraction-the-greatest-common-divisor-of-the-numerator-and-denominator-is-1-representing-the-probability-If-the-answer-is-0-you-should-output-“0-1”" class="headerlink" title="Print the reduced fraction (the greatest common divisor of the numerator and denominator is 1), representing the probability. If the answer is 0, you should output “0/1”."></a>Print the reduced fraction (the greatest common divisor of the numerator and denominator is 1), representing the probability. If the answer is 0, you should output “0/1”.</h4><h2 id="Sample-Input："><a href="#Sample-Input：" class="headerlink" title="Sample Input："></a>Sample Input：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">4<br>avin<br>4<br>aaaa<br></code></pre></div></td></tr></table></figure><h2 id="Sample-Output："><a href="#Sample-Output：" class="headerlink" title="Sample Output："></a>Sample Output：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">1/256<br>0/1<br></code></pre></div></td></tr></table></figure><h1 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h1><h2 id="题意：实际上就是求总概率就是avin的分概率相乘，所以下端就是n-n-n-n-上面就是4字母个数量相乘，这样得出来的就是概率总和值了。"><a href="#题意：实际上就是求总概率就是avin的分概率相乘，所以下端就是n-n-n-n-上面就是4字母个数量相乘，这样得出来的就是概率总和值了。" class="headerlink" title="题意：实际上就是求总概率就是avin的分概率相乘，所以下端就是n * n * n *n 上面就是4字母个数量相乘，这样得出来的就是概率总和值了。"></a>题意：实际上就是求总概率就是avin的分概率相乘，所以下端就是n * n * n *n 上面就是4字母个数量相乘，这样得出来的就是概率总和值了。</h2><h4 id="代码注意开long-long-否则过不去"><a href="#代码注意开long-long-否则过不去" class="headerlink" title="代码注意开long long 否则过不去"></a>代码注意开long long 否则过不去</h4><h1 id="解题代码"><a href="#解题代码" class="headerlink" title="解题代码"></a>解题代码</h1><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cmath&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstring&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-comment">// long long gcd(long long a,long long  b)&#123; return b==0?a:gcd(b,a%b); &#125;</span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-keyword">char</span> s[<span class="hljs-number">1000</span>] = &#123;&#125;;<br>    <span class="hljs-keyword">int</span> n = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span> (<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;n) != EOF)<br>    &#123;<br>        <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> m = <span class="hljs-number">1</span>,i,ans = <span class="hljs-number">0</span>,k;<br>        <span class="hljs-keyword">int</span> a[<span class="hljs-number">100</span>] = &#123;&#125;;<br>        <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt; n; i++)<br>        &#123;<br>            cin&gt;&gt;s[i];<br>            <span class="hljs-keyword">if</span>(s[i] == <span class="hljs-string">&#x27;a&#x27;</span>)a[<span class="hljs-number">1</span>]++;<br>            <span class="hljs-keyword">if</span>(s[i] == <span class="hljs-string">&#x27;v&#x27;</span>)a[<span class="hljs-number">2</span>]++;<br>            <span class="hljs-keyword">if</span>(s[i] == <span class="hljs-string">&#x27;i&#x27;</span>)a[<span class="hljs-number">3</span>]++;<br>            <span class="hljs-keyword">if</span>(s[i] == <span class="hljs-string">&#x27;n&#x27;</span>)a[<span class="hljs-number">4</span>]++;<br>            <span class="hljs-comment">// m = m*4;</span><br>        &#125;<br>        <span class="hljs-keyword">if</span>(a[<span class="hljs-number">1</span>] == <span class="hljs-number">0</span> || a[<span class="hljs-number">2</span>] == <span class="hljs-number">0</span> || a[<span class="hljs-number">3</span>] == <span class="hljs-number">0</span> || a[<span class="hljs-number">4</span>] == <span class="hljs-number">0</span>)&#123;<br>            cout&lt;&lt;<span class="hljs-string">&quot;0/1&quot;</span>&lt;&lt;endl;<br>        &#125;<br>        <span class="hljs-keyword">else</span> &#123;<br>            ans = a[<span class="hljs-number">1</span>] * a[<span class="hljs-number">2</span>] * a[<span class="hljs-number">3</span>] * a[<span class="hljs-number">4</span>];<br>            m = <span class="hljs-built_in">pow</span>(n,<span class="hljs-number">4</span>);<br>            k = __gcd(ans,m);<br>            <span class="hljs-keyword">if</span>(k == <span class="hljs-number">0</span>)k = <span class="hljs-number">1</span>;<br>            cout&lt;&lt;ans/k&lt;&lt;<span class="hljs-string">&quot;/&quot;</span>&lt;&lt;m/k&lt;&lt;endl;<br>        &#125;<br>        <br>    &#125;<br>    <br><br>    <br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></div></td></tr></table></figure><h1 id="代码结束"><a href="#代码结束" class="headerlink" title="代码结束"></a>代码结束</h1>]]></content>
    
    
    <categories>
      
      <category>code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>字符串</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>H - 爱情</title>
    <link href="/2021/04/15/16.%E7%88%B1%E6%83%85/"/>
    <url>/2021/04/15/16.%E7%88%B1%E6%83%85/</url>
    
    <content type="html"><![CDATA[<h2 id="H-爱情"><a href="#H-爱情" class="headerlink" title="H - 爱情"></a><a href="https://vjudge.z180.cn/problem/%E8%AE%A1%E8%92%9C%E5%AE%A2-T3336">H - 爱情</a></h2><h2 id="2021-4-12-qlu训练"><a href="#2021-4-12-qlu训练" class="headerlink" title="2021.4.12,qlu训练"></a>2021.4.12,qlu训练<br></h2><span id="more"></span><The><h1 id="题干"><a href="#题干" class="headerlink" title="题干"></a>题干</h1><h4 id="蒜头和可爱的小葱开启了一段可爱的爱情。这天，蒜头收到了来自小葱的一张纸条，上面写着：”qielporvoeiyeocup”。蒜头一眼就看出来这是-“iloveyou”-的拙劣加密，于是她想剪下含有子序列-“love”-的最短片段纪念。在这个例子中，最短片段即为-“lporvoe”。蒜头将会给你一个长度为-n-的小写字母字符串，让你求出含有子序列-“love”-的字符串的最短长度，保证一定有解。"><a href="#蒜头和可爱的小葱开启了一段可爱的爱情。这天，蒜头收到了来自小葱的一张纸条，上面写着：”qielporvoeiyeocup”。蒜头一眼就看出来这是-“iloveyou”-的拙劣加密，于是她想剪下含有子序列-“love”-的最短片段纪念。在这个例子中，最短片段即为-“lporvoe”。蒜头将会给你一个长度为-n-的小写字母字符串，让你求出含有子序列-“love”-的字符串的最短长度，保证一定有解。" class="headerlink" title="蒜头和可爱的小葱开启了一段可爱的爱情。这天，蒜头收到了来自小葱的一张纸条，上面写着：”qielporvoeiyeocup”。蒜头一眼就看出来这是 “iloveyou” 的拙劣加密，于是她想剪下含有子序列 “love” 的最短片段纪念。在这个例子中，最短片段即为 “lporvoe”。蒜头将会给你一个长度为 n 的小写字母字符串，让你求出含有子序列 “love” 的字符串的最短长度，保证一定有解。"></a>蒜头和可爱的小葱开启了一段可爱的爱情。<br/>这天，蒜头收到了来自小葱的一张纸条，上面写着：”qielporvoeiyeocup”。<br/>蒜头一眼就看出来这是 “iloveyou” 的拙劣加密，于是她想剪下含有子序列 “love” 的最短片段纪念。在这个例子中，最短片段即为 “lporvoe”。<br/>蒜头将会给你一个长度为 n 的小写字母字符串，让你求出含有子序列 “love” 的字符串的最短长度，保证一定有解。</h4><h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><h4 id="输入共-1-行。第-1-行输入-1-个正整数-n。第-2-行输入长度为-n-的正整数-a-i"><a href="#输入共-1-行。第-1-行输入-1-个正整数-n。第-2-行输入长度为-n-的正整数-a-i" class="headerlink" title="输入共 1 行。第 1 行输入 1 个正整数 n。第 2 行输入长度为 n 的正整数 a[i]."></a>输入共 1 行。<br/>第 1 行输入 1 个正整数 n。<br/>第 2 行输入长度为 n 的正整数 a[i].</h4><h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><h4 id="输出共-1-行-1-个整数，表示最短子序列长度。"><a href="#输出共-1-行-1-个整数，表示最短子序列长度。" class="headerlink" title="输出共 1 行 1 个整数，表示最短子序列长度。"></a>输出共 1 行 1 个整数，表示最短子序列长度。</h4><h2 id="Sample-Input："><a href="#Sample-Input：" class="headerlink" title="Sample Input："></a>Sample Input：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">17<br>qielporvoeiyeocup<br></code></pre></div></td></tr></table></figure><h2 id="Sample-Output："><a href="#Sample-Output：" class="headerlink" title="Sample Output："></a>Sample Output：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">7<br></code></pre></div></td></tr></table></figure><h1 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h1><h2 id="题意：暴力for循环"><a href="#题意：暴力for循环" class="headerlink" title="题意：暴力for循环"></a>题意：暴力for循环</h2><h1 id="解题代码"><a href="#解题代码" class="headerlink" title="解题代码"></a>解题代码</h1><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cmath&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstring&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-keyword">char</span> s[<span class="hljs-number">1000100</span>] = &#123;&#125;;<br>    <span class="hljs-keyword">int</span> n,m = <span class="hljs-number">0</span>,j = <span class="hljs-number">0</span>,k = <span class="hljs-number">0</span>,flag = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">int</span> cnt[<span class="hljs-number">4</span>] = &#123;&#125;,ans = <span class="hljs-number">9999999</span>;<br>    cin&gt;&gt;n;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)<br>    &#123;<br>        cin&gt;&gt;s[i];<br>        <span class="hljs-keyword">if</span>(s[i] == <span class="hljs-string">&#x27;l&#x27;</span> &amp;&amp; flag == <span class="hljs-number">0</span>)&#123;<span class="hljs-comment">/*第一个l*/</span><br>            m = i;<br>            flag = <span class="hljs-number">1</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(s[i] == <span class="hljs-string">&#x27;e&#x27;</span>) k = i;<span class="hljs-comment">/*最后一个e*/</span><br>    &#125;<br>    <span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> ( i = m; i &lt;= k; i++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(s[i] != <span class="hljs-string">&#x27;l&#x27;</span>)<span class="hljs-keyword">continue</span>;<span class="hljs-comment">/*找到l进入第2层循环*/</span><br>        cnt[<span class="hljs-number">0</span>] = <span class="hljs-number">1</span>;<br>        j = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> q = i+<span class="hljs-number">1</span>; q &lt;= k; q++)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(s[q] == <span class="hljs-string">&#x27;o&#x27;</span> &amp;&amp; cnt[<span class="hljs-number">0</span>] == <span class="hljs-number">1</span>)&#123;<span class="hljs-comment">/*cnt[i]是love顺序出现的开关*/</span><br>                cnt[<span class="hljs-number">1</span>] = <span class="hljs-number">1</span>;<br>            &#125;<br>            <span class="hljs-keyword">if</span>(s[q] == <span class="hljs-string">&#x27;v&#x27;</span> &amp;&amp; cnt[<span class="hljs-number">1</span>] == <span class="hljs-number">1</span>)&#123;<br>                cnt[<span class="hljs-number">2</span>] = <span class="hljs-number">1</span>;<br>            &#125;<br>            <span class="hljs-keyword">if</span>(s[q] == <span class="hljs-string">&#x27;e&#x27;</span> &amp;&amp; cnt[<span class="hljs-number">2</span>] == <span class="hljs-number">1</span>)&#123;<br>                cnt[<span class="hljs-number">3</span>] = <span class="hljs-number">1</span>;<br>                j = q;<br>            &#125;<br>            <span class="hljs-keyword">if</span>(cnt[<span class="hljs-number">3</span>] == <span class="hljs-number">1</span>)&#123;<br>                ans = <span class="hljs-built_in">min</span>(ans,j-i+<span class="hljs-number">1</span>);<span class="hljs-comment">/*找最小字串*/</span><br>                cnt[<span class="hljs-number">3</span>] = cnt[<span class="hljs-number">2</span>] = cnt[<span class="hljs-number">1</span>] = <span class="hljs-number">0</span>;<span class="hljs-comment">/*归零*/</span><br>                <span class="hljs-keyword">break</span>;<span class="hljs-comment">/*跳出循环*/</span><br>            &#125;<br>        &#125;<br>        <br>    &#125;<br>    cout&lt;&lt;ans;<br>    <br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></div></td></tr></table></figure><h1 id="代码结束"><a href="#代码结束" class="headerlink" title="代码结束"></a>代码结束</h1>]]></content>
    
    
    <categories>
      
      <category>code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>字符串</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>A Count Task</title>
    <link href="/2021/04/15/14.ACountTask/"/>
    <url>/2021/04/15/14.ACountTask/</url>
    
    <content type="html"><![CDATA[<h1 id="A-A-Count-Task"><a href="#A-A-Count-Task" class="headerlink" title="A - A Count Task"></a><a href="https://vjudge.z180.cn/problem/HDU-6480">A - A Count Task</a></h1><h2 id="2021-4-15-qlu训练"><a href="#2021-4-15-qlu训练" class="headerlink" title="2021.4.15,qlu训练"></a>2021.4.15,qlu训练<br></h2><span id="more"></span><The><h1 id="题干"><a href="#题干" class="headerlink" title="题干"></a>题干</h1><h4 id="Count-is-one-of-WNJXYK’s-favorite-tasks-Recently-he-had-a-very-long-string-and-he-wondered-that-how-many-substrings-which-contains-exactly-one-kind-of-lowercase-in-this-long-string-But-this-string-is-so-long-that-he-had-kept-counting-for-several-days-His-friend-Kayaking-wants-to-help-him-so-he-turns-to-you-for-help"><a href="#Count-is-one-of-WNJXYK’s-favorite-tasks-Recently-he-had-a-very-long-string-and-he-wondered-that-how-many-substrings-which-contains-exactly-one-kind-of-lowercase-in-this-long-string-But-this-string-is-so-long-that-he-had-kept-counting-for-several-days-His-friend-Kayaking-wants-to-help-him-so-he-turns-to-you-for-help" class="headerlink" title="Count is one of WNJXYK’s favorite tasks. Recently, he had a very long string and he wondered that how many substrings which contains exactly one kind of lowercase in this long string. But this string is so long that he had kept counting for several days. His friend Kayaking wants to help him, so he turns to you for help."></a>Count is one of WNJXYK’s favorite tasks. Recently, he had a very long string and he wondered that how many substrings which contains exactly one kind of lowercase in this long string. But this string is so long that he had kept counting for several days. His friend Kayaking wants to help him, so he turns to you for help.</h4><h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><h4 id="The-input-starts-with-one-line-contains-exactly-one-positive-integer-TT-which-is-the-number-of-test-cases-Each-test-case-contains-one-line-with-a-string-which-you-need-to-do-a-counting-task-on"><a href="#The-input-starts-with-one-line-contains-exactly-one-positive-integer-TT-which-is-the-number-of-test-cases-Each-test-case-contains-one-line-with-a-string-which-you-need-to-do-a-counting-task-on" class="headerlink" title="The input starts with one line contains exactly one positive integer TT which is the number of test cases.Each test case contains one line with a string which you need to do a counting task on."></a>The input starts with one line contains exactly one positive integer TT which is the number of test cases.<br/>Each test case contains one line with a string which you need to do a counting task on.</h4><h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><h4 id="For-each-test-case-output-one-line-containing-“y”-where-y-is-the-number-of-target-substrings"><a href="#For-each-test-case-output-one-line-containing-“y”-where-y-is-the-number-of-target-substrings" class="headerlink" title="For each test case, output one line containing “y” where y is the number of target substrings."></a>For each test case, output one line containing “y” where y is the number of target substrings.</h4><h2 id="Sample-Input："><a href="#Sample-Input：" class="headerlink" title="Sample Input："></a>Sample Input：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">3<br>qwertyuiop<br>qqwweerrttyyuuiioopp<br>aaaaaaaaaa<br></code></pre></div></td></tr></table></figure><h2 id="Sample-Output："><a href="#Sample-Output：" class="headerlink" title="Sample Output："></a>Sample Output：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">10<br>30<br>55<br></code></pre></div></td></tr></table></figure><h2 id="Hint"><a href="#Hint" class="headerlink" title="Hint"></a>Hint</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">1&lt;=T&lt;=20,1&lt;=len(string)&lt;=10^5,1&lt;=∑len(string)&lt;=10^5<br>Strings only contain lowercase English letters.<br></code></pre></div></td></tr></table></figure><h1 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h1><h2 id="题意：现有一串全为小写字母的字符串求其中字串只含一种小写字母的所有情况联系的n个小写字母共有-n-1-n-2个答案，将所有的连续字符串求和。"><a href="#题意：现有一串全为小写字母的字符串求其中字串只含一种小写字母的所有情况联系的n个小写字母共有-n-1-n-2个答案，将所有的连续字符串求和。" class="headerlink" title="题意：现有一串全为小写字母的字符串求其中字串只含一种小写字母的所有情况联系的n个小写字母共有(n+1)*n/2个答案，将所有的连续字符串求和。"></a>题意：现有一串全为小写字母的字符串求其中字串只含一种小写字母的所有情况<br>联系的n个小写字母共有(n+1)*n/2个答案，将所有的连续字符串求和。</h2><h1 id="解题代码"><a href="#解题代码" class="headerlink" title="解题代码"></a>解题代码</h1><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cmath&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstring&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> ll;<br><span class="hljs-keyword">char</span> s[<span class="hljs-number">1000100</span>] = &#123;&#125;;<br><span class="hljs-comment">// int sums(int x)&#123;</span><br><span class="hljs-comment">//     int sum = x;</span><br><span class="hljs-comment">//     while (x--)</span><br><span class="hljs-comment">//     &#123;</span><br><span class="hljs-comment">//         sum += x;</span><br><span class="hljs-comment">//     &#125;</span><br><span class="hljs-comment">//     return sum;</span><br>    <br><span class="hljs-comment">// &#125;</span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-keyword">int</span> t;<br>    cin&gt;&gt;t;<br>    <span class="hljs-keyword">while</span> (t--)<br>    &#123;<br>        <span class="hljs-built_in">memset</span>(s,<span class="hljs-number">0</span>,<span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(s));<span class="hljs-comment">//清理字符数组</span><br>        ll ans = <span class="hljs-number">0</span>;<span class="hljs-comment">//开long long数据的范围</span><br>        ll a = <span class="hljs-number">0</span>;<span class="hljs-comment">//ans相同的范围</span><br>        cin&gt;&gt;s;<br>        <span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; s[i] != <span class="hljs-string">&#x27;\0&#x27;</span> ; i++)<span class="hljs-comment">//从头遍历</span><br>        &#123;<br>            a = <span class="hljs-number">1</span>;<br>            <span class="hljs-keyword">while</span>(s[i+<span class="hljs-number">1</span>] != <span class="hljs-string">&#x27;\0&#x27;</span> &amp;&amp; s[i] == s[i+<span class="hljs-number">1</span>])&#123;<span class="hljs-comment">//求连续字串</span><br>                a++;<br>                i++;<span class="hljs-comment">//i要 ++;</span><br>            &#125;<br>            ans += (a+<span class="hljs-number">1</span>)*a/<span class="hljs-number">2</span>;<br>        &#125;<br>        cout&lt;&lt;ans&lt;&lt;endl;<br>    &#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></div></td></tr></table></figure><h1 id="代码结束"><a href="#代码结束" class="headerlink" title="代码结束"></a>代码结束</h1>]]></content>
    
    
    <categories>
      
      <category>code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>字符串</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Youmu with bits calculation</title>
    <link href="/2021/02/08/13,Youmuwithbitscalculation/"/>
    <url>/2021/02/08/13,Youmuwithbitscalculation/</url>
    
    <content type="html"><![CDATA[<h1 id="Youmu-with-bits-calculation"><a href="#Youmu-with-bits-calculation" class="headerlink" title="Youmu with bits calculation"></a>Youmu with bits calculation</h1><h2 id="2021-2-8-qlu-003签到题"><a href="#2021-2-8-qlu-003签到题" class="headerlink" title="2021.2.8,qlu_003签到题"></a>2021.2.8,qlu_003<br>签到题</h2><span id="more"></span><The><h1 id="原题"><a href="#原题" class="headerlink" title="原题"></a><a href="http://icpc.qlu.edu.cn/contest/problem?id=7&pid=0">原题</a></h1><h4 id="As-the-gardener-of-the-literally-Tower-of-White-Jade-Youmu-does-her-jobs-perfectly-But-now-Yuyuko-the-leader-of-the-literally-Tower-of-White-Jade-finds-the-normal-days-are-boring-so-she-wants-to-do-something-special-which-is-collecting-the-‘spring’-As-a-leader-of-course-she-will-not-do-it-at-herself-so-she-comes-to-Youmu-to-let-Youmu-collect-the-springs-As-the-gardener-of-the-literally-Tower-of-White-Jade-Youmu-is-very-willingly-to-do-the-job-but-now-Yuyuko-wants-to-test-her-before-she-leaves-just-to-check-if-Youmu-can-do-the-job-perfectly-Now-Yuyuko-wants-to-do-some-calculating-which-is-about-the-bits-She-wants-to-know-for-a-certain-positive-integer-after-some-and-and-or-operations-the-final-results-of-the-certain-number-Youmu-though-is-a-gardener-also-a-experienced-programmer-she-solved-the-problem-quickly-so-can-you-solve-the-problem-too-Which-just-write-a-program-about-bits-calculating"><a href="#As-the-gardener-of-the-literally-Tower-of-White-Jade-Youmu-does-her-jobs-perfectly-But-now-Yuyuko-the-leader-of-the-literally-Tower-of-White-Jade-finds-the-normal-days-are-boring-so-she-wants-to-do-something-special-which-is-collecting-the-‘spring’-As-a-leader-of-course-she-will-not-do-it-at-herself-so-she-comes-to-Youmu-to-let-Youmu-collect-the-springs-As-the-gardener-of-the-literally-Tower-of-White-Jade-Youmu-is-very-willingly-to-do-the-job-but-now-Yuyuko-wants-to-test-her-before-she-leaves-just-to-check-if-Youmu-can-do-the-job-perfectly-Now-Yuyuko-wants-to-do-some-calculating-which-is-about-the-bits-She-wants-to-know-for-a-certain-positive-integer-after-some-and-and-or-operations-the-final-results-of-the-certain-number-Youmu-though-is-a-gardener-also-a-experienced-programmer-she-solved-the-problem-quickly-so-can-you-solve-the-problem-too-Which-just-write-a-program-about-bits-calculating" class="headerlink" title="As the gardener of the literally Tower of White Jade, Youmu does her jobs perfectly.But now, Yuyuko the leader of the literally Tower of White Jade finds the normal days are boring, so she wants to do something special, which is collecting the ‘spring’. As a leader, of course she will not do it at herself, so she comes to Youmu to let Youmu collect the springs.As the gardener of the literally Tower of White Jade, Youmu is very willingly to do the job, but now Yuyuko wants to test her before she leaves, just to check if Youmu can do the job perfectly.Now, Yuyuko wants to do some calculating which is about the bits. She wants to know for a certain positive integer, after some *and* and *or* operations, the final results of the certain number.Youmu, though is a gardener, also a experienced programmer, she solved the problem quickly, so can you solve the problem, too? Which just write a program about bits calculating."></a>As the gardener of the literally Tower of White Jade, Youmu does her jobs perfectly.<br>But now, Yuyuko the leader of the literally Tower of White Jade finds the normal days are boring, so she wants to do something special, which is collecting the ‘spring’. As a leader, of course she will not do it at herself, so she comes to Youmu to let Youmu collect the springs.<br>As the gardener of the literally Tower of White Jade, Youmu is very willingly to do the job, but now Yuyuko wants to test her before she leaves, just to check if Youmu can do the job perfectly.<br>Now, Yuyuko wants to do some calculating which is about the bits. She wants to know for a certain positive integer, after some *<strong>and*</strong> and *<strong>or*</strong> operations, the final results of the certain number.<br>Youmu, though is a gardener, also a experienced programmer, she solved the problem quickly, so can you solve the problem, too? Which just write a program about bits calculating.</h4><p><img src="/images/Youmucalculation.jpg" alt="picture: the literally Tower of White Jade&lt;br&gt;"></p><h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><h4 id="The-first-line-of-the-input-contains-one-positive-integers-T-1-le-T-le1000-T-1≤T≤1000-indicating-the-number-of-the-test-cases-Then-for-each-test-case-first-line-contains-two-positive-integers-N-1-le-N-le1000-N-1≤N≤1000-indicating-the-number-of-bits-operations-and-M-0-le-M-le-10-18-M-0≤M≤1018-indicating-the-certain-positive-integer-Then-for-next-NN-lines-each-line-contains-one-string-indicating-the-operation-which-is-as-the-format-below-And-pos-1-0-means-do-the-and-operation-at-position-pos-with-1-0-Or-pos-1-0-means-do-the-or-operation-at-position-pos-with-1-0-It-is-guaranteed-that-the-pos-1-le-pos-le-60-pos-1≤po-s≤60"><a href="#The-first-line-of-the-input-contains-one-positive-integers-T-1-le-T-le1000-T-1≤T≤1000-indicating-the-number-of-the-test-cases-Then-for-each-test-case-first-line-contains-two-positive-integers-N-1-le-N-le1000-N-1≤N≤1000-indicating-the-number-of-bits-operations-and-M-0-le-M-le-10-18-M-0≤M≤1018-indicating-the-certain-positive-integer-Then-for-next-NN-lines-each-line-contains-one-string-indicating-the-operation-which-is-as-the-format-below-And-pos-1-0-means-do-the-and-operation-at-position-pos-with-1-0-Or-pos-1-0-means-do-the-or-operation-at-position-pos-with-1-0-It-is-guaranteed-that-the-pos-1-le-pos-le-60-pos-1≤po-s≤60" class="headerlink" title="The first line of the input contains one positive integers T (1\le T\le1000)T(1≤T≤1000) indicating the number of the test cases.Then for each test case, first line contains two positive integers N (1\le N\le1000)N(1≤N≤1000) indicating the number of bits operations and M (0\le M\le 10^{18})M(0≤M≤1018) indicating the certain positive integer.Then for next NN lines, each line contains one string indicating the operation, which is as the format below:And pos [1/0] means do the and* operation at position pos* with [1/0]*.Or pos [1/0] means do the or** operation at position *pos* with *[1/0]***.It is guaranteed that the pos(1\le pos \le 60)*pos(1≤po**s≤60)."></a>The first line of the input contains one positive integers T (1\le T\le1000)<em>T</em>(1≤<em>T</em>≤1000) indicating the number of the test cases.<br>Then for each test case, first line contains two positive integers N (1\le N\le1000)<em>N</em>(1≤<em>N</em>≤1000) indicating the number of bits operations and M (0\le M\le 10^{18})<em>M</em>(0≤<em>M</em>≤1018) indicating the certain positive integer.<br>Then for next N<em>N</em> lines, each line contains one string indicating the operation, which is as the format below:<br><strong>And pos [1/0]</strong> means do the <em><strong>and*</strong> operation at position <em><strong>pos*</strong> with <em><strong>[1/0]*</strong>.<br><strong>Or pos [1/0]</strong> means do the <strong><em>or*</em>* operation at position *<strong>pos*</strong> with <strong>*[1/0]***.<br>It is guaranteed that the pos(1\le pos \le 60)*p</strong>o</strong>s</em>(1≤</em>p</em><em>o**s</em>≤60).</h4><h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><h4 id="For-each-test-case-print-one-line-the-final-result"><a href="#For-each-test-case-print-one-line-the-final-result" class="headerlink" title="For each test case, print one line the final result."></a>For each test case, print one line the final result.</h4><h2 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">1<br>5 0<br>And 1 1<br>Or 1 1<br>Or 2 1<br>Or 3 1<br>And 2 0<br></code></pre></div></td></tr></table></figure><h2 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">864691128475344933<br></code></pre></div></td></tr></table></figure><h2 id="输入样例：-1"><a href="#输入样例：-1" class="headerlink" title="输入样例："></a>输入样例：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">1<br>5 998244353<br>And 60 0<br>And 59 0<br>And 58 0<br>And 57 0<br>And 56 0<br></code></pre></div></td></tr></table></figure><h2 id="输出样例：-1"><a href="#输出样例：-1" class="headerlink" title="输出样例："></a>输出样例：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">998244353<br></code></pre></div></td></tr></table></figure><h2 id="输入样例：-2"><a href="#输入样例：-2" class="headerlink" title="输入样例："></a>输入样例：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">1<br>5 0<br>And 1 1<br>Or 1 1<br>Or 2 1<br>Or 3 1<br>And 2 0<br></code></pre></div></td></tr></table></figure><h2 id="输出样例：-2"><a href="#输出样例：-2" class="headerlink" title="输出样例："></a>输出样例：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">5<br></code></pre></div></td></tr></table></figure><h2 id="Hint"><a href="#Hint" class="headerlink" title="Hint"></a>Hint</h2><h4 id="In-the-first-test-case-we-just-remove-the-1-at-index-4-so-the-sequence-becomes-1-2-3-3-it-is-non-decreasing-In-the-second-test-case-the-original-sequence-is-non-decreasing-so-we-don’t-need-to-delete-any-element"><a href="#In-the-first-test-case-we-just-remove-the-1-at-index-4-so-the-sequence-becomes-1-2-3-3-it-is-non-decreasing-In-the-second-test-case-the-original-sequence-is-non-decreasing-so-we-don’t-need-to-delete-any-element" class="headerlink" title="In the first test case, we just remove the 1 at index 4, so the sequence becomes 1,2,3,3 it is non-decreasing.In the second test case, the original sequence is non-decreasing, so we don’t need to delete any element."></a>In the first test case, we just remove the 1 at index 4, so the sequence becomes 1,2,3,3 it is non-decreasing.<br>In the second test case, the original sequence is non-decreasing, so we don’t need to delete any element.</h4><h1 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h1><h2 id="题意：给一个初始数M，再经过N次位运算。位运算的数是第a位与b进行位运算。我当时用数组存二进制数时，超时了。就又换了一种思路。将二进制转化位十进制按位与时pos只有第a位是b，其他的都是1，按位或时pos只有第a位时b，其他都是0。所以，可以都用0“按位与时b反过来”然后按位与运算时用pos的逆‘-’从而实现按位与的运算。这时进制转换就简单了，例：5-1-—-gt-pow-2-4-5-0—-gt-0-4-60-0—-gt-pow-0-59"><a href="#题意：给一个初始数M，再经过N次位运算。位运算的数是第a位与b进行位运算。我当时用数组存二进制数时，超时了。就又换了一种思路。将二进制转化位十进制按位与时pos只有第a位是b，其他的都是1，按位或时pos只有第a位时b，其他都是0。所以，可以都用0“按位与时b反过来”然后按位与运算时用pos的逆‘-’从而实现按位与的运算。这时进制转换就简单了，例：5-1-—-gt-pow-2-4-5-0—-gt-0-4-60-0—-gt-pow-0-59" class="headerlink" title="题意：给一个初始数M，再经过N次位运算。位运算的数是第a位与b进行位运算。我当时用数组存二进制数时，超时了。就又换了一种思路。将二进制转化位十进制按位与时pos只有第a位是b，其他的都是1，按位或时pos只有第a位时b，其他都是0。所以，可以都用0“按位与时b反过来”然后按位与运算时用pos的逆‘~’从而实现按位与的运算。这时进制转换就简单了，例：5 1 —-&gt;pow(2,4)   5 0—-&gt;(0,4)    60 0—-&gt;pow(0,59)"></a>题意：给一个初始数M，再经过N次位运算。位运算的数是第a位与b进行位运算。<br>我当时用数组存二进制数时，超时了。就又换了一种思路。<br>将二进制转化位十进制<br>按位与时pos只有第a位是b，其他的都是1，按位或时pos只有第a位时b，其他都是0。<br>所以，可以都用0“按位与时b反过来”然后按位与运算时用pos的逆‘~’从而实现按位与的运算。<br>这时进制转换就简单了，例：5 1 —-&gt;pow(2,4)   5 0—-&gt;(0,4)    60 0—-&gt;pow(0,59)</h2><h1 id="解题代码"><a href="#解题代码" class="headerlink" title="解题代码"></a>解题代码</h1><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cmath&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span>&#123;<br>    <span class="hljs-keyword">int</span> t;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;t);<br>    <span class="hljs-keyword">while</span> (t--)<br>    &#123;<br>        <span class="hljs-keyword">int</span> n,j,i,a,b;<br>        <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> ans,m,k;<br>        <span class="hljs-keyword">char</span> s[<span class="hljs-number">10</span>] = &#123;&#125;;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%lld&quot;</span>,&amp;n,&amp;ans);<br>        <span class="hljs-keyword">for</span> ( j = <span class="hljs-number">0</span>; j &lt; n; j++)<br>        &#123;<br>            k = <span class="hljs-number">0</span>;<br>            <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%s&quot;</span>,s);<br>            <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d&quot;</span>,&amp;a,&amp;b);<br>            <span class="hljs-keyword">if</span>(s[<span class="hljs-number">0</span>] == <span class="hljs-string">&#x27;A&#x27;</span>)&#123;<span class="hljs-comment">//and</span><br>                <span class="hljs-keyword">if</span>(b == <span class="hljs-number">1</span>)k = <span class="hljs-number">0</span>;<br>                <span class="hljs-keyword">else</span> k = <span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>,a<span class="hljs-number">-1</span>);<br>                m = ans &amp; ~k;<br>                ans = m;<br>            &#125;<br>            <span class="hljs-keyword">if</span>(s[<span class="hljs-number">0</span>] == <span class="hljs-string">&#x27;O&#x27;</span>)&#123;<span class="hljs-comment">//or</span><br>                <span class="hljs-keyword">if</span> (b == <span class="hljs-number">0</span>)<br>                &#123;<br>                    k = <span class="hljs-number">0</span>;<br>                &#125;<br>                <span class="hljs-keyword">else</span> k = <span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>,a<span class="hljs-number">-1</span>);<br>                ans = ans | k;<br>            &#125;<br>        &#125;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%lld\n&quot;</span>,ans);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><h4 id="大佬的代码"><a href="#大佬的代码" class="headerlink" title="大佬的代码"></a><a href="https://blog.csdn.net/qq_46133691/article/details/113760303">大佬的代码</a></h4><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstring&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cmath&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> ll;<br><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> N = <span class="hljs-number">1</span>;<br><br><span class="hljs-keyword">int</span> x[<span class="hljs-number">61</span>];<br>ll zz; <br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">f</span><span class="hljs-params">(ll z)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">int</span> pos1 = <span class="hljs-number">60</span>;<br><span class="hljs-keyword">while</span> (z != <span class="hljs-number">0</span>)<br>&#123;<br>x[pos1 --] = z % <span class="hljs-number">2</span>;<br>z /= <span class="hljs-number">2</span>; <br>&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">f3</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>zz = <span class="hljs-number">0</span>;<br>ll q = <span class="hljs-number">1</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">60</span>; i &gt; <span class="hljs-number">0</span>; i --)<br>&#123;<br>zz += q * x[i];<br>q *= <span class="hljs-number">2</span>;<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">int</span> t;<br>cin &gt;&gt; t;<br><span class="hljs-keyword">while</span> (t --)<br>&#123;<br>ll n, z;<br><span class="hljs-keyword">char</span> a[<span class="hljs-number">10</span>];<br>ll b, c;<br>cin &gt;&gt; n &gt;&gt; z;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">60</span>; i ++) x[i] = <span class="hljs-number">0</span>;<br><span class="hljs-built_in">f</span>(z);<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i ++)<br>&#123;<br>cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;<br><span class="hljs-keyword">if</span>(<span class="hljs-built_in">strcmp</span>(a,<span class="hljs-string">&quot;And&quot;</span>) == <span class="hljs-number">0</span>)<br>&#123;<br><span class="hljs-keyword">if</span>(x[<span class="hljs-number">60</span> - b + <span class="hljs-number">1</span>] == <span class="hljs-number">1</span> &amp;&amp; c == <span class="hljs-number">1</span>) x[<span class="hljs-number">60</span> - b + <span class="hljs-number">1</span>] = <span class="hljs-number">1</span>;<br><span class="hljs-keyword">else</span> x[<span class="hljs-number">60</span> - b + <span class="hljs-number">1</span>] = <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br><span class="hljs-keyword">if</span>(x[<span class="hljs-number">60</span> - b + <span class="hljs-number">1</span>] == <span class="hljs-number">1</span> || c == <span class="hljs-number">1</span>) x[<span class="hljs-number">60</span> - b + <span class="hljs-number">1</span>] = <span class="hljs-number">1</span>;<br><span class="hljs-keyword">else</span> x[<span class="hljs-number">60</span> - b + <span class="hljs-number">1</span>] = <span class="hljs-number">0</span>;<br>&#125;<br>&#125;<br><span class="hljs-built_in">f3</span>();<br>cout &lt;&lt; zz &lt;&lt; endl;<br>&#125;<br><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125; <br></code></pre></div></td></tr></table></figure><h1 id="代码结束"><a href="#代码结束" class="headerlink" title="代码结束"></a>代码结束</h1>]]></content>
    
    
    <categories>
      
      <category>code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>位运算</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Friendship of Frog</title>
    <link href="/2021/02/05/12,FriendshipofFrog/"/>
    <url>/2021/02/05/12,FriendshipofFrog/</url>
    
    <content type="html"><![CDATA[<h1 id="Friendship-of-Frog"><a href="#Friendship-of-Frog" class="headerlink" title="Friendship of Frog"></a>Friendship of Frog</h1><h2 id="2015-acm上海签到题"><a href="#2015-acm上海签到题" class="headerlink" title="2015,acm上海签到题"></a>2015,acm<br>上海签到题</h2><span id="more"></span><The><h1 id="原题"><a href="#原题" class="headerlink" title="原题"></a><a href="https://vjudge.z180.cn/contest/421732#problem/F">原题</a></h1><h4 id="NN-frogs-from-different-countries-are-standing-in-a-line-Each-country-is-represented-by-a-lowercase-letter-The-distance-between-adjacent-frogs-e-g-the-1st1st-and-the-2nd2nd-frog-the-N−1thN−1th-and-the-NthNth-frog-etc-are-exactly-11-Two-frogs-are-friends-if-they-come-from-the-same-country-The-closest-friends-are-a-pair-of-friends-with-the-minimum-distance-Help-us-find-that-distance"><a href="#NN-frogs-from-different-countries-are-standing-in-a-line-Each-country-is-represented-by-a-lowercase-letter-The-distance-between-adjacent-frogs-e-g-the-1st1st-and-the-2nd2nd-frog-the-N−1thN−1th-and-the-NthNth-frog-etc-are-exactly-11-Two-frogs-are-friends-if-they-come-from-the-same-country-The-closest-friends-are-a-pair-of-friends-with-the-minimum-distance-Help-us-find-that-distance" class="headerlink" title="NN frogs from different countries are standing in a line. Each country is represented by a lowercase letter. The distance between adjacent frogs (e.g. the 1st1st and the 2nd2nd frog, the N−1thN−1th and the NthNth frog, etc) are exactly 11. Two frogs are friends if they come from the same country.The closest friends are a pair of friends with the minimum distance. Help us find that distance."></a>NN frogs from different countries are standing in a line. Each country is represented by a lowercase letter. The distance between adjacent frogs (e.g. the 1st1st and the 2nd2nd frog, the N−1thN−1th and the NthNth frog, etc) are exactly 11. Two frogs are friends if they come from the same country.<br>The closest friends are a pair of friends with the <strong>minimum</strong> distance. Help us find that distance.</h4><h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><h4 id="First-line-contains-an-integer-TT-which-indicates-the-number-of-test-cases-Every-test-case-only-contains-a-string-with-length-NN-and-the-ithith-character-of-the-string-indicates-the-country-of-ithith-frogs-⋅⋅-1≤T≤501≤T≤50-⋅⋅-for-80-data-1≤N≤1001≤N≤100-⋅⋅-for-100-data-1≤N≤10001≤N≤1000-⋅⋅-the-string-only-contains-lowercase-letters"><a href="#First-line-contains-an-integer-TT-which-indicates-the-number-of-test-cases-Every-test-case-only-contains-a-string-with-length-NN-and-the-ithith-character-of-the-string-indicates-the-country-of-ithith-frogs-⋅⋅-1≤T≤501≤T≤50-⋅⋅-for-80-data-1≤N≤1001≤N≤100-⋅⋅-for-100-data-1≤N≤10001≤N≤1000-⋅⋅-the-string-only-contains-lowercase-letters" class="headerlink" title="First line contains an integer TT, which indicates the number of test cases.Every test case only contains a string with length NN, and the ithith character of the string indicates the country of ithith frogs.⋅⋅ 1≤T≤501≤T≤50.⋅⋅ for 80% data, 1≤N≤1001≤N≤100.⋅⋅ for 100% data, 1≤N≤10001≤N≤1000.⋅⋅ the string only contains lowercase letters."></a>First line contains an integer TT, which indicates the number of test cases.<br>Every test case only contains a string with length NN, and the ithith character of the string indicates the country of ithith frogs.<br>⋅⋅ 1≤T≤501≤T≤50.<br>⋅⋅ for 80% data, 1≤N≤1001≤N≤100.<br>⋅⋅ for 100% data, 1≤N≤10001≤N≤1000.<br>⋅⋅ the string only contains lowercase letters.</h4><h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><h4 id="For-every-test-case-you-should-output-“Case-x-y“-where-xx-indicates-the-case-number-and-counts-from-11-and-yy-is-the-result-If-there-are-no-frogs-in-same-country-output-−1−1-instead"><a href="#For-every-test-case-you-should-output-“Case-x-y“-where-xx-indicates-the-case-number-and-counts-from-11-and-yy-is-the-result-If-there-are-no-frogs-in-same-country-output-−1−1-instead" class="headerlink" title="For every test case, you should output “Case #x: y“, where xx indicates the case number and counts from 11 and yy is the result. If there are no frogs in same country, output −1−1 instead."></a>For every test case, you should output “<strong>Case #x: y</strong>“, where xx indicates the case number and counts from 11 and yy is the result. If there are no frogs in same country, output −1−1 instead.</h4><h2 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">2<br>abcecba<br>abc<br></code></pre></div></td></tr></table></figure><h2 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">Case #1: 2<br>Case #2: -1<br></code></pre></div></td></tr></table></figure><h1 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h1><h2 id="题意：给你一个长度为n（1-lt-n-lt-1000）的字符串，构成一条线。让你求出，位置最接近的两个相同字符串的的位置之差是多少。最多才1000个字符-既然是签到题-就不要多想了-暴力上就可以了对于第i个字符-往后找相同字符-不断更新Min值就ok了但我当时想复杂了，打算遍历一遍然后用count计数，在比较出最小值。"><a href="#题意：给你一个长度为n（1-lt-n-lt-1000）的字符串，构成一条线。让你求出，位置最接近的两个相同字符串的的位置之差是多少。最多才1000个字符-既然是签到题-就不要多想了-暴力上就可以了对于第i个字符-往后找相同字符-不断更新Min值就ok了但我当时想复杂了，打算遍历一遍然后用count计数，在比较出最小值。" class="headerlink" title="题意：给你一个长度为n（1&lt;=n&lt;=1000）的字符串，构成一条线。让你求出，位置最接近的两个相同字符串的的位置之差是多少。最多才1000个字符,既然是签到题,就不要多想了,暴力上就可以了对于第i个字符,往后找相同字符,不断更新Min值就ok了但我当时想复杂了，打算遍历一遍然后用count计数，在比较出最小值。"></a>题意：给你一个长度为n（1&lt;=n&lt;=1000）的字符串，构成一条线。让你求出，位置最接近的两个相同字符串的的位置之差是多少。<br>最多才1000个字符,既然是签到题,就不要多想了,暴力上就可以了对于第i个字符,往后找相同字符,不断更新Min值就ok了<br>但我当时想复杂了，打算遍历一遍然后用count计数，在比较出最小值。</h2><h1 id="解题代码"><a href="#解题代码" class="headerlink" title="解题代码"></a>解题代码</h1><h4 id="这是精简后的代码。"><a href="#这是精简后的代码。" class="headerlink" title="这是精简后的代码。"></a>这是精简后的代码。</h4><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cmath&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstring&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span>&#123;<br>    <span class="hljs-keyword">int</span> t;<br>    <span class="hljs-keyword">int</span> a = <span class="hljs-number">1</span>;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;t);<br>    <span class="hljs-keyword">while</span> (t--)<br>    &#123;<br>        <span class="hljs-keyword">int</span> n,m,j,i;<br>        <span class="hljs-keyword">int</span> flag = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">int</span> ans = <span class="hljs-number">99999</span>;<br>        <span class="hljs-keyword">char</span> f[<span class="hljs-number">5010</span>] = &#123;&#125;;<br>        <span class="hljs-built_in">memset</span>(f,<span class="hljs-number">0</span>,<span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(f));<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%s&quot;</span>,f);<br>        n = <span class="hljs-built_in">strlen</span>(f);<br>        <span class="hljs-keyword">for</span>( i = <span class="hljs-number">0</span>; i &lt; n; i++)<br>        &#123;<br>            <span class="hljs-keyword">for</span>( j = i+<span class="hljs-number">1</span>; j &lt; n; j++)<br>            &#123;<br>                <span class="hljs-keyword">if</span>(f[i] == f[j])<br>                    ans = <span class="hljs-built_in">min</span>(ans,j-i);<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(ans == <span class="hljs-number">99999</span>)ans = <span class="hljs-number">-1</span>;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Case #%d: %d\n&quot;</span>,a,ans);<br>        a++;<br>    &#125;<br><br>    <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><h4 id="还有一个我改了无数遍才改对的辣鸡代码"><a href="#还有一个我改了无数遍才改对的辣鸡代码" class="headerlink" title="还有一个我改了无数遍才改对的辣鸡代码"></a>还有一个我改了无数遍才改对的辣鸡代码</h4><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cmath&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstring&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span>&#123;<br>    <span class="hljs-keyword">int</span> t;<br>    <span class="hljs-keyword">int</span> a = <span class="hljs-number">1</span>;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;t);<br>    <span class="hljs-keyword">while</span> (t--)<br>    &#123;<br>        <span class="hljs-keyword">int</span> n,m,j,i;<br>        <span class="hljs-keyword">int</span> flag = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">int</span> ans = <span class="hljs-number">99999</span>;<br>        <span class="hljs-keyword">char</span> f[<span class="hljs-number">5010</span>] = &#123;&#125;;<br>        <span class="hljs-built_in">memset</span>(f,<span class="hljs-number">0</span>,<span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(f));<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%s&quot;</span>,f);<br>        n = <span class="hljs-built_in">strlen</span>(f);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Case #%d: &quot;</span>,a);<br>        <span class="hljs-keyword">if</span>(n &lt;= <span class="hljs-number">26</span>)&#123;<br>            <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span> ; i &lt; n ; i++)&#123;<br>                <span class="hljs-keyword">for</span>( j = i+<span class="hljs-number">1</span> ; j &lt; n ; j++)&#123;<br>                    <span class="hljs-keyword">if</span>(f[i] == f[j])&#123;<br>                        flag = <span class="hljs-number">-1</span>;<br>                        <span class="hljs-keyword">break</span>;<br>                    &#125;<br>                &#125;<br>                <span class="hljs-keyword">if</span>(flag == <span class="hljs-number">-1</span>)<span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">if</span>((flag == <span class="hljs-number">-1</span>) || n &gt; <span class="hljs-number">26</span>) &#123;<br>            <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt; n; i++)<br>            &#123;<br>                <span class="hljs-keyword">for</span> ( j = i+<span class="hljs-number">1</span>; j &lt; n; j++)<br>                &#123;<br>                    <span class="hljs-keyword">if</span>(f[i] == f[j])&#123;<br>                        m = j - i;<br>                        ans = <span class="hljs-built_in">min</span>(ans ,m);<br>                    &#125;<br>                &#125;<br>                <br>            &#125;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>,ans);<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;-1\n&quot;</span>);<br>        a++;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><h1 id="代码结束"><a href="#代码结束" class="headerlink" title="代码结束"></a>代码结束</h1>]]></content>
    
    
    <categories>
      
      <category>code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>水</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>1010 - Pow</title>
    <link href="/2021/02/01/11,pow/"/>
    <url>/2021/02/01/11,pow/</url>
    
    <content type="html"><![CDATA[<h1 id="1010-Pow"><a href="#1010-Pow" class="headerlink" title="1010 - Pow"></a>1010 - Pow</h1><h2 id="2021-2-2校内acm排位赛"><a href="#2021-2-2校内acm排位赛" class="headerlink" title="2021.2.2校内acm排位赛"></a>2021.2.2<br>校内acm排位赛</h2><span id="more"></span><The><h1 id="原题"><a href="#原题" class="headerlink" title="原题"></a><a href="http://icpc.qlu.edu.cn/p/1010">原题</a></h1><h4 id="As-we-all-now-that-there’s-a-easy-way-to-describe-some-same-consecutive-factors-multiply-each-other-which-is-POW-For-example-2-times2-times2-2-32×2×2-23-and-3-times3-3-23×3-32-and-it-is-easy-to-see-that-2-3-lt-3-223-lt-32-Now-your-math-teacher-just-gave-you-a-problem-in-his-class-which-is-100-99-10099-99-100-99100-which-one-is-bigger-There-are-many-ways-to-solve-that-and-you-solved-it-quickly-When-you-told-the-answer-to-your-teach-he-seemed-to-be-unsatisfactory-about-that-and-he-continued-to-asked-the-pow-problems-like-that-which-is-given-four-positive-integers-a-b-c-da-b-c-d-could-you-tell-that-which-one-is-bigger-between-a-ba-b-and-c-dc-d-or-they-are-equal"><a href="#As-we-all-now-that-there’s-a-easy-way-to-describe-some-same-consecutive-factors-multiply-each-other-which-is-POW-For-example-2-times2-times2-2-32×2×2-23-and-3-times3-3-23×3-32-and-it-is-easy-to-see-that-2-3-lt-3-223-lt-32-Now-your-math-teacher-just-gave-you-a-problem-in-his-class-which-is-100-99-10099-99-100-99100-which-one-is-bigger-There-are-many-ways-to-solve-that-and-you-solved-it-quickly-When-you-told-the-answer-to-your-teach-he-seemed-to-be-unsatisfactory-about-that-and-he-continued-to-asked-the-pow-problems-like-that-which-is-given-four-positive-integers-a-b-c-da-b-c-d-could-you-tell-that-which-one-is-bigger-between-a-ba-b-and-c-dc-d-or-they-are-equal" class="headerlink" title="As we all now that there’s a easy way to describe some same consecutive factors multiply each other which is POW.For example, 2\times2\times2=2^32×2×2=23 and 3\times3=3^23×3=32 and it is easy to see that 2^3&lt;3^223&lt;32.Now, your math teacher just gave you a problem in his class which is 100^{99}10099 99^{100}99100 which one is bigger? There are many ways to solve that and you solved it quickly. When you told the answer to your teach, he seemed to be unsatisfactory about that and he continued to asked the pow problems like that, which is given four positive integers a,b,c,da,b,c,d could you tell that which one is bigger between a^ba**b and c^dc**d or they are equal."></a>As we all now that there’s a easy way to describe some same consecutive factors multiply each other which is POW.<br>For example, 2\times2\times2=2^32×2×2=23 and 3\times3=3^23×3=32 and it is easy to see that 2^3&lt;3^223&lt;32.<br>Now, your math teacher just gave you a problem in his class which is 100^{99}10099 99^{100}99100 which one is bigger? There are many ways to solve that and you solved it quickly. When you told the answer to your teach, he seemed to be unsatisfactory about that and he continued to asked the pow problems like that, which is given four positive integers a,b,c,d<em>a</em>,<em>b</em>,<em>c</em>,<em>d</em> could you tell that which one is bigger between a^b<em>a**b</em> and c^d<em>c**d</em> or they are equal.<br></h4><p><img src="/images/pow.jpg" alt="picture: some answers in the Internet&lt;br&gt;"></p><h4 id="In-C-you-may-use-the-function-pow-to-calculate-the-answer"><a href="#In-C-you-may-use-the-function-pow-to-calculate-the-answer" class="headerlink" title="In C, you may use the function pow to calculate the answer:"></a>In C, you may use the function pow to calculate the answer:</h4><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>,<span class="hljs-number">3</span>)=<span class="hljs-number">8</span><br><span class="hljs-built_in">pow</span>(<span class="hljs-number">3</span>,<span class="hljs-number">2</span>)=<span class="hljs-number">9</span><br></code></pre></div></td></tr></table></figure><h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><h4 id="First-line-of-the-input-contains-one-positive-integer-T-1-le-T-le-10-5-T-1≤T≤105-indicating-the-number-of-the-test-cases-Next-TT-lines-each-line-contains-four-positive-integers-a-b-c-d-1-le-a-b-c-d-le10-9-a-b-c-d-1≤a-b-c-d≤109"><a href="#First-line-of-the-input-contains-one-positive-integer-T-1-le-T-le-10-5-T-1≤T≤105-indicating-the-number-of-the-test-cases-Next-TT-lines-each-line-contains-four-positive-integers-a-b-c-d-1-le-a-b-c-d-le10-9-a-b-c-d-1≤a-b-c-d≤109" class="headerlink" title="First line of the input contains one positive integer T (1\le T\le 10^5)T(1≤T≤105) indicating the number of the test cases.Next TT lines, each line contains four positive integers a,b,c,d (1\le a,b,c,d\le10^9)a,b,c,d(1≤a,b,c,d≤109)"></a>First line of the input contains one positive integer T (1\le T\le 10^5)<em>T</em>(1≤<em>T</em>≤105) indicating the number of the test cases.<br>Next T<em>T</em> lines, each line contains four positive integers a,b,c,d (1\le a,b,c,d\le10^9)<em>a</em>,<em>b</em>,<em>c</em>,<em>d</em>(1≤<em>a</em>,<em>b</em>,<em>c</em>,<em>d</em>≤109)</h4><h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><h4 id="Four-each-test-case"><a href="#Four-each-test-case" class="headerlink" title="Four each test case:"></a>Four each test case:</h4><p>if a^b&gt;c^d<em>a**b</em>&gt;<em>c**d</em> print LEFT<br>else if a^b=c^d<em>a**b</em>=<em>c**d</em> print EQUAL<br>else print RIGHT</p><h2 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">3<br>3 2 2 3<br>100 99 99 100<br>2 4 4 2<br></code></pre></div></td></tr></table></figure><h2 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">LEFT<br>RIGHT<br>EQUAL<br></code></pre></div></td></tr></table></figure><h1 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h1><h2 id="题意：输入四个数，a，c分别为底数，b，d分别为指数。求两个幂数的大小，并比较如果用cmath中的pow会不准，而自己写函数又会超时，所以要用高中的指对幂的转换。将其转换为log对数，而且一定要注意精度问题。"><a href="#题意：输入四个数，a，c分别为底数，b，d分别为指数。求两个幂数的大小，并比较如果用cmath中的pow会不准，而自己写函数又会超时，所以要用高中的指对幂的转换。将其转换为log对数，而且一定要注意精度问题。" class="headerlink" title="题意：输入四个数，a，c分别为底数，b，d分别为指数。求两个幂数的大小，并比较如果用cmath中的pow会不准，而自己写函数又会超时，所以要用高中的指对幂的转换。将其转换为log对数，而且一定要注意精度问题。"></a>题意：输入四个数，a，c分别为底数，b，d分别为指数。求两个幂数的大小，并比较<br>如果用cmath中的pow会不准，而自己写函数又会超时，所以要用高中的指对幂的转换。将其转换为log对数，而且一定要注意精度问题。</h2><h1 id="解题代码"><a href="#解题代码" class="headerlink" title="解题代码"></a>解题代码</h1><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cmath&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstring&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-keyword">int</span> t;<br>   <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;t);<br>    <span class="hljs-keyword">while</span>(t--)&#123;<br>        <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> a,b,c,d;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%lld%lld%lld%lld&quot;</span>,&amp;a,&amp;b,&amp;c,&amp;d);<br>        <span class="hljs-keyword">double</span> l = <span class="hljs-number">0</span>,r = <span class="hljs-number">0</span>;<br>        l = b*<span class="hljs-built_in">log</span>(a);<span class="hljs-comment">//左边的取对</span><br>        r = d*<span class="hljs-built_in">log</span>(c);<span class="hljs-comment">//右边的取对</span><br>        <span class="hljs-keyword">if</span>(l-r &gt; <span class="hljs-number">1e-8</span>) <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;LEFT\n&quot;</span>);<span class="hljs-comment">//注意精度问题控制在1e-8内</span><br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-built_in">fabs</span>(l-r) &lt;= <span class="hljs-number">1e-8</span>) <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;EQUAL\n&quot;</span>);<span class="hljs-comment">//虽然我也不知道为什么(;´༎ຶД༎ຶ`)</span><br>    <span class="hljs-keyword">else</span> <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;RIGHT\n&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><h1 id="代码结束"><a href="#代码结束" class="headerlink" title="代码结束"></a>代码结束</h1>]]></content>
    
    
    <categories>
      
      <category>code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>math</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Pagodas</title>
    <link href="/2021/02/01/10,Pagodas/"/>
    <url>/2021/02/01/10,Pagodas/</url>
    
    <content type="html"><![CDATA[<h1 id="Pagodas"><a href="#Pagodas" class="headerlink" title="Pagodas"></a>Pagodas</h1><h2 id="2015-沈阳签到题"><a href="#2015-沈阳签到题" class="headerlink" title="2015 沈阳签到题"></a>2015 <br>沈阳签到题</h2><span id="more"></span><The><h1 id="原题"><a href="#原题" class="headerlink" title="原题"></a><a href="https://vjudge.z180.cn/contest/420870#problem/D">原题</a></h1><h4 id="nn-pagodas-were-standing-erect-in-Hong-Jue-Si-between-the-Niushou-Mountain-and-the-Yuntai-Mountain-labelled-from-11-to-nn-However-only-two-of-them-labelled-aa-and-bb-where-1≤a≠b≤n1≤a≠b≤n-withstood-the-test-of-time-Two-monks-Yuwgna-and-Iaka-decide-to-make-glories-great-again-They-take-turns-to-build-pagodas-and-Yuwgna-takes-first-For-each-turn-one-can-rebuild-a-new-pagodas-labelled-i-i∉-a-b-and-1≤i≤n-i-i∉-a-b-and-1≤i≤n-if-there-exist-two-pagodas-standing-erect-labelled-jj-and-kk-respectively-such-that-i-j-ki-j-k-or-i-j−ki-j−k-Each-pagoda-can-not-be-rebuilt-twice-This-is-a-game-for-them-The-monk-who-can-not-rebuild-a-new-pagoda-will-lose-the-game"><a href="#nn-pagodas-were-standing-erect-in-Hong-Jue-Si-between-the-Niushou-Mountain-and-the-Yuntai-Mountain-labelled-from-11-to-nn-However-only-two-of-them-labelled-aa-and-bb-where-1≤a≠b≤n1≤a≠b≤n-withstood-the-test-of-time-Two-monks-Yuwgna-and-Iaka-decide-to-make-glories-great-again-They-take-turns-to-build-pagodas-and-Yuwgna-takes-first-For-each-turn-one-can-rebuild-a-new-pagodas-labelled-i-i∉-a-b-and-1≤i≤n-i-i∉-a-b-and-1≤i≤n-if-there-exist-two-pagodas-standing-erect-labelled-jj-and-kk-respectively-such-that-i-j-ki-j-k-or-i-j−ki-j−k-Each-pagoda-can-not-be-rebuilt-twice-This-is-a-game-for-them-The-monk-who-can-not-rebuild-a-new-pagoda-will-lose-the-game" class="headerlink" title="nn pagodas were standing erect in Hong Jue Si between the Niushou Mountain and the Yuntai Mountain, labelled from 11 to nn. However, only two of them (labelled aa and bb, where 1≤a≠b≤n1≤a≠b≤n) withstood the test of time.Two monks, Yuwgna and Iaka, decide to make glories great again. They take turns to build pagodas and Yuwgna takes first. For each turn, one can rebuild a new pagodas labelled i (i∉{a,b} and 1≤i≤n)i (i∉{a,b} and 1≤i≤n) if there exist two pagodas standing erect, labelled jj and kk respectively, such that i=j+ki=j+k or i=j−ki=j−k. Each pagoda can not be rebuilt twice.This is a game for them. The monk who can not rebuild a new pagoda will lose the game."></a>nn pagodas were standing erect in Hong Jue Si between the Niushou Mountain and the Yuntai Mountain, labelled from 11 to nn. However, only two of them (labelled aa and bb, where 1≤a≠b≤n1≤a≠b≤n) withstood the test of time.Two monks, Yuwgna and Iaka, decide to make glories great again. They take turns to build pagodas and Yuwgna takes first. For each turn, one can rebuild a new pagodas labelled i (i∉{a,b} and 1≤i≤n)i (i∉{a,b} and 1≤i≤n) if there exist two pagodas standing erect, labelled jj and kk respectively, such that i=j+ki=j+k or i=j−ki=j−k. Each pagoda can not be rebuilt twice.This is a game for them. The monk who can not rebuild a new pagoda will lose the game.</h4><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><h4 id="The-first-line-contains-an-integer-t-1≤t≤500-t-1≤t≤500-which-is-the-number-of-test-cases-For-each-test-case-the-first-line-provides-the-positive-integer-n-2≤n≤20000-n-2≤n≤20000-and-two-different-integers-aa-and-bb"><a href="#The-first-line-contains-an-integer-t-1≤t≤500-t-1≤t≤500-which-is-the-number-of-test-cases-For-each-test-case-the-first-line-provides-the-positive-integer-n-2≤n≤20000-n-2≤n≤20000-and-two-different-integers-aa-and-bb" class="headerlink" title="The first line contains an integer t (1≤t≤500)t (1≤t≤500) which is the number of test cases.For each test case, the first line provides the positive integer n (2≤n≤20000)n (2≤n≤20000) and two different integers aa and bb."></a>The first line contains an integer t (1≤t≤500)t (1≤t≤500) which is the number of test cases.<br>For each test case, the first line provides the positive integer n (2≤n≤20000)n (2≤n≤20000) and two different integers aa and bb.</h4><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><h4 id="For-each-test-case-output-the-winner-“Yuwgna”-or-“Iaka”-Both-of-them-will-make-the-best-possible-decision-each-time"><a href="#For-each-test-case-output-the-winner-“Yuwgna”-or-“Iaka”-Both-of-them-will-make-the-best-possible-decision-each-time" class="headerlink" title="For each test case, output the winner (“Yuwgna” or “Iaka”). Both of them will make the best possible decision each time."></a>For each test case, output the winner (“Yuwgna” or “Iaka”). Both of them will make the best possible decision each time.</h4><h2 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">16<br>2 1 2<br>3 1 3<br>67 1 2<br>100 1 2<br>8 6 8<br>9 6 8<br>10 6 8<br>11 6 8<br>12 6 8<br>13 6 8<br>14 6 8<br>15 6 8<br>16 6 8<br>1314 6 8<br>1994 1 13<br>1994 7 12<br></code></pre></div></td></tr></table></figure><h2 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">Case #1: Iaka<br>Case #2: Yuwgna<br>Case #3: Yuwgna<br>Case #4: Iaka<br>Case #5: Iaka<br>Case #6: Iaka<br>Case #7: Yuwgna<br>Case #8: Yuwgna<br>Case #9: Iaka<br>Case #10: Iaka<br>Case #11: Yuwgna<br>Case #12: Yuwgna<br>Case #13: Iaka<br>Case #14: Yuwgna<br>Case #15: Iaka<br>Case #16: Iaka<br></code></pre></div></td></tr></table></figure><h1 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h1><h2 id="题意：给你三个数：n-a-b，一开始集合里面有两个数：a和b，然后两个人轮流往这个集合里面增加数字，增加的这个数字的原则是：这个集合里面任选两个数的和或差（a-b或a-b或b-a的中的任意一个没被选中的符合-1-n-的点-），集合里面的数字不能重复，同时这个数字不能大于-n-，求最后哪个人选不了满足条件的数了。"><a href="#题意：给你三个数：n-a-b，一开始集合里面有两个数：a和b，然后两个人轮流往这个集合里面增加数字，增加的这个数字的原则是：这个集合里面任选两个数的和或差（a-b或a-b或b-a的中的任意一个没被选中的符合-1-n-的点-），集合里面的数字不能重复，同时这个数字不能大于-n-，求最后哪个人选不了满足条件的数了。" class="headerlink" title="题意：给你三个数：n,a,b，一开始集合里面有两个数：a和b，然后两个人轮流往这个集合里面增加数字，增加的这个数字的原则是：这个集合里面任选两个数的和或差（a + b或a - b或b -a的中的任意一个没被选中的符合[1,n]的点 ），集合里面的数字不能重复，同时这个数字不能大于 n ，求最后哪个人选不了满足条件的数了。"></a>题意：给你三个数：n,a,b，一开始集合里面有两个数：a和b，然后两个人轮流往这个集合里面增加数字，增加的这个数字的原则是：这个集合里面任选两个数的和或差（a + b或a - b或b -a的中的任意一个没被选中的符合[1,n]的点 ），集合里面的数字不能重复，同时这个数字不能大于 n ，求最后哪个人选不了满足条件的数了。</h2><h2 id="找规律，通过对a，b的加减可以得出所有可以重新建的塔都是ab的最大公因数的倍数，并且在n以内。"><a href="#找规律，通过对a，b的加减可以得出所有可以重新建的塔都是ab的最大公因数的倍数，并且在n以内。" class="headerlink" title="找规律，通过对a，b的加减可以得出所有可以重新建的塔都是ab的最大公因数的倍数，并且在n以内。"></a>找规律，通过对a，b的加减可以得出所有可以重新建的塔都是ab的最大公因数的倍数，并且在n以内。</h2><h1 id="解题代码"><a href="#解题代码" class="headerlink" title="解题代码"></a>解题代码</h1><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cmath&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">gcd</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a,<span class="hljs-keyword">int</span> b)</span></span>&#123;<br>    <span class="hljs-keyword">int</span> i;<br>    <span class="hljs-keyword">for</span> ( i = <span class="hljs-built_in">min</span>(a,b); i &gt;=<span class="hljs-number">1</span> ; i--)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(a%i == <span class="hljs-number">0</span> &amp;&amp; b%i == <span class="hljs-number">0</span>)&#123;<br>            <span class="hljs-keyword">return</span> i;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span>&#123;<br>    <span class="hljs-keyword">int</span> t;<br>    cin&gt;&gt;t;<br>    <span class="hljs-keyword">int</span> k = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">while</span> (t--)<br>    &#123;<br>        <span class="hljs-keyword">int</span> n,a,b;<br>        <span class="hljs-keyword">int</span> i,s;<br>        cin&gt;&gt;n&gt;&gt;a&gt;&gt;b;<br>        i = <span class="hljs-built_in">gcd</span>(a,b);<br>        s = n/i;<br>        cout&lt;&lt;<span class="hljs-string">&quot;Case #&quot;</span>&lt;&lt;k&lt;&lt;<span class="hljs-string">&quot;: &quot;</span>;<br>        k++;<br>        <span class="hljs-keyword">if</span>(s%<span class="hljs-number">2</span> == <span class="hljs-number">0</span>)&#123;<br>            cout&lt;&lt;<span class="hljs-string">&quot;Iaka&quot;</span>&lt;&lt;endl;<br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>            cout&lt;&lt;<span class="hljs-string">&quot;Yuwgna&quot;</span>&lt;&lt;endl;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cmath&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span>&#123;<br>    <span class="hljs-keyword">int</span> k;<br>    <span class="hljs-keyword">while</span> (<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;k) != EOF)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(k%<span class="hljs-number">2</span> == <span class="hljs-number">1</span>)&#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>,<span class="hljs-number">0</span>);<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(k%<span class="hljs-number">2</span> == <span class="hljs-number">0</span>)&#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>,<span class="hljs-number">1</span>);<br>        &#125;<br>    &#125;<br>    <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><h1 id="代码结束"><a href="#代码结束" class="headerlink" title="代码结束"></a>代码结束</h1>]]></content>
    
    
    <categories>
      
      <category>code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>水</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Convex</title>
    <link href="/2021/02/01/8,Convex/"/>
    <url>/2021/02/01/8,Convex/</url>
    
    <content type="html"><![CDATA[<h1 id="Convex"><a href="#Convex" class="headerlink" title="Convex"></a>Convex</h1><h2 id="画图推测"><a href="#画图推测" class="headerlink" title="画图推测"></a>画图推测</h2><span id="more"></span><The><h1 id="原题"><a href="#原题" class="headerlink" title="原题"></a>原题</h1><h4 id="江主席曾经提出过一个”-五点共圆”的问题-引起了全国人民的大讨论-现在-这儿也有一个平面几何的问题-有一种特殊的多边形，这种多边形的所有顶点到原点的距离都相同。连接原点和该多边形的所有顶点可以得到-N条线段，也可以得到每一对相邻线段的夹角。现在给你这N个夹角的角度，请计算这个多边形的面积。"><a href="#江主席曾经提出过一个”-五点共圆”的问题-引起了全国人民的大讨论-现在-这儿也有一个平面几何的问题-有一种特殊的多边形，这种多边形的所有顶点到原点的距离都相同。连接原点和该多边形的所有顶点可以得到-N条线段，也可以得到每一对相邻线段的夹角。现在给你这N个夹角的角度，请计算这个多边形的面积。" class="headerlink" title="江主席曾经提出过一个” 五点共圆”的问题, 引起了全国人民的大讨论.现在, 这儿也有一个平面几何的问题:有一种特殊的多边形，这种多边形的所有顶点到原点的距离都相同。连接原点和该多边形的所有顶点可以得到 N条线段，也可以得到每一对相邻线段的夹角。现在给你这N个夹角的角度，请计算这个多边形的面积。"></a>江主席曾经提出过一个” 五点共圆”的问题, 引起了全国人民的大讨论.<br/>现在, 这儿也有一个平面几何的问题:<br/>有一种特殊的多边形，这种多边形的所有顶点到原点的距离都相同。<br/>连接原点和该多边形的所有顶点可以得到 N条线段，也可以得到每一对相邻线段的夹角。<br/>现在给你这N个夹角的角度，请计算这个多边形的面积。</h4><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><h4 id="多组数据输入第一行包含两个整数-N-和-D-，分别表示多边形顶点的数量和它们到原点的距离。-3-lt-N-lt-10，1-lt-D-lt-10-下一行包含-N-个整数角度。保证这-N-个角度的总和始终是-360"><a href="#多组数据输入第一行包含两个整数-N-和-D-，分别表示多边形顶点的数量和它们到原点的距离。-3-lt-N-lt-10，1-lt-D-lt-10-下一行包含-N-个整数角度。保证这-N-个角度的总和始终是-360" class="headerlink" title="多组数据输入第一行包含两个整数 N 和 D ，分别表示多边形顶点的数量和它们到原点的距离。(3 &lt; = N &lt; = 10，1 &lt; = D &lt; = 10)下一行包含 N 个整数角度。保证这 N 个角度的总和始终是 360"></a>多组数据输入<br/>第一行包含两个整数 N 和 D ，分别表示多边形顶点的数量和它们到原点的距离。(3 &lt; = N &lt; = 10，1 &lt; = D &lt; = 10)<br/>下一行包含 N 个整数角度。保证这 N 个角度的总和始终是 360</h4><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><h4 id="对于每组数据-输出该多边形的面积-保留小数点后-3-位"><a href="#对于每组数据-输出该多边形的面积-保留小数点后-3-位" class="headerlink" title="对于每组数据,输出该多边形的面积,保留小数点后 3 位"></a>对于每组数据,输出该多边形的面积,保留小数点后 3 位</h4><h2 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">4 1<br>90 90 90 90<br>6 1<br>60 60 60 60 60 60<br></code></pre></div></td></tr></table></figure><h2 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">2.000<br>2.598<br></code></pre></div></td></tr></table></figure><h1 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h1><h2 id="根据题目的要求可以看出，题目大意为给出多边形的顶点个数和每个点到原点的距离，以及每两条边的夹角度数"><a href="#根据题目的要求可以看出，题目大意为给出多边形的顶点个数和每个点到原点的距离，以及每两条边的夹角度数" class="headerlink" title="根据题目的要求可以看出，题目大意为给出多边形的顶点个数和每个点到原点的距离，以及每两条边的夹角度数"></a>根据题目的要求可以看出，题目大意为给出多边形的顶点个数和每个点到原点的距离，以及每两条边的夹角度数</h2><h2 id="则对于每一部分三角形的面积，直接套用三角形面积公式S-1-2-a-b-sin-C。最后所有的三角块相加求和即为多边形的总面积。"><a href="#则对于每一部分三角形的面积，直接套用三角形面积公式S-1-2-a-b-sin-C。最后所有的三角块相加求和即为多边形的总面积。" class="headerlink" title="则对于每一部分三角形的面积，直接套用三角形面积公式S=1/2 * a* b*sin C。最后所有的三角块相加求和即为多边形的总面积。"></a>则对于每一部分三角形的面积，直接套用三角形面积公式S=1/2 * a* b*sin C。最后所有的三角块相加求和即为多边形的总面积。</h2><h1 id="解题代码"><a href="#解题代码" class="headerlink" title="解题代码"></a>解题代码</h1><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cmath&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span>&#123;<br>    <span class="hljs-keyword">int</span> n;<br>    <span class="hljs-keyword">double</span> d;<br>    <span class="hljs-keyword">const</span> <span class="hljs-keyword">double</span> PI = <span class="hljs-number">3.1415926</span>;<br>    <span class="hljs-keyword">while</span> (<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%lf&quot;</span>,&amp;n,&amp;d) != EOF)<br>    &#123;<br>        <span class="hljs-keyword">double</span> sum = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">double</span> a[<span class="hljs-number">12</span>] = &#123;&#125;;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++)<br>        &#123;<br>            <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%lf&quot;</span>,&amp;a[i]);<br>            sum += d*d*(<span class="hljs-built_in">sin</span>(PI*(a[i]/<span class="hljs-number">180</span>)))/<span class="hljs-number">2</span>;<br>        &#125;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.3lf\n&quot;</span>,sum);<br>    &#125;<br>    <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><h1 id="代码结束"><a href="#代码结束" class="headerlink" title="代码结束"></a>代码结束</h1>]]></content>
    
    
    <categories>
      
      <category>code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>水</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>To begin or not to begin</title>
    <link href="/2021/02/01/9,Tobeginornottobegin/"/>
    <url>/2021/02/01/9,Tobeginornottobegin/</url>
    
    <content type="html"><![CDATA[<h1 id="To-begin-or-not-to-begin"><a href="#To-begin-or-not-to-begin" class="headerlink" title="To begin or not to begin"></a>To begin or not to begin</h1><h2 id="简单"><a href="#简单" class="headerlink" title="简单"></a>简单</h2><span id="more"></span><The><h1 id="原题"><a href="#原题" class="headerlink" title="原题"></a>原题</h1><h4 id="A-box-contains-black-balls-and-a-single-red-ball-Alice-and-Bob-draw-balls-from-this-box-without-replacement-alternating-after-each-draws-until-the-red-ball-is-drawn-The-game-is-won-by-the-player-who-happens-to-draw-the-single-red-ball-Bob-is-a-gentleman-and-offers-Alice-the-choice-of-whether-she-wants-to-start-or-not-Alice-has-a-hunch-that-she-might-be-better-off-if-she-starts-after-all-she-might-succeed-in-the-first-draw-On-the-other-hand-if-her-first-draw-yields-a-black-ball-then-Bob’s-chances-to-draw-the-red-ball-in-his-first-draw-are-increased-because-then-one-black-ball-is-already-removed-from-the-box-How-should-Alice-decide-in-order-to-maximize-her-probability-of-winning-Help-Alice-with-decision"><a href="#A-box-contains-black-balls-and-a-single-red-ball-Alice-and-Bob-draw-balls-from-this-box-without-replacement-alternating-after-each-draws-until-the-red-ball-is-drawn-The-game-is-won-by-the-player-who-happens-to-draw-the-single-red-ball-Bob-is-a-gentleman-and-offers-Alice-the-choice-of-whether-she-wants-to-start-or-not-Alice-has-a-hunch-that-she-might-be-better-off-if-she-starts-after-all-she-might-succeed-in-the-first-draw-On-the-other-hand-if-her-first-draw-yields-a-black-ball-then-Bob’s-chances-to-draw-the-red-ball-in-his-first-draw-are-increased-because-then-one-black-ball-is-already-removed-from-the-box-How-should-Alice-decide-in-order-to-maximize-her-probability-of-winning-Help-Alice-with-decision" class="headerlink" title="A box contains black balls and a single red ball. Alice and Bob draw balls from this box without replacement, alternating after each draws until the red ball is drawn. The game is won by the player who happens to draw the single red ball. Bob is a gentleman and offers Alice the choice of whether she wants to start or not. Alice has a hunch that she might be better off if she starts; after all, she might succeed in the first draw. On the other hand, if her first draw yields a black ball, then Bob’s chances to draw the red ball in his first draw are increased, because then one black ball is already removed from the box. How should Alice decide in order to maximize her probability of winning? Help Alice with decision."></a>A box contains black balls and a single red ball. Alice and Bob draw balls from this box without replacement, alternating after each draws until the red ball is drawn. The game is won by the player who happens to draw the single red ball. Bob is a gentleman and offers Alice the choice of whether she wants to start or not. Alice has a hunch that she might be better off if she starts; after all, she might succeed in the first draw. On the other hand, if her first draw yields a black ball, then Bob’s chances to draw the red ball in his first draw are increased, because then one black ball is already removed from the box. How should Alice decide in order to maximize her probability of winning? Help Alice with decision.</h4><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><h4 id="Multiple-test-cases-number-of-test-cases≤50-process-till-end-of-input-For-each-case-a-positive-integer-k-1≤k≤10-5-is-given-on-a-single-line"><a href="#Multiple-test-cases-number-of-test-cases≤50-process-till-end-of-input-For-each-case-a-positive-integer-k-1≤k≤10-5-is-given-on-a-single-line" class="headerlink" title="Multiple test cases (number of test cases≤50), process till end of input.For each case, a positive integer k (1≤k≤10^5) is given on a single line."></a>Multiple test cases (number of test cases≤50), process till end of input.<br>For each case, a positive integer k (1≤k≤10^5) is given on a single line.</h4><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><h4 id="For-each-case-output-1-if-the-player-who-starts-drawing-has-an-advantage2-if-the-player-who-starts-drawing-has-a-disadvantage0-if-Alice’s-and-Bob’s-chances-are-equal-no-matter-who-starts-drawing-on-a-single-line"><a href="#For-each-case-output-1-if-the-player-who-starts-drawing-has-an-advantage2-if-the-player-who-starts-drawing-has-a-disadvantage0-if-Alice’s-and-Bob’s-chances-are-equal-no-matter-who-starts-drawing-on-a-single-line" class="headerlink" title="For each case, output:1, if the player who starts drawing has an advantage2, if the player who starts drawing has a disadvantage0, if Alice’s and Bob’s chances are equal, no matter who starts drawing on a single line."></a>For each case, output:<br>1, if the player who starts drawing has an advantage<br>2, if the player who starts drawing has a disadvantage<br>0, if Alice’s and Bob’s chances are equal, no matter who starts drawing on a single line.</h4><h2 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">1<br>2<br></code></pre></div></td></tr></table></figure><h2 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">0<br>1<br></code></pre></div></td></tr></table></figure><h1 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h1><h2 id="箱子中有k个黑球和1个红球，求先手和后手胜率的大小。"><a href="#箱子中有k个黑球和1个红球，求先手和后手胜率的大小。" class="headerlink" title="箱子中有k个黑球和1个红球，求先手和后手胜率的大小。"></a>箱子中有k个黑球和1个红球，求先手和后手胜率的大小。</h2><h2 id="找规律，从k-1，慢慢往后推就会发现先手k为奇数胜率相同，k为偶数胜率略高。"><a href="#找规律，从k-1，慢慢往后推就会发现先手k为奇数胜率相同，k为偶数胜率略高。" class="headerlink" title="找规律，从k == 1，慢慢往后推就会发现先手k为奇数胜率相同，k为偶数胜率略高。"></a>找规律，从k == 1，慢慢往后推就会发现先手k为奇数胜率相同，k为偶数胜率略高。</h2><h1 id="解题代码"><a href="#解题代码" class="headerlink" title="解题代码"></a>解题代码</h1><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cmath&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span>&#123;<br>    <span class="hljs-keyword">int</span> k;<br>    <span class="hljs-keyword">while</span> (<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;k) != EOF)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(k%<span class="hljs-number">2</span> == <span class="hljs-number">1</span>)&#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>,<span class="hljs-number">0</span>);<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(k%<span class="hljs-number">2</span> == <span class="hljs-number">0</span>)&#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>,<span class="hljs-number">1</span>);<br>        &#125;<br>    &#125;<br>    <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><h1 id="代码结束"><a href="#代码结束" class="headerlink" title="代码结束"></a>代码结束</h1>]]></content>
    
    
    <categories>
      
      <category>code</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>数字三角形</title>
    <link href="/2021/01/23/2,%E6%95%B0%E5%AD%97%E4%B8%89%E8%A7%92%E5%BD%A2/"/>
    <url>/2021/01/23/2,%E6%95%B0%E5%AD%97%E4%B8%89%E8%A7%92%E5%BD%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="数字三角形"><a href="#数字三角形" class="headerlink" title="数字三角形"></a>数字三角形</h1><span id="more"></span><The><h1 id="原题"><a href="#原题" class="headerlink" title="原题"></a>原题</h1><p>给定一个如下图所示的数字三角形，从顶部出发，在每一结点可以选择移动至其左下方的结点或移动至其右下方的结点，一直走到底层，要求找出一条路径，使路径上的数字的和最大。</p><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown"><span class="hljs-code">        7</span><br><span class="hljs-code">      3   8</span><br><span class="hljs-code">    8   1   0</span><br><span class="hljs-code">  2   7   4   4</span><br><span class="hljs-code">4   5   2   6   5</span><br></code></pre></div></td></tr></table></figure><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><h4 id="第一行包含整数n，表示数字三角形的层数。接下来n行，每行包含若干整数，其中第-i-行表示数字三角形第-i-层包含的整数。"><a href="#第一行包含整数n，表示数字三角形的层数。接下来n行，每行包含若干整数，其中第-i-行表示数字三角形第-i-层包含的整数。" class="headerlink" title="第一行包含整数n，表示数字三角形的层数。接下来n行，每行包含若干整数，其中第 i 行表示数字三角形第 i 层包含的整数。"></a>第一行包含整数n，表示数字三角形的层数。<br/>接下来n行，每行包含若干整数，其中第 i 行表示数字三角形第 i 层包含的整数。</h4><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><h4 id="输出一个整数，表示最大的路径数字和。"><a href="#输出一个整数，表示最大的路径数字和。" class="headerlink" title="输出一个整数，表示最大的路径数字和。"></a>输出一个整数，表示最大的路径数字和。</h4><h2 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h2><h4 id="1≤n≤500-−10000≤三角形中的整数≤10000"><a href="#1≤n≤500-−10000≤三角形中的整数≤10000" class="headerlink" title="1≤n≤500,−10000≤三角形中的整数≤10000"></a>1≤n≤500,<br/>−10000≤三角形中的整数≤10000</h4><h2 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">5<br>7<br>3 8<br>8 1 0 <br>2 7 4 4<br>4 5 2 6 5<br></code></pre></div></td></tr></table></figure><h2 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">30<br></code></pre></div></td></tr></table></figure><h1 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h1><h2 id="这个题目主要考查的是深搜"><a href="#这个题目主要考查的是深搜" class="headerlink" title="这个题目主要考查的是深搜"></a>这个题目主要考查的是深搜</h2><h2 id="从上加到下，找其中和最大的一列-但如果从上到下用一条一条的暴力搜索，肯定会超时。所以我们要换一个思路，从最下面往上加这样可以多条线一起进行缩小时间。"><a href="#从上加到下，找其中和最大的一列-但如果从上到下用一条一条的暴力搜索，肯定会超时。所以我们要换一个思路，从最下面往上加这样可以多条线一起进行缩小时间。" class="headerlink" title="从上加到下，找其中和最大的一列 但如果从上到下用一条一条的暴力搜索，肯定会超时。所以我们要换一个思路，从最下面往上加这样可以多条线一起进行缩小时间。"></a>从上加到下，找其中和最大的一列 <br/>但如果从上到下用一条一条的暴力搜索，肯定会超时。所以我们要换一个思路，从最下面往上加这样可以多条线一起进行缩小时间。</h2><h1 id="解题代码"><a href="#解题代码" class="headerlink" title="解题代码"></a>解题代码</h1><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cmath&gt;</span>  <span class="hljs-comment">// 总喜欢写一些莫名的头文件，不用管</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span>&#123;<br>    <span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> N = <span class="hljs-number">510</span>; <span class="hljs-comment">//数组范围</span><br>    <span class="hljs-keyword">int</span> n,m,j,k,i;<br>    <span class="hljs-keyword">int</span> a[N][N] = &#123;&#125;;<br>    cin&gt;&gt;n;  <br>    <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i &lt; n; i++)<br>    &#123;<br>        <span class="hljs-keyword">for</span> ( j = <span class="hljs-number">0</span>; j &lt; i+<span class="hljs-number">1</span>; j++)<br>        &#123;<br>            cin&gt;&gt;a[i][j];  <span class="hljs-comment">//对三角形进行赋值</span><br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(i = n<span class="hljs-number">-1</span> ; i &gt;= <span class="hljs-number">0</span> ; i--)&#123;<br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span> ; j &lt; i+<span class="hljs-number">1</span> ; j++)&#123;<br>            a[i][j] += <span class="hljs-built_in">max</span>(a[i+<span class="hljs-number">1</span>][j],a[i+<span class="hljs-number">1</span>][j+<span class="hljs-number">1</span>]);  让上一层加上下一层对应两个数的最大值，好使得总数最大；<br>        &#125;<br>    &#125;<br>    cout&lt;&lt;a[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]&lt;&lt;endl;  <span class="hljs-comment">//加到最后自然到了第一层的第一个，也同样是三角形中的最大值</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><h1 id="代码结束"><a href="#代码结束" class="headerlink" title="代码结束"></a>代码结束</h1>]]></content>
    
    
    <categories>
      
      <category>code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>搜索</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2016 ICPC Dalian-Find Small A</title>
    <link href="/2021/01/23/7,FindSmallA/"/>
    <url>/2021/01/23/7,FindSmallA/</url>
    
    <content type="html"><![CDATA[<h1 id="2016-ICPC-Dalian-Find-Small-A"><a href="#2016-ICPC-Dalian-Find-Small-A" class="headerlink" title="2016 ICPC Dalian-Find Small A"></a>2016 ICPC Dalian-Find Small A</h1><h2 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h2><span id="more"></span><The><h1 id="原题"><a href="#原题" class="headerlink" title="原题"></a>原题</h1><h4 id="As-is-known-to-all-the-ASCII-of-character-‘a’-is-97-Now-find-out-how-many-character-‘a’-in-a-group-of-given-numbers-Please-note-that-the-numbers-here-are-given-by-32-bits’-integers-in-the-computer-That-means-1digit-represents-4-characters-one-character-is-represented-by-8-bits’-binary-digits"><a href="#As-is-known-to-all-the-ASCII-of-character-‘a’-is-97-Now-find-out-how-many-character-‘a’-in-a-group-of-given-numbers-Please-note-that-the-numbers-here-are-given-by-32-bits’-integers-in-the-computer-That-means-1digit-represents-4-characters-one-character-is-represented-by-8-bits’-binary-digits" class="headerlink" title="As is known to all,the ASCII of character ‘a’ is 97. Now,find out how many character ‘a’ in a group of given numbers. Please note that the numbers here are given by 32 bits’ integers in the computer.That means,1digit represents 4 characters(one character is represented by 8 bits’ binary digits)."></a>As is known to all,the ASCII of character ‘a’ is 97. Now,find out how many character ‘a’ in a group of given numbers. Please note that the numbers here are given by 32 bits’ integers in the computer.That means,1digit represents 4 characters(one character is represented by 8 bits’ binary digits).</h4><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><h4 id="The-input-contains-a-set-of-test-data-The-first-number-is-one-positive-integer-N-1≤N≤100-and-then-N-positive-integersai-1≤-ai≤2-32-1-follow"><a href="#The-input-contains-a-set-of-test-data-The-first-number-is-one-positive-integer-N-1≤N≤100-and-then-N-positive-integersai-1≤-ai≤2-32-1-follow" class="headerlink" title="The input contains a set of test data.The first number is one positive integer N (1≤N≤100),and then N positive integersai (1≤ ai≤2^32 - 1) follow"></a>The input contains a set of test data.The first number is one positive integer N (1≤N≤100),and then N positive integersai (1≤ ai≤2^32 - 1) follow</h4><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><h4 id="Output-one-line-including-an-integer-representing-the-number-of-‘a’-in-the-group-of-given-numbers"><a href="#Output-one-line-including-an-integer-representing-the-number-of-‘a’-in-the-group-of-given-numbers" class="headerlink" title="Output one line,including an integer representing the number of ‘a’ in the group of given numbers."></a>Output one line,including an integer representing the number of ‘a’ in the group of given numbers.</h4><h2 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">3<br>97 24929 100<br></code></pre></div></td></tr></table></figure><h2 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">3<br></code></pre></div></td></tr></table></figure><h1 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h1><h2 id="在ASCII码中，a的值为97。现在给你一组整数，请你计算里面有多少个a。请注意，所给的数字在计算机中都是32位整数，而一个字符占8位"><a href="#在ASCII码中，a的值为97。现在给你一组整数，请你计算里面有多少个a。请注意，所给的数字在计算机中都是32位整数，而一个字符占8位" class="headerlink" title="在ASCII码中，a的值为97。现在给你一组整数，请你计算里面有多少个a。请注意，所给的数字在计算机中都是32位整数，而一个字符占8位"></a>在ASCII码中，a的值为97。现在给你一组整数，请你计算里面有多少个a。<br/>请注意，所给的数字在计算机中都是32位整数，而一个字符占8位</h2><h2 id="只要将数字转化成二进制代码在八位八位的计算即可。"><a href="#只要将数字转化成二进制代码在八位八位的计算即可。" class="headerlink" title="只要将数字转化成二进制代码在八位八位的计算即可。"></a>只要将数字转化成二进制代码在八位八位的计算即可。</h2><h1 id="解题代码"><a href="#解题代码" class="headerlink" title="解题代码"></a>解题代码</h1><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cmath&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span>&#123;<br>    <span class="hljs-keyword">int</span> n;<br>    <span class="hljs-keyword">int</span> s = <span class="hljs-number">0</span>;<br>    cin&gt;&gt;n;<br>    <span class="hljs-keyword">while</span> (n--)<br>    &#123;<br>        <span class="hljs-keyword">int</span> x;<br>        cin&gt;&gt;x;<br>        <span class="hljs-keyword">int</span> a[<span class="hljs-number">33</span>] = &#123;&#125;,i = <span class="hljs-number">31</span>;<br>        <span class="hljs-keyword">while</span> (x != <span class="hljs-number">0</span>)<br>        &#123;<br>            a[i] = x%<span class="hljs-number">2</span>;<br>            x = x/<span class="hljs-number">2</span>;<br>            i--;<br>        &#125;<br>        <span class="hljs-keyword">if</span>((a[<span class="hljs-number">0</span>] == <span class="hljs-number">0</span>) &amp;&amp; (a[<span class="hljs-number">1</span>] == <span class="hljs-number">1</span>) &amp;&amp; (a[<span class="hljs-number">2</span>] == <span class="hljs-number">1</span>) &amp;&amp; (a[<span class="hljs-number">3</span>] == <span class="hljs-number">0</span>) &amp;&amp; (a[<span class="hljs-number">4</span>] == <span class="hljs-number">0</span>) &amp;&amp; (a[<span class="hljs-number">5</span>] == <span class="hljs-number">0</span>) &amp;&amp; (a[<span class="hljs-number">6</span>] == <span class="hljs-number">0</span>) &amp;&amp; (a[<span class="hljs-number">7</span>] == <span class="hljs-number">1</span>))&#123;<br>            s++;<br>        &#125;<br>         <span class="hljs-keyword">if</span>((a[<span class="hljs-number">8</span>] == <span class="hljs-number">0</span>) &amp;&amp; (a[<span class="hljs-number">9</span>] == <span class="hljs-number">1</span>) &amp;&amp; (a[<span class="hljs-number">10</span>] == <span class="hljs-number">1</span>) &amp;&amp; (a[<span class="hljs-number">11</span>] == <span class="hljs-number">0</span>) &amp;&amp; (a[<span class="hljs-number">12</span>] == <span class="hljs-number">0</span>) &amp;&amp; (a[<span class="hljs-number">13</span>] == <span class="hljs-number">0</span>) &amp;&amp; (a[<span class="hljs-number">14</span>] == <span class="hljs-number">0</span>) &amp;&amp; (a[<span class="hljs-number">15</span>] == <span class="hljs-number">1</span>))&#123;<br>            s++;<br>        &#125; <span class="hljs-keyword">if</span>((a[<span class="hljs-number">16</span>] == <span class="hljs-number">0</span>) &amp;&amp; (a[<span class="hljs-number">17</span>] == <span class="hljs-number">1</span>) &amp;&amp; (a[<span class="hljs-number">18</span>] == <span class="hljs-number">1</span>) &amp;&amp; (a[<span class="hljs-number">19</span>] == <span class="hljs-number">0</span>) &amp;&amp; (a[<span class="hljs-number">20</span>] == <span class="hljs-number">0</span>) &amp;&amp; (a[<span class="hljs-number">21</span>] == <span class="hljs-number">0</span>) &amp;&amp; (a[<span class="hljs-number">22</span>] == <span class="hljs-number">0</span>) &amp;&amp; (a[<span class="hljs-number">23</span>] == <span class="hljs-number">1</span>))&#123;<br>            s++;<br>        &#125; <span class="hljs-keyword">if</span>((a[<span class="hljs-number">24</span>] == <span class="hljs-number">0</span>) &amp;&amp; (a[<span class="hljs-number">25</span>] == <span class="hljs-number">1</span>) &amp;&amp; (a[<span class="hljs-number">26</span>] == <span class="hljs-number">1</span>) &amp;&amp; (a[<span class="hljs-number">27</span>] == <span class="hljs-number">0</span>) &amp;&amp; (a[<span class="hljs-number">28</span>] == <span class="hljs-number">0</span>) &amp;&amp; (a[<span class="hljs-number">29</span>] == <span class="hljs-number">0</span>) &amp;&amp; (a[<span class="hljs-number">30</span>] == <span class="hljs-number">0</span>) &amp;&amp; (a[<span class="hljs-number">31</span>] == <span class="hljs-number">1</span>))&#123;<br>            s++;<br>        &#125;<br>    &#125;<br>    cout&lt;&lt;s&lt;&lt;endl;<br>    <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><h1 id="代码结束"><a href="#代码结束" class="headerlink" title="代码结束"></a>代码结束</h1>]]></content>
    
    
    <categories>
      
      <category>code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>水</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Subsequence（尺取法）</title>
    <link href="/2021/01/23/6,Subsequence/"/>
    <url>/2021/01/23/6,Subsequence/</url>
    
    <content type="html"><![CDATA[<h1 id="Subsequence"><a href="#Subsequence" class="headerlink" title="Subsequence"></a>Subsequence</h1><h2 id="（尺取法）"><a href="#（尺取法）" class="headerlink" title="（尺取法）"></a>（尺取法）</h2><span id="more"></span><The><h1 id="原题-poj-3061"><a href="#原题-poj-3061" class="headerlink" title="原题(poj 3061 )"></a>原题(poj 3061 )</h1><h4 id="A-sequence-of-N-positive-integers-10-lt-N-lt-100-000-each-of-them-less-than-or-equal-10000-and-a-positive-integer-S-S-lt-100-000-000-are-given-Write-a-program-to-find-the-minimal-length-of-the-subsequence-of-consecutive-elements-of-the-sequence-the-sum-of-which-is-greater-than-or-equal-to-S"><a href="#A-sequence-of-N-positive-integers-10-lt-N-lt-100-000-each-of-them-less-than-or-equal-10000-and-a-positive-integer-S-S-lt-100-000-000-are-given-Write-a-program-to-find-the-minimal-length-of-the-subsequence-of-consecutive-elements-of-the-sequence-the-sum-of-which-is-greater-than-or-equal-to-S" class="headerlink" title="A sequence of N positive integers (10 &lt; N &lt; 100 000), each of them less than or equal 10000, and a positive integer S (S &lt; 100 000 000) are given. Write a program to find the minimal length of the subsequence of consecutive elements of the sequence, the sum of which is greater than or equal to S."></a>A sequence of N positive integers (10 &lt; N &lt; 100 000), each of them less than or equal 10000, and a positive integer S (S &lt; 100 000 000) are given. Write a program to find the minimal length of the subsequence of consecutive elements of the sequence, the sum of which is greater than or equal to S.</h4><h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><h4 id="The-first-line-is-the-number-of-test-cases-For-each-test-case-the-program-has-to-read-the-numbers-N-and-S-separated-by-an-interval-from-the-first-line-The-numbers-of-the-sequence-are-given-in-the-second-line-of-the-test-case-separated-by-intervals-The-input-will-finish-with-the-end-of-file"><a href="#The-first-line-is-the-number-of-test-cases-For-each-test-case-the-program-has-to-read-the-numbers-N-and-S-separated-by-an-interval-from-the-first-line-The-numbers-of-the-sequence-are-given-in-the-second-line-of-the-test-case-separated-by-intervals-The-input-will-finish-with-the-end-of-file" class="headerlink" title="The first line is the number of test cases. For each test case the program has to read the numbers N and S, separated by an interval, from the first line. The numbers of the sequence are given in the second line of the test case, separated by intervals. The input will finish with the end of file."></a>The first line is the number of test cases. For each test case the program has to read the numbers N and S, separated by an interval, from the first line. The numbers of the sequence are given in the second line of the test case, separated by intervals. The input will finish with the end of file.</h4><h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><h4 id="For-each-the-case-the-program-has-to-print-the-result-on-separate-line-of-the-output-file-if-no-answer-print-0"><a href="#For-each-the-case-the-program-has-to-print-the-result-on-separate-line-of-the-output-file-if-no-answer-print-0" class="headerlink" title="For each the case the program has to print the result on separate line of the output file.if no answer, print 0."></a>For each the case the program has to print the result on separate line of the output file.if no answer, print 0.</h4><h2 id="Sample-Input："><a href="#Sample-Input：" class="headerlink" title="Sample Input："></a>Sample Input：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">2<br>10 15<br>5 1 3 5 10 7 4 9 2 8<br>5 11<br>1 2 3 4 5<br></code></pre></div></td></tr></table></figure><h2 id="Sample-Output："><a href="#Sample-Output：" class="headerlink" title="Sample Output："></a>Sample Output：</h2><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">2<br>3<br></code></pre></div></td></tr></table></figure><h1 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h1><h1 id="大意"><a href="#大意" class="headerlink" title="大意"></a>大意</h1><h2 id="给定数组a，求其符合∑a-i-gt-S-的最短子数列。这个题目可用尺取法或二分法（但我二分法不会-ㄒoㄒ-）"><a href="#给定数组a，求其符合∑a-i-gt-S-的最短子数列。这个题目可用尺取法或二分法（但我二分法不会-ㄒoㄒ-）" class="headerlink" title="给定数组a，求其符合∑a[i] &gt; S 的最短子数列。这个题目可用尺取法或二分法（但我二分法不会/(ㄒoㄒ)/~~）"></a>给定数组a，求其符合∑a[i] &gt; S 的最短子数列。<br/>这个题目可用尺取法或二分法（但我二分法不会/(ㄒoㄒ)/~~）</h2><p><img src="/images/chiqu1.jpg" alt="尺取"></p><h2 id="形同上图-对于这个算法，因为t最多变化n次，因此只需要O-n-的复杂度就可以求解这个问题了。像这样反复地推进区间的开头和末尾，来求取满足条件的最小区间的方法被称为尺取法。"><a href="#形同上图-对于这个算法，因为t最多变化n次，因此只需要O-n-的复杂度就可以求解这个问题了。像这样反复地推进区间的开头和末尾，来求取满足条件的最小区间的方法被称为尺取法。" class="headerlink" title="形同上图:  对于这个算法，因为t最多变化n次，因此只需要O(n)的复杂度就可以求解这个问题了。像这样反复地推进区间的开头和末尾，来求取满足条件的最小区间的方法被称为尺取法。"></a>形同上图:  <br/>对于这个算法，因为t最多变化n次，因此只需要O(n)的复杂度就可以求解这个问题了。像这样反复地推进区间的开头和末尾，来求取满足条件的最小区间的方法被称为尺取法。</h2><h1 id="解题代码"><a href="#解题代码" class="headerlink" title="解题代码"></a>解题代码</h1><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span>&#123;<br>    <span class="hljs-keyword">int</span> t;<br>    cin&gt;&gt;t;<br>    <span class="hljs-keyword">while</span> (t--)&#123;<br>        <span class="hljs-keyword">int</span> a[<span class="hljs-number">1000</span>] = &#123;&#125;;<br>        <span class="hljs-keyword">int</span> n,i,s;<br>        <span class="hljs-keyword">int</span> sum = <span class="hljs-number">0</span>;<br>        cin&gt;&gt;n&gt;&gt;s;<br>        <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; n; i++)&#123;<br>            cin&gt;&gt;a[i];<br>        &#125;<br>        <span class="hljs-keyword">int</span> ans = n+<span class="hljs-number">10</span>,left = <span class="hljs-number">0</span>,right = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>)<br>        &#123;<br>            <span class="hljs-keyword">while</span> (sum &lt; s &amp;&amp; right &lt; n)  <span class="hljs-comment">//当和大于s并且没有到最后就继续向后加</span><br>            &#123;<br>                sum += a[right];<br>                right++;<br>            &#125;<br>            <span class="hljs-keyword">if</span>(sum &lt; s)&#123;<br>                <span class="hljs-comment">// ans = n+1;  //千万不能写在这里 否则在while的下一个循环时sum&lt;s会将上一次的挤掉（写在while（1）前面）</span><br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>            ans = <span class="hljs-built_in">min</span>(ans,right-left);  减去前面的好使尺子向前移动<br>            sum = sum-a[left];<br>            left++;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(ans &lt;= n)cout&lt;&lt;ans&lt;&lt;endl;<br>        <span class="hljs-keyword">else</span> cout&lt;&lt;<span class="hljs-number">0</span>&lt;&lt;endl;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><h1 id="代码结束"><a href="#代码结束" class="headerlink" title="代码结束"></a>代码结束</h1>]]></content>
    
    
    <categories>
      
      <category>code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>尺取</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
